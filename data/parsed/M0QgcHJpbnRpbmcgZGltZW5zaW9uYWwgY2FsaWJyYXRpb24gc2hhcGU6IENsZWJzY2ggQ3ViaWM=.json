{"title": "3D printing dimensional calibration shape", "authors": "Clebsch Cubic; Andr\u00e9 F Van Der Merwe; Janko B\u00f6hm; Magdaleen S Marais", "pub_date": "2015-12-30", "abstract": "3D printing and other layer manufacturing processes are challenged by dimensional accuracy. Several techniques are used to validate and calibrate dimensional accuracy through the complete building envelope. The validation process involves the growing and measuring of a shape with known parameters. The measured result is compared with the intended digital model. Processes with the risk of deformation after time or post processing may find this technique beneficial. We propose to use objects from algebraic geometry as test shapes. A cubic surface is given as the zero set of a 3rd degree polynomial with 3 variables. A class of cubics in real 3D space contains exactly 27 real lines. We provide a library for the computer algebra system Singular which, from 6 given points in the plane, constructs a cubic and the lines on it. A surface shape derived from a cubic offers simplicity to the dimensional comparison process, in that the straight lines and many other features can be analytically determined and easily measured using non-digital equipment. For example, the surface contains so-called Eckardt points, in each of which three of the lines intersect, and also other intersection points of pairs of lines. Distances between these intersection points can easily be measured, since the points are connected by straight lines. At all intersection points of lines, angles can be verified. Hence, many features distributed over the build volume are known analytically, and can be used for the validation process. Due to the thin shape geometry the material required to produce an algebraic surface is minimal. This paper is the first in a series that proposes the process chain to first define a cubic with a configuration of lines in a given print volume and then to develop the point cloud for the final manufacturing. Simple measuring techniques are recommended.", "sections": [{"heading": "Introduction", "text": "This paper is the first in a series to investigate whether cubic surface shapes, and specifically the Clebsch cubic, can be used in 3D printing build volume accuracy. In this initial paper the phases of development are proposed and the authors attempt to determine the mathematical base for calculating with cubic surfaces. Various build volumes, growing techniques and materials may require slight adjustments due to its unique characteristics. However, the basic shape and mathematical approach remains the same for all variants. The ultimate aim is to have a standard Clebsch cubic shape which can be grown on any platform in any material, and in any build volume size. The research phases proposed are an initial analytical mathematical model, then an engine which converts from the analytical model to a point cloud, then a digital domain simulated growth, followed by an actual hardware printing phase, and lastly a reverse engineering phase. The initial mathematical model is developed from ground rules to provide others the fundamental information for parallel development. The input to the mathematical model, based on the mathematical formulations found by Clebsch and others, is the extent of the build volume. The open source computer algebra system Singular is used for this conversion. The outputs from the mathematical model is a three dimensional shape in analytical mathematical formulation, the formulas for 27 straight lines, the coordinates of the points where the lines cross, and the angles between the lines. After printing, the line straightness is one indicator of the dimensional accuracy. Another indicator is the angles between lines. The coordinate positioning of the cross points, and the thickness of the cubic's vanes could also be measures. This model is developed and suggested in the second part of this paper. The engine which converts the analytical mathematical formulation to a printable point cloud would typically be programmed in Matlab and later in C++. The inputs are the three dimensional mathematical shape of the Clebsch cubic, and the formulas of the 27 straight lines that we want to use as part of the dimensional accuracy measurement. Note that the straight lines will have to be highlighted in some way for the reverse engineering process to pick it up. Several ways could be used to highlight the lines: generating cylinders around the lines with diameter larger than the cubics vane thickness, thinning the vanes along the lines, or perforating the vanes along the lines, are examples. The output of this engine would be a point cloud in an STL format or similar. In phase three of this project we would attempt to compare the point cloud with the initial analytical line formulas. This comparison can be done on a CAD platform, but would typically be a manual process. Several alternatives of the previous phases will be evaluated for accuracy. All work up to this point is in the digital domain. This phase is to ensure accuracy and robustness of self developed tools by comparison with trusted commercially available CAD platforms. The output of this phase is a report which defines constraints and extents within which these techniques are deemed accurate in the digital domain. Phase four will see the growing of hard copies in various materials on various platforms. This phase will report on any manufacturing issues on any of the platforms using the extent of materials chosen. Phase five will reverse engineer hardware shapes to compare with the initial intended analytical shape. In this phase it will be determined to what extent the use of the 27 straight lines and their angles is an indication of dimensional accuracy of the process. This phase will seek to propose an economical method of measuring dimensional accuracy of the complete building envelope. This paper starts with the mathematical setup on which the description of the cubic and the lines are based. Then a reference to the mathematical origins of the cubic surfaces is made, followed by the derivation of the surface equation and the lines. Finally an example output from the computer algebra library and explicit data for the Clebsch cubic is given.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "Algebraic varieties", "text": "We first set the mathematical framework used to describe the cubic and the lines on it. Let K be either the real numbers R or the complex numbers C. The set of lines through the origin in K n+1 is called projective space and is denoted P n K . We will write (x 0 : . . . : x n ) for the line with direction (x 0 , . . . , x n ) = 0. There is an inclusion of usual n-space to projective space K n -\u2192 P n K , (x 1 , . . . , x n ) -\u2192 (1 : x 1 : . . . : x n ). This map is referred to as an affine chart. The complement of the image is called the plane at infinity (the horizon in a perspective drawing). An algebraic variety V (f 1 , . . . , f r ) \u2282 P n K is the common zero set of homogeneous polynomials\nf i \u2208 K[x 0 , . . . , x n ].\nAlgebraic varieties are studied in algebraic geometry, which forms a central branch of classical mathematics. It has important applications, e.g., in cryptography, robotics, and computational biology. Algebraic varieties have the advantage over zero sets of non-polynomial equations that they can easily be handled by the means of computer algebra. For computing with polynomials we make use of the open-source computer algebra system Singular [8]. Using projective space in the development of the theory, avoids the problem that some features of an algebraic variety (e.g. a line on it) may be contained in the plane at infinity. For an introduction to algebraic geometry, computer algebra, and its applications see, e.g. [6].", "publication_ref": ["b7", "b5"], "figure_ref": [], "table_ref": []}, {"heading": "Historic overview and derivation of the fundamental properties of cubic hypersurfaces", "text": "Starting in the second half of the 19th century, Clebsch, Klein, Salmon, Coble and many other mathematicians investigated cubic surfaces in P 3 C , which are given by a single 3rd degree polynomial. In 1849, Arthur Cayley [2] and George Salmon [11] found: Theorem 3.1. Every smooth cubic surface in P 3  C contains exactly 27 lines. Here smooth means, that C has in every point a well-defined tangent plane. In algebraic geometry there is a process, called blowup, which replaces in a variety a given point by a line and is a 1 : 1 map everywhere else. In 1871 Alfred Clebsch [4] proved (see also [3]): Theorem 3.2. Every smooth cubic surface in P 3 C is the blowup of P 2 C in 6 points. In the following, let P 1 , . . . , P 6 \u2208 P 2 K be points in general position, that is, no three are on a line and not all of them on a conic. Remark 3.3. The homogeneous linear polynomial l i,j (t) := det (P i , P j , t) := det\n\uf8eb \uf8ed P i,0 P j,0 t 0 P i,1 P j,1 t 1 P i,2 P j,2 t 2 \uf8f6 \uf8f8 \u2208 K[t 0 , t 1 , t 2 ]\ndefines in P 2 K the line through P i and P j . Proposition 3.4. [5] The blowup C = C (P1,...,P6) of P 2 K in the points P i is the smallest algebraic variety (with respect to inclusion) containing the image of \u03d5 (P1,...,P6) :\nP 2 K \\{P 1 , . . . P 6 } -\u2192 P 5 K (t 0 : t 1 : t 2 ) -\u2192 (\u03d5 0 (t) : . . . : \u03d5 5 (t))\n(defined on P 2 K except at the points P 1 , . . . P 6 ), where is the golden ratio. These points correspond to the diagonals in an icosahedron. The Clebsch cubic with K = R contains 27 real lines.\n\u03d5 0 = l 2,5 l 1,3 l 4,6 + l 5,1 l 4,2 l 3,6 + l 1,4 l 3,5 l 2,6 + l 4,3 l 2,\nRemark 3.6. The number |i, j; k, l; m, n| = det det (P i , P j , P m ) det (P i , P j , P n ) det (P k , P l , P m ) det (P k , P l , P n ) , vanishes if the lines defined by l i,j (t), l k,l (t) and l m,n (t) in P 2 K meet in one point. Theorem 3.7. [5,7] Consider the skew-symmetric matrix \n(A i,j ) = \uf8eb \uf8ec \uf8ec \uf8ec \uf8ed 0 |1\n\uf8f6 \uf8f7 \uf8f7 \uf8f7 \uf8f8 \u2208 K 6\u00d76\nwhere the entries are defined as in Remark 3.6, and write for the sum of the entries of the i-th row\na i = 6 j=1 A i,j .\nThen C is given by the equations\nx 3 0 + . . . + x 3 5 = 0 x 0 + . . . + x 5 = 0 a 0 \u2022 x 0 + . . . + a 5 \u2022 x 5 = 0.\nRemark 3.8. Using the ordering of the P i from Remark 3.5, we obtain for the Clebsch cubic surface a 0 = a 1 = a 2 = a 3 = a 4 = 1 and a 5 = -5.\nRemark 3.9. For a subset S \u2282 P n C we define I(S) as the ideal of all f \u2208 C[x 0 , . . . , x n ] with f (x) = 0 for all x \u2208 S. So V (I(S)) is the smallest algebraic variety (with respect to inclusion) containing S. The ideal generated by the \u03d5 i is \u03d5 0 , . . . , \u03d5 5 = I(P 1 ) \u2229 ... \u2229 I(P 6 ).\nWith the ring homomorphism\n\u03c8 (P1,...,P6) : C[x 0 , . . . , x 5 ] -\u2192 C[t 0 , t 1 , t 2 ] x i -\u2192 \u03d5 i\nwe have I(C) = ker \u03c8 (P1,...,P6) = x 3 0 + ... + x 3 5 , x 0 + ... + x 5 , a 0 x 0 + ... + a 5 x 5 . Remark 3.10. Eliminating two variables by the two linear equations, C can be considered as a subset of P 3 K .\nNote that a plane intersects C in an irreducible plane cubic, a union of a conic and a line, or in three lines. Definition 3.11. A tritangent plane H to C is a plane, such that H \u2229 C consists out of three lines.\nRemark 3.12. A tritangent plane H to C is called generic if the three lines pairwise intersect in three distinct points. Then H is tangent to C in each of the three points.\nIf H is not generic, then the three lines on C intersect in a single point. This point is called an Eckardt point of C.\nSince in an Eckardt point the three lines are tangent to C, they are coplanar, hence, lie on a tritangent plane. So, the Eckardt points are in one-to-one correspondence to the non-generic tritangent planes.\nTheorem 3.13. [5,2] There are 45 tritangent planes to C:\n1. Of these, 15 are given by the equations\nx i + x j = 0 for 0 \u2264 i < j \u2264 5.\n2. Write M for the set of 2-element subsets of {1, . . . , 6}, and S(M ) for the set of permutations of M . The remaining 30 tritangent planes are then\n(m i,j -d 2 ) \u2022 (x i + x j ) -(m k,l + d 2 ) \u2022 (x k + x l ) = 0 where {i,j} {k,l} {m,n} \u2208 S(M ) is a 3-cycle of pairwise disjoint elements of M , d 2 = det det (P3, P4, P1) \u2022 det (P5, P6, P1) det (P5, P3, P1) \u2022 det (P4, P6, P1) det (P3, P4, P2) \u2022 det (P5, P6, P2) det (P5, P3, P2) \u2022 det (P4, P6, P2) and m i,j = s<t a s a t + 2(a 2 i + a 2 j + a i a j ),\nwhere a i is as defined in Theorem 3.7.\nRemark 3.14. Possible numbers for Eckardt points are 1, 2, 3, 4, 6, 9, 10, 18. The Clebsch cubic is the unique cubic with 10 Eckardt points. The Fermat cubic V (x 3 0 + . . . + x 3 3 ) is the unique cubic with the maximum possible number of 18 Eckardt points, however, only 3 of the lines on the Fermat cubic are defined over R.\nRemark 3.15. Every line on C lies on 5 tritangent planes. Hence, any line on C is the intersection of the planes x 0 + . . . + x 5 = 0, a 0 x 0 + ... + a 5 x 5 = 0 and two tritangent planes (see Remark 3.10). Remark 3.16. After permuting the coordinates we may assume that a 5 = 0. Then by eliminating x 4 and x 5 via the two linear equations of C, we obtain\nC = V (F ) \u2282 P 3 K with a homogeneous cubic polynomial F \u2208 K[x 0 , x 1 , x 2 , x 3 ].\nExample 3.17. The Clebsch Cubic is then given by\nF = x 3 0 + x 3 1 + x 3 2 + x 3 3 -(x 0 + x 1 + x 2 + x 3 ) 3 .\nRemark 3.18. For the Clebsch cubic, as well as cubics \"close\" to it in the sense of the position of P 1 , . . . , P 6 , the transformation\nx 0 = y 0 -y 3 - \u221a 2y 1 x 2 = y 0 + y 3 + \u221a 2y 2 x 1 = y 0 -y 3 + \u221a 1 x 3 = -y 0 -y 3 + \u221a 2y 2\nof the coordinate system with inverse\ny 0 = x 0 + x 1 + x 2 -x 3 y 2 = \u221a 2(x 2 + x 3 ) y 1 = \u221a 2(-x 0 + x 1 ) y 3 = -x 0 -x 1 + x 2 -x 3\nachieves that all 27 lines, for K = R, are visible in the affine chart\nK 3 -\u2192 P 3 K , (y 1 , y 2 , y 3 ) -\u2192 (1 : y 1 : y 2 : y 3 ).\nMoreover, they all pass through a ball with radius 6 around 0. In the affine chart we obtain a socalled affine cubic hypersurface C \u2282 K 3 given by a single, non-homogeneous 3rd degree polynomial\nf \u2208 K[y 1 , y 2 , y 3 ].", "publication_ref": ["b1", "b10", "b3", "b2", "b4", "b4", "b6", "b4", "b1"], "figure_ref": [], "table_ref": []}, {"heading": "Implementation in Singular", "text": "We have implemented the constructions above in the library cubic.lib [1] for the open-source computer algebra system Singular [8]. For an introduction to the language of Singular see [10]. Specifically, from 6 points in general position (with coordinates in Q or an algebraic extension thereof), we give a function to obtain the cubic C \u2282 P 5 K , its projection C \u2282 P 3 K and the affine cubic hypersurface C \u2282 K 3 . Moreover, we compute the parametrizations\nP 2 K \\{P 1 , . . . , P 6 } -\u2192 C -\u2192 C\nand an affine parametrization\nP 2 K \\V (\u03d5 0 + \u03d5 1 + \u03d5 2 -\u03d5 3 ) -\u2192 C .\nFinally, we compute the lines on C, C and C in implicit and parametric form, as well as the Eckardt points. We demonstrate key parts of our library, considering the Clebsch cubic as an example: We specify a list P with the points P 1 , . . . , P 6 : > number g = (1 + a)/2; > list P = vector(0,1,-g), vector(g,0,1), vector(1,g,0), vector(1,-g,0), vector(0,1,g), vector(-g,0,1); We compute the equation of C : > poly f = cubic(P); The following command returns a list of all lines on C , each specified by 2 linear equations: > list L = lines(P);\n> L[1]; [1] = x0 + x1 [2] = x2 + x3\nWe compute a list of Eckardt points, each specified by 3 linear equations:\n> list E = EckardtPoints(P); > E[1]; [1] = x0 [2] = x1 [3] = x2 + x3\nNote that, by the commands affineCubic, affineLines and affineEckardtPoints, one can also obtain the affine cubic C and the corresponding lines and Eckardt points, respectively. Moreover, the functions paramLines and affineParamLines compute parametrizations of the lines on C and C , respectively.\nIf, in addition to Singular, the program Surf [9] is installed, C can be visualized by: > LIB \"surf.lib\"; > plot(affineCubic(P)); It also can plot hyperplane sections of a surface. Hence, we can visualize the lines on the cubic by intersecting with tritangent planes, see Figure 1. In this section we give the explicit data required for the dimensional comparison process for the Clebsch cubic (i.e. for the choice of the six points given by the diagonals in an icosahedron). In the following let a = \u221a 5 and c = \u221a 2. The cubic C is the zero set in K 3 of the equation 2cy The lines on C given in implicit form (by two linear equations each) as well as their parametrizations (specified as maps K \u2192 K 3 , s \u2192 (\u03c8 1 (s), \u03c8 2 (s), \u03c8 3 (s))) are specified in Table 5. The 10 Eckardt points Implicit Parametric ", "publication_ref": ["b0", "b7", "b9", "b8"], "figure_ref": ["fig_3"], "table_ref": []}, {"heading": "Conclusion", "text": "A general cubic surface contains 27 lines. For the Clebsch cubic all lines are on its shaped surface defined over the real numbers. These straight lines are determined analytically and are proposed for use to measure the build accuracy of a 3D printing process using even non digital techniques. The straight lines extend to the build volume perimeter and are structurally supported by the cubic surface. It is proposed that the lines are \"highlighted\" to stand out from the cubic for easy identification and physical measurement. The development procedure is outlined in this paper and is proposed as phases of the project. The first phase, which is descibed by this paper, is the mathematical description of cubic surfaces and the formulas of its straight lines. Future papers will present the results from the next phases that would firstly digitally test the accuracy and lastly produce physical parts for reverse engineering quality control purposes. Moreover, we will describe a method to specify 6 lines and then derive a cubic test shape containing these given lines.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "", "text": ", 0, s y 2 -1 ac+2c\n\u2022 y 3 + 5 ac , y\n, y 1 -11 ac+4c\n\u2022 y 3 -3 ac+2c\nTable 1: Lines on the Clebsch cubic in implicit and parametric form on C have projective coordinates (-1 : 1 : 0 : 0) (-1 : 0 : 1 : 0) (0 : -1 : 1 : 0) (-1 : 0 : 0 : 1) (0 : -1 : 0 : 1) (0 : 0 : -1 : 1) (1 : 0 : 0 : 0) (0 : 1 : 0 : 0) (0 : 0 : 1 : 0) (0 : 0 : 0 : 1).\nHence (after applying the transformation of Remark 3.18 and passing to the affine chart), the cubic C contains 7 of them with affine coordinates\nthe remaining three of them lying at the plane at infinity y 0 = 0 with projective coordinates (0 : 1 : 0 : 0), (0 : 1 : 1 : c), (0 : -1 : 1 : c).\nUsing the implicit equations of the lines, it is easy to determine, which lines pass through which Eckardt points. The angle \u03b1 beween two such lines with direction vectors v 1 and v 2 can be calculated via the well-known formula cos(\u03b1) = v1,v2 v1 \u2022 v2 . Remark 5.1. For the given data a suitable print volume is the cube\nHowever, for practical purposes the build volume may be a rectangular cuboid\nFrom the above data, a suitable test shape is then obtaind by applying the substitution\nto the implicit equations. Correspondingly, a point (y 1 , y 2 , y 3 ) \u2208 R 3 is transformed to the point (y 1 \u2022 r1 6 , y 2 \u2022 r2 6 , y 3 \u2022 r3 6 ).", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "cubic.lib, a Singular library for contructing cubic surfaces and the lines thereon", "journal": "", "year": "2014", "authors": "J B\u00f6hm; M S Marais; A F Van Der Merwe"}, {"ref_id": "b1", "title": "On the triple tangent planes to a surface of the third order", "journal": "Camb. and Dublin Math. Journal", "year": "1849", "authors": "A Cayley"}, {"ref_id": "b2", "title": "Die Geometrie auf den Fl\u00e4chen dritter Ordnung", "journal": "Journ. f\u00fcr reine und angew. Math", "year": "1866", "authors": "A Clebsch"}, {"ref_id": "b3", "title": "Ueber die Anwendung der quadratischen Substitution auf die Gleichungen 5 ten Grades und die geometrische Theorie des ebenen F\u00fcnfseits", "journal": "Math. Ann", "year": "1871", "authors": "A Clebsch"}, {"ref_id": "b4", "title": "Point sets and allied Cremona groups", "journal": "I. Trans. Amer. Math. Soc", "year": "1915", "authors": "Arthur B Coble"}, {"ref_id": "b5", "title": "Ideals, varieties, and algorithms", "journal": "Springer", "year": "2007", "authors": "David Cox; John Little; Donal O' Shea"}, {"ref_id": "b6", "title": "\u00fcber die polar-hexaheder bei den Fl\u00e4chen dritter Ordnung", "journal": "Math. Ann", "year": "1878", "authors": "L Cremona"}, {"ref_id": "b7", "title": "Singular 4.0.1 -A computer algebra system for polynomial computations", "journal": "", "year": "2014", "authors": "W Decker; G.-M Greuel; G Pfister; H Sch\u00f6nemann"}, {"ref_id": "b8", "title": "Surf. A program for drawing curves and surfaces", "journal": "", "year": "2010", "authors": "S Endrass"}, {"ref_id": "b9", "title": "A Singular introduction to commutative algebra", "journal": "Springer", "year": "2008", "authors": "Gert-Martin Greuel; Gerhard Pfister"}, {"ref_id": "b10", "title": "On the triple tangent planes to a surface of the third order", "journal": "Camb. and Dublin Math. Journal", "year": "1849", "authors": "G Salmon"}], "figures": [{"figure_label": "56", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "1 l 5 , 6 +56l 3,2 l 5,4 l 1,6 \u03d5 1 = l 5,3 l 1,2 l 4,6 + l 1,4 l 2,3 l 5,6 + l 2,5 l 3,4 l 1,6 + l 3,1 l 4,5 l 2,6 + l 4,2 l 5,1 l 3,6\u03d5 2 = l 5,3 l 4,1 l 2,6 + l 3,4 l 2,5 l 1,6 + l 4,2 l 1,3 l 5,6 + l 2,1 l 5,4 l 3,6 + l 1,5 l 3,2 l 4,6 \u03d5 3 = l 4,5 l 3,1 l 2,6 + l 5,3 l 2,4 l 1,6 + l 4,1 l 2,5 l 3,6 + l 3,2 l 1,5 l 4,6 + l 2,1 l 4,3 l 5,6 \u03d5 4 = l 3,1 l 2,4 l 5,6 + l 1,2 l 5,3 l 4,6 + l 2,5 l 4,1 l 3,6 + l 5,4 l 3,2 l 1,6 + l 4,3 l 1,5 l 2,6 \u03d5 5 = l 4,2 l 3,5 l 1,6 + l 2,3 l 1,4 l 5,6 + l 3,1 l 5,2 l 4,6 + l 1,5 l 4,3 l 2,6 + l 5,4 l 2,1 l 3,6 . Remark 3.5. The Clebsch cubic, given in [4, Ch. 16], is obtained by applying this construction to the points in general position P 1 = (0 : 1 : -g) P 3 = (1 : g : 0) P 5 = (0 : 1 : g) P 2 = (g : 0 : 1) P 4 = (1 : -g : 0) P 6 = (-g : 0 : 1), where g = 1+ \u221a 5 2", "figure_data": ""}, {"figure_label": "41", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Example 4 . 1 .41Our library can be loaded in Singular by: > LIB \"cubic.lib\"; We first create a polynomial ring in 4 variables over the field Q[ \u221a 5]: > ring R = (0,a),(x0,x1,x2,x3),dp; > minpoly = a^2-5;", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "> f; -3*x0^2*x1-3*x0*x1^2-3*x0^2*x2-6*x0*x1*x2-3*x1^2*x2-3*x0*x2^2-3*x1*x2^2 -3*x0^2*x3-6*x0*x1*x3-3*x1^2*x3-6*x0*x2*x3-6*x1*x2*x3-3*x2^2*x3-3*x0*x3^2 -3*x1*x3^2-3*x2*x3^2", "figure_data": ""}, {"figure_label": "1", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Figure 1 :1Figure 1: Lines on the Clebsch cubic", "figure_data": ""}, {"figure_label": "31", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "y 3 - 131", "figure_data": ""}], "formulas": [{"formula_id": "formula_0", "formula_text": "f i \u2208 K[x 0 , . . . , x n ].", "formula_coordinates": [2.0, 242.25, 506.11, 81.27, 9.65]}, {"formula_id": "formula_1", "formula_text": "\uf8eb \uf8ed P i,0 P j,0 t 0 P i,1 P j,1 t 1 P i,2 P j,2 t 2 \uf8f6 \uf8f8 \u2208 K[t 0 , t 1 , t 2 ]", "formula_coordinates": [3.0, 287.35, 120.97, 147.88, 35.13]}, {"formula_id": "formula_2", "formula_text": "P 2 K \\{P 1 , . . . P 6 } -\u2192 P 5 K (t 0 : t 1 : t 2 ) -\u2192 (\u03d5 0 (t) : . . . : \u03d5 5 (t))", "formula_coordinates": [3.0, 229.94, 218.85, 188.76, 23.18]}, {"formula_id": "formula_3", "formula_text": "\u03d5 0 = l 2,5 l 1,3 l 4,6 + l 5,1 l 4,2 l 3,6 + l 1,4 l 3,5 l 2,6 + l 4,3 l 2,", "formula_coordinates": [3.0, 152.71, 275.41, 208.44, 9.65]}, {"formula_id": "formula_4", "formula_text": "(A i,j ) = \uf8eb \uf8ec \uf8ec \uf8ec \uf8ed 0 |1", "formula_coordinates": [3.0, 97.64, 544.41, 71.74, 42.55]}, {"formula_id": "formula_5", "formula_text": "\uf8f6 \uf8f7 \uf8f7 \uf8f7 \uf8f8 \u2208 K 6\u00d76", "formula_coordinates": [3.0, 452.9, 544.73, 44.24, 42.24]}, {"formula_id": "formula_6", "formula_text": "a i = 6 j=1 A i,j .", "formula_coordinates": [3.0, 268.72, 629.82, 57.83, 30.32]}, {"formula_id": "formula_7", "formula_text": "x 3 0 + . . . + x 3 5 = 0 x 0 + . . . + x 5 = 0 a 0 \u2022 x 0 + . . . + a 5 \u2022 x 5 = 0.", "formula_coordinates": [3.0, 241.9, 690.37, 111.48, 41.61]}, {"formula_id": "formula_8", "formula_text": "\u03c8 (P1,...,P6) : C[x 0 , . . . , x 5 ] -\u2192 C[t 0 , t 1 , t 2 ] x i -\u2192 \u03d5 i", "formula_coordinates": [4.0, 191.96, 144.33, 201.4, 21.61]}, {"formula_id": "formula_9", "formula_text": "x i + x j = 0 for 0 \u2264 i < j \u2264 5.", "formula_coordinates": [4.0, 100.63, 434.78, 233.02, 30.66]}, {"formula_id": "formula_10", "formula_text": "(m i,j -d 2 ) \u2022 (x i + x j ) -(m k,l + d 2 ) \u2022 (x k + x l ) = 0 where {i,j} {k,l} {m,n} \u2208 S(M ) is a 3-cycle of pairwise disjoint elements of M , d 2 = det det (P3, P4, P1) \u2022 det (P5, P6, P1) det (P5, P3, P1) \u2022 det (P4, P6, P1) det (P3, P4, P2) \u2022 det (P5, P6, P2) det (P5, P3, P2) \u2022 det (P4, P6, P2) and m i,j = s<t a s a t + 2(a 2 i + a 2 j + a i a j ),", "formula_coordinates": [4.0, 100.63, 510.5, 344.5, 175.23]}, {"formula_id": "formula_11", "formula_text": "C = V (F ) \u2282 P 3 K with a homogeneous cubic polynomial F \u2208 K[x 0 , x 1 , x 2 , x 3 ].", "formula_coordinates": [5.0, 77.95, 93.26, 439.37, 23.18]}, {"formula_id": "formula_12", "formula_text": "F = x 3 0 + x 3 1 + x 3 2 + x 3 3 -(x 0 + x 1 + x 2 + x 3 ) 3 .", "formula_coordinates": [5.0, 195.51, 140.5, 204.26, 13.59]}, {"formula_id": "formula_13", "formula_text": "x 0 = y 0 -y 3 - \u221a 2y 1 x 2 = y 0 + y 3 + \u221a 2y 2 x 1 = y 0 -y 3 + \u221a 1 x 3 = -y 0 -y 3 + \u221a 2y 2", "formula_coordinates": [5.0, 192.66, 189.35, 209.45, 30.52]}, {"formula_id": "formula_14", "formula_text": "y 0 = x 0 + x 1 + x 2 -x 3 y 2 = \u221a 2(x 2 + x 3 ) y 1 = \u221a 2(-x 0 + x 1 ) y 3 = -x 0 -x 1 + x 2 -x 3", "formula_coordinates": [5.0, 180.33, 243.7, 230.8, 30.52]}, {"formula_id": "formula_15", "formula_text": "K 3 -\u2192 P 3 K , (y 1 , y 2 , y 3 ) -\u2192 (1 : y 1 : y 2 : y 3 ).", "formula_coordinates": [5.0, 198.48, 304.19, 198.31, 12.69]}, {"formula_id": "formula_16", "formula_text": "f \u2208 K[y 1 , y 2 , y 3 ].", "formula_coordinates": [5.0, 77.95, 351.25, 72.52, 9.65]}, {"formula_id": "formula_17", "formula_text": "P 2 K \\{P 1 , . . . , P 6 } -\u2192 C -\u2192 C", "formula_coordinates": [5.0, 230.53, 472.7, 130.71, 12.69]}, {"formula_id": "formula_18", "formula_text": "P 2 K \\V (\u03d5 0 + \u03d5 1 + \u03d5 2 -\u03d5 3 ) -\u2192 C .", "formula_coordinates": [5.0, 221.5, 514.86, 152.28, 12.69]}, {"formula_id": "formula_19", "formula_text": "> L[1]; [1] = x0 + x1 [2] = x2 + x3", "formula_coordinates": [6.0, 77.95, 55.32, 71.76, 32.93]}, {"formula_id": "formula_20", "formula_text": "> list E = EckardtPoints(P); > E[1]; [1] = x0 [2] = x1 [3] = x2 + x3", "formula_coordinates": [6.0, 77.95, 103.14, 148.97, 56.84]}], "doi": ""}
