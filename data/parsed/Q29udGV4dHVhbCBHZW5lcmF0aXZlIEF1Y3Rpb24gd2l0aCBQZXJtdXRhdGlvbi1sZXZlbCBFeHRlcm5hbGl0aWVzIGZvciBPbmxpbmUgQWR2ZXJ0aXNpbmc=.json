{
  "Contextual Generative Auction with Permutation-level Externalities for Online Advertising": "",
  "ABSTRACT": "Online advertising has become a core revenue driver for the internet industry, with ad auctions playing a crucial role in ensuring platform revenue and advertiser incentives. Traditional auction mechanisms, like GSP, rely on the independent CTR assumption and fail to account for the influence of other displayed items, termed externalities. Recent advancements in learning-based auctions have enhanced the encoding of high-dimensional contextual features. However, existing methods are constrained by the 'allocation-afterprediction' design paradigm, which models set-level externalities within candidate ads and fails to consider the sequential context of the final allocation, leading to suboptimal results. This paper introduces the Contextual Generative Auction (CGA), a novel framework that incorporates permutation-level externalities in multi-slot ad auctions. Built on the structure of our theoretically derived optimal solution, CGA decouples the optimization of allocation and payment. We construct an autoregressive generative model for allocation and reformulate the incentive compatibility (IC) constraint into minimizing ex-post regret that supports gradient computation, enabling end-to-end learning of the optimal payment rule. Extensive offline and online experiments demonstrate that CGA ‚àó Corresponding author. Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. KDD '25, August 3-7, 2025, Toronto, Canada ¬© 2025 Copyright held by the owner/author(s). Publication rights licensed to ACM. ACM ISBN XXX...$15.00 significantly enhances platform revenue and CTR compared to existing methods, while effectively approximating the optimal auction with nearly maximal revenue and minimal regret.",
  "CCS CONCEPTS": "¬∑ Information systems ‚Üí Computational advertising ; Online advertising ; Electronic commerce .",
  "KEYWORDS": "Learning-Based Mechanism Design, Externalities, Generative Auction",
  "ACMReference Format:": "Ruitao Zhu, Yangsu Liu, Dagui Chen, Zhenjia Ma, Chufeng Shi, Zhenzhe Zheng, Jie Zhang, Jian Xu, Bo Zheng, and Fan Wu. 2025. Contextual Generative Auction with Permutation-level Externalities for Online Advertising. In Proceedings of the 31st ACM SIGKDD International Conference on Knowledge Discovery & Data Mining (KDD '25), August 3-7, 2025, Toronto, Canada. ACM, New York, NY, USA, 11 pages. https://doi.org/XXXXXXX.XXXXXXX",
  "1 INTRODUCTION": "Online advertising serves as a cost-efficient and precise channel for advertisers to promote contents to millions of online users, which has become the main revenue source for the internet industry [12, 19]. Upon receiving a user request, online platforms conduct real-time auctions to determine ad allocation across multiple slots on a webpage and compute the payment of each advertiser obtaining an ad slot. The optimal ad auction aims to maximize platform revenue while satisfying the economic properties, such as incentive compatibility (IC) and individual rationality (IR), which will be detailed in Section 2, along with computational complexity constraints for online deployment. https://doi.org/XXXXXXX.XXXXXXX KDD '25, August 3-7, 2025, Toronto, Canada Ruitao Zhu, et al. Traditional ad auctions jointly consider advertisers' bids and ads' click-through rate (CTR). The Generalized Second Price (GSP) auction has long been the benchmark for ad auctions due to its interpretability and ease of implementation, and has further evolved into variants such as ugsp [2] and DeepGSP [45]. Although existing efforts have demonstrated remarkable performance, the separated CTR assumption employed by GSP, which posits that the users' clicking depends solely on the ad itself, restricts the model's predictive power by overlooking other displayed items. In reality, the results page presented to users contains multiple items, and users compare factors such as prices and appearances before making decisions; therefore, other displayed items will influence the target ad's CTR [5, 43]. From the perspective of mechanism design, the effect of external items is defined as externalities [15] in online advertising. The empirical study on user behaviors [20] also indicates that optimal ad auction design must take externalities into account. Recently, learning-based auctions such as Deep Neural Auction (DNA) [25] and Score Weighted VCG (SW-VCG) [22] are proposed to better capture externalities and enhance platform revenue. However, these methods are limited by the \"allocation-after-prediction\" design paradigm, as the prediction process remains agnostic to the context within the allocation results. In essence, these methods only model information within the candidate ad set ( set-level externalities ), failing to incorporate the sequential context that affects the CTR of each ad within the final allocation ( permutation-level externalities ), resulting in suboptimal allocation. Studies on reranking [29, 32, 39] in recommendation systems similarly consider item correlations within the displayed list. Nonetheless, their focus on enhancing overall user feedback neglects advertiser strategic behaviors and thus fails to incorporate economic constraints like IC and IR, hindering their applicability to revenue maximization in online auction environments. Designing optimal auction with permutation-level externalities for online ad platform faces three critical challenges: ( i ) The existing 'allocation-after-prediction' design paradigm cannot perceive the sequential context while predicting ad value. ( ii ) Employing a VCG-like approach to traverse all permutations can achieve optimal allocation, but the high computational complexity makes it infeasible for online applications. The challenge lies in the efficient exploration of optimal sequences within the factorial-level permutation space. ( iii ) The IC condition requires that each advertiser's expected value is non-decreasing with her bid [26]. While most existing methods ensure that a higher bid secures the same or a higher slot for the advertiser, permutation-level externalities can cause higher slots to yield lower CTRs. As illustrated in Figure 1, industrial data from the Taobao platform shows that the permutation-level CTR of ads is not monotonic with respect to their allocated slot. Consequently, designing an ad auction with an IC constraint under permutation-level externalities is a non-trivial problem. To address the above limitations, this paper proposes the Contextual Generative Auction (CGA), designed to optimize platform revenue with guaranteed economic properties. The framework of CGA adheres to the structure of our theoretically derived optimal DSIC (dominant strategy incentive compatible) auction, which decouples the optimization of allocation and payment. CGA employs the Figure 1: The Permutation-aware ad CTR as a function of slot on Taobao is non-monotonic. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 Slot 0.0025 0.0050 0.0075 0.0100 0.0125 0.0150 0.0175 0.0200 Permutation-aware CTR Ad 1 Ad 2 Ad 3 Ad 4 Ad 5 Ad 6 Ad 7 Ad 8 Ad 9 Ad 10 Ad 11 Ad 12 Ad 13 Ad 14 Ad 15 Generator-Evaluator (G-E) paradigm [13] to capture permutationlevel externalities. Specifically, the Generator utilizes the autoregressive approach to generate the ad sequence as allocation, guided by the well-trained Evaluator that refines contextual interaction within the ad sequence. Additionally, directly calculating the optimal payment rule is infeasible, since the allocation rule of CGA is implemented via a generative model. Inspired by works on multiitem auction design that uses neural networks to effectively recover analytical solutions [11], we restate the IC constraint to require zero expected ex-post regret for ad auction and learn the optimal payment by pushing gradients through the regret term. Our main contributions are summarized as follows: ¬∑ We formulate the multi-slot auction with permutation-level externalities and theoretically derive the optimal DSIC auction 1 , providing theoretical guarantees for generative auction design. ¬∑ To model the permutation-level externalities, we break the \"allocation-after-prediction\" design paradigm of learning-based auctions by introducing an autoregressive generative model that directly generates allocations. Building on the structure of the optimal mechanism, the proposed CGA leverages the G-E paradigm to optimize allocation and minimizes differentiable ex-post regret to learn the optimal payment rule. ¬∑ Experiments on large-scale industrial data and online A/B tests demonstrate that CGA outperforms existing methods in platform revenue and CTR, and effectively approximates the optimal DSIC auction with nearly maximal revenue and negligible regret.",
  "2 PRELIMINARIES": "",
  "2.1 Multi-slot Auctions with Permutation-level Externalities": "Multi-slot auction. The ad auction for online advertising can be abstracted as a typical multi-slot auction design problem. Formally, when a user request arrives, there are ùëõ advertisers 2 bidding for ùëò 1 Li et al. [22] directly rewrites Myerson Auction into an externality-aware form, yielding similar conclusions. However, when incorporating permutation-level externalities, unlike traditional single-item auctions, the ad CTR is influenced by the allocation outcome. This impact complicates the transition of the monotone allocation condition, which satisfies IC constraint, from Myerson Auction. Consequently, the preservation of optimality is non-trivial. We discuss this in detail in Lemma 1 and Appendix A.1. 2 Advertisers can either manually adjust bids or employ the platform's auto-bidding agent [3, 8, 41] for automated bidding. Contextual Generative Auction with Permutation-level Externalities for Online Advertising KDD '25, August 3-7, 2025, Toronto, Canada ( ùëò ‚â§ ùëõ ) ad slots with each advertiser ùëñ submits a bid ùëè ùëñ based on her private value ùë£ ùëñ for a click to ùëéùëë ùëñ 3 . Advertiser ùëñ 's private value is drawn independently from a distribution ùëì ùëñ (¬∑) , and ùêπ ùëñ (¬∑) denotes the cumulative distribution function (cdf) of the probability density function (pdf) ùëì ùëñ (¬∑) . Let ùíó = ( ùë£ 1 , ùë£ 2 , ¬∑ ¬∑ ¬∑ , ùë£ ùëõ ) denote the value profile for all advertisers, with ùíó -ùíä representing the value profile excluding the element ùë£ ùëñ , similarly for ùíÉ and ùíÉ -ùíä . The auctioneer, i.e. , the ad platform, knows the distributions ùíá = ( ùëì 1 , ùëì 2 , ¬∑ ¬∑ ¬∑ , ùëì ùëõ ) (derived from historical data), but does not know the true value profile ùíó . Given bid profile ùíÉ , user feature vector ùíñ , and the collection of all ad feature vectors ùëø = ( ùíô 1 , ùíô 2 , ¬∑ ¬∑ ¬∑ , ùíô ùíè ) , the ad auction mechanism is then formalized as M‚ü®A( ùíÉ ; ùëø , ùíñ ) , P( ùíÉ ; ùëø , ùíñ )‚ü© . The allocation rule A decides the ad-slot allocation, represented by the allocation matrix ùë® = ( ùëé ùëñ ùëó ) ùëõ √ó ùëò ‚àà { 0 , 1 } ùëõ √ó ùëò , where ùëé ùëñ ùëó = 1 means that ad ùëñ is allocated to slot ùëó and ùëé ùëñ ùëó = 0 otherwise 4 . Note that an ad is allocated to at most one slot, and each slot must be assigned one ad, hence a feasible allocation matrix ùë® satisfies Àù ùëò ùëó = 1 ùëé ùëñ ùëó ‚â§ 1 , ‚àÄ ùëñ and Àù ùëõ ùëñ = 1 ùëé ùëñ ùëó = 1 , ‚àÄ ùëó ; The payment rule P decides the payment of each ad, represented by the payment vector ùíë = ( ùëù ùëñ ) ùëõ ‚àà R ùëõ . Permutation-level externalities. The externalities in ad auctions mean that the winning ads' utility is also influenced by other winning ads [15]. For multi-slot ad auctions, the externality effect is reflected in the CTR of ads. Specifically, CTR models can be abstracted as functions mapping from ad features and user features to the probability of a user clicking an ad. We further consider a permutation-aware CTR model Œò , which takes allocation ùë® and associated features as input, and captures the inter-ad influence within ùë® . Note that model Œò is permutation-aware, meaning that even when two allocations contain the same set of ads, such as ùë® 1 = ( ùëéùëë 1 , ùëéùëë 2 , ùëéùëë 3 ) and ùë® 2 = ( ùëéùëë 3 , ùëéùëë 2 , ùëéùëë 1 ) with ùëò = 3, the differing permutations result in a variance in the external impact on the CTR of ùëéùëë 2 . Formally, we denote the CTR of ùëéùëë ùëñ as Œò ( ùíô ùíä ; ùë® , ùëø , ùíñ ) . For ease of notation, let Œò ùëñ ( ùíÉ ; ùëø , ùíñ ) = Œò ( ùíô ùíä ; A( ùíÉ ; ùëø , ùíñ ) , ùëø , ùíñ ) . The permutation-level externalities is encoded in the mapping process from allocation ùë® to CTR via model Œò . Problem formulation. Given the mechanism M‚ü®A , P‚ü© , the expected utility of an advertiser with valuation ùë£ ùëñ is given by:  Considering that advertisers can employ strategies aimed at maximizing their utilities through misreporting their values, we introduce two essential properties of ad auction for the stability of the advertising platform: dominant strategy incentive compatible (DSIC, or IC) and individually rational (IR). Definition 1. An auction is DSIC or IC, if each advertiser's utility is maximized by reporting truthfully no matter what the other advertisers report. Formally,  3 We consider the single-parameter and Cost-per-Click (CPC) auction setting, i.e. , each advertiser submits a bid and gets paid for a click event, which aligns with the practical scenarios of online ad platforms and remains consistent with related work [22, 23, 25]. 4 For notational simplicity, we slightly abuse matrix notation and rewrite ùë® = ( ùëé ùê¥ 1 , ùëé ùê¥ 2 , ¬∑ ¬∑ ¬∑ , ùëé ùê¥ ùëò ) to denote the sequential allocation of ads to ùëò slots, where ùê¥ ùëñ ‚àà [ ùëõ ] denotes the index of ad allocated to the ùëñ -th slot of allocation ùë® . Definition 2. An auction is IR, if every advertiser's payment does not exceed her submitted bid. Formally,  The goal is to find an auction M that maximizes the expected revenue of ad platform:  and satisfies IC and IR constraints, which can be formulated as:",
  "2.2 Optimal Multi-slot Auction": "To solve the above revenue maximizing auction design problem with IC and IR constraints, an intuitive method is to follow the well-known Myerson auction [26]. Myerson auction can be adapted to the setting with permutation-level externalities as follows: Definition 3. (Myerson auction with permutation-level externalities):   where Àú ùúô ( ùë£, ùêπ ùëñ ) denotes the ironed virtual value function [26], which is monotone in ùë£ . Ô£≥ Recall Myerson's Lemma [26], as formulated in Theorem 1. Note that introducing permutation-level externalities diverges from traditional Myerson auction by influencing each ad's CTR based on allocation outcomes. As such, an increase in ùëéùëë ùëñ 's bid does not necessarily increase its CTR due to inter-ad influences within the allocation results. This could potentially violate the monotonic allocation requirement of Theorem 1. We address this by proving that, even with permutation-level externalities, the monotonic allocation condition in Myerson's Lemma holds if the allocation rule maximizes virtual welfare, as demonstrated in Lemma 1. We put the proof in Appendix A.1 due to space limitations. Theorem 1. (Myerson's Lemma [26]). For a single-parameter environment, an allocation rule A is implementable if there exists a payment rule P such the mechanism M‚ü®A , P‚ü© is DSIC. The following two claims hold: (1) An allocation rule is implementable if and only if it is monotone. (2) If allocation rule A is monotone, then the exists a unique payment rule P such that the mechanism M‚ü®A , P‚ü© is DSIC. It is given by:  Lemma 1. (Monotonic allocation with permutation-level externalities). For every ùëéùëë ùëñ and ùíÉ -ùíä , the obtained CTR Œò ( ùíô ùíä ; A( ùëè ùëñ , ùíÉ -ùíä ) , ùëø , ùíñ ) is nondecreasing in its bid ùëè ùëñ (or we say A is monotone), if the allocation rule A maximizes the expected virtual welfare. Theorem 2. For a single-parameter environment, maximizing expected revenue over the space of DSIC auctions is equal to maximizing expected virtual welfare [26]. KDD '25, August 3-7, 2025, Toronto, Canada Ruitao Zhu, et al. Based on Theorem 1 and 2 and Lemma 1, we can deduce the corollary that Myerson auction with permutation-level externalities in Definition 3 constitutes the optimal solution to Problem (1). Corollary 1. The ad auction M , characterized by allocation rule A and payment rule P in Definition 3, represents the optimal mechanism with permutation-level externalities that maximizes the platform's expected revenue while satisfying IC and IR constraints.",
  "2.3 Auction Design as a Learning-based Problem": "A direct approach to implement the allocation rule A , as outlined in Definition 3, involves enumerating all permutations to select the one maximizing virtual welfare, with a computational complexity of ùëÉ ( ùëõ, ùëò ) = ùëõ ! ( ùëõ -ùëò ) ! . However, for online advertising, taking Taobao as an example, where ùëõ ‚âà 50 and ùëò ‚âà 5, the high computational complexity fails to meet online real-time inference requirements. Therefore, we parameterize the auction mechanism as M ùë§ = ‚ü®A ùë§ ùëé , P ùë§ ùëù ‚ü© with parameters ùë§ ùëé and ùë§ ùëù , and solves a learning problem to determine these parameters. To impose IC constraint on learning-based auctions and ensure the differentiability of the optimization process, similar to the original work of learning-based multi-item auction [11], we introduce the concept of ex-post regret for each advertiser to quantify the extent of deviation from IC conditions. Specifically, the ex-post regret for ùëéùëë ùëñ is defined as the maximum increase in utility that can be obtained through misreporting ùëè ‚Ä≤ ùëñ :  Hence, the IC constraint is satisfied if and only if the ex-post regret for each ùëéùëë ùëñ is zero. Given ùêø valuation samples from distribution F , we obtain the empirical ex-post regret for ùëéùëë ùëñ :  Then we reformulate the auction design problem (1) as minimizing the expected negated revenue, subject to the constraint that the empirical ex-post regret for each ùëéùëë ùëñ is zero:",
  "3 METHODOLOGY": "This section provides a detailed discussion of the Contextual Generative Auction (CGA). To overcome the limitation of the 'allocationafter-prediction' paradigm in capturing permutation-level externalities, CGA employs a G-E architecture, as depicted in Figure 2. The Generator leverages an autoregressive module, perceiving the established preceding context to generate an ad sequence. The Evaluator estimates permutation-aware reward within the whole ad sequence, guiding Generator towards optimal allocation through policy gradient. For online inference, only Generator is deployed, ensuring minimal computational latency during ad allocation. Moreover, a dedicated PaymentNet module is introduced to learn the optimal payment rule, trained via optimizing differentiable ex-post regret.",
  "3.1 Generator: Autoregressive Generative Module": "According to Theorem 2 and Corollary 1, the objective of Generator is to generate an ad sequence ùë® of length ùëò from ùëõ candidate ads that maximizes the expected virtual welfare. We develop an autoregressive generative module, comprising two key components: a permutation-invariant set-level encoder and a permutationequivariant decoder. Permutation invariance [42], an architectural property wherein the output remains agnostic to permutations of the inputs, has been shown in DNA [25] to enhance the platform revenue of ad auctions. Permutation equivariance [42] means that any permutation of inputs will result in an identical permutation in the outputs. This property is widely adopted in automated auction design [10, 18, 31], with Qin et al. [30] demonstrating its efficacy in improving the generalization ability of learning-based auctions. Permutaion-invariant set-level encoder. The ad encoder aims to enhance each ad's representation by modeling set-level externalities. It encodes the candidate ad set and provides the context embedding ùíÑ as the initial input of decoder. First, we adopt a self-attention layer to capture the mutual influence among ùëõ candidate ads, producing the set-level augmented embedding ùíâ ùíä for each ad ùëñ :  where ùíÜ ùíä denotes the embedding of ad ùëé ùëñ . Since the encoder processes an unordered set of ads, the above attention layer excludes positional encoding, and we perform sum pooling on ùíâ ùíä , ùëñ ‚àà [ ùëõ ] , ensuring that changing the permutation of input ads retains the same output context embedding ùíÑ :  where ùíâ ùíñ denotes the user representation. Permutation-equivariant autoregressive decoder. To address the limitations of the 'allocation-after-prediction' paradigm in auction design, we introduce an autoregressive decoder. This model efficiently captures joint distributions over the output ad sequences [4] to generate the ad sequence. Given the context embedding ùíÑ , the probabilistic generative model learns the conditional probability ùëù ( ùë® ùíé | ùíÑ ) for each ad sequence ùë® ùíé . During inference, the model selects a specific allocation from its output space based on this conditional probability. In the multi-slot auction setting, where ùë® ùíé consists of ùëò ads: ùëé ùê¥ ùëö 1 , ùëé ùê¥ ùëö 2 , ¬∑ ¬∑ ¬∑ , ùëé ùê¥ ùëö ùëò , and ùëé ùê¥ ùëöùëñ are not independent, the autoregressive decoder models the joint output distribution using the product rule:  We further employ the GRU cell [9] to model the conditional probability ùëù ( ùëé ùëñ | ùíÑ , ùëé ùê¥ ùëö 1 , ¬∑ ¬∑ ¬∑ , ùëé ùê¥ ùëöùë° -1 ) for each candidate ad ùëé ùëñ at slot ùë° ‚àà [ ùëò ] ( ùëé ùê¥ ùëö 0 = ‚àÖ ). At the beginning of decoding, the context embedding ùíÑ initializes the hidden state of GRU, and a special token representing \"START\" is fed into GRU as the initial input. Iteratively, the ùë° -th GRU cell is formulated as:  Contextual Generative Auction with Permutation-level Externalities for Online Advertising KDD '25, August 3-7, 2025, Toronto, Canada ... ... User Encoder Self-Attention Fusion MLP Set-level Context Embedding Attention Mask Sample Slot 1 Select Ad: Set-level Ad Encoder GRU GRU GRU ... Generator Candidate Ads Embedding Candidate Ads Set-level Embedding Sum Pooling START ... ... ... Slot 1 Allocation Probability ... ... User Embedding ... ... Attention Mask Sample Slot k Select Ad: ... ... Candidate Ads Set-level Embedding ... Slot k Allocation Probability ... Ad Allocation: ( ) ( ) ( ) Figure 2: The architecture of Contextual Generative Auction (CGA). The middle part shows the overall framework of CGA, with dashed outlines and arrows depicting offline training components, and solid lines representing online inference paths. The other two parts provide specific implementations of Generator and Evaluator. Embedding Layer Generator Evaluator ... Ad Allocation PaymentNet Payment Computation Externality-aware Reward Dashed Outlines: Offline Training Solid Outllines: Online Deployment Contextual Generative Auction (CGA) Candidate Ads Feature User Feature ... Ex-post Regret User Encoder Bi-LSTM Self- Attention with PE Fusion MLP Externality- aware Calibration Point-wise pCTR Evaluator Permutation-level Ad Encoder Permutation- Aware CTR Ad Allocation Embedding User Embedding ... where ùíâ ùë® ùíï -1 denotes the encoded representation of the ad chosen in slot ùë° -1 ( ùíâ ùë® 0 = ùëÜùëáùê¥ùëÖùëá ), and ùíî ùíï -1 denotes the preceding contextual information ( ùíî 0 = ùíÑ ). Consequently, given the state ùíî ùíï at slot ùë° , we obtain the allocation probability ùëß ùë° ùëñ of each candidate ad ùëé ùëñ : point-wise CTR ùú∂ ùë® output from the prediction stage, and constructs a Permutation-level Ad Encoder to estimate a personalized externality-aware calibration vector ùú∏ ùë® ‚àà ( 0 , 2 ) ùëò . These two vectors are then element-wise multiplied to obtain the permutationaware CTR: Œò ùë® = ùëöùëñùëõ ( ùú∂ ùë® ‚äô ùú∏ ùë® , 1 ) .  where ùë§ is a learnable parameter such that ùëí ùë§ remains positive, ensuring higher virtual value leads to a greater allocation probability, aligning with the objective of maximizing virtual welfare. Ads allocated prior to slot ùë° are masked, and a sampling strategy based on ùíõ ùíï determines the ad allocated to slot ùë° . This sampling occurs only during training to explore diverse sequence generation strategies. During inference, the ad with the highest value in ùíõ ùíï is selected. This selection process is repeated ùëò times to generate an ad sequence of length ùëò , denoted as ùë® = [ ùëé ùê¥ 1 , ùëé ùê¥ 2 , ¬∑ ¬∑ ¬∑ , ùëé ùê¥ ùëò ] . Moreover, since the MLPs and GRU cells in Generator operate on each state-ad pair, and the encoder satisfies permutation invariance, the decoder exhibits permutation equivariance .",
  "3.2 Evaluator: Permutation-aware Prediction Module": "The goal of Evaluator is to predict the permutation-aware CTR Œò ( ùíô ùíä ; ùë® , ùëø , ùíñ ) for each ad ùëé ùê¥ ùëñ in the ad allocation ùë® . Evaluator takes the allocation embedding ùëØ ùë® = [ ùíâ ùê¥ 1 , ùíâ ùê¥ 2 , ¬∑ ¬∑ ¬∑ , ùíâ ùê¥ ùëò ] , user embedding ùíÜ ùíñ and point-wise CTR ùú∂ ùë® ‚àà [ 0 , 1 ] ùëò as input, and outputs the permutation-aware CTR. Each embedding ùíâ ùê¥ ùëñ of ad ùëé ùê¥ ùëñ is derived from the encoder of Generator, as defined in Equation (4). Since CGA operates at the end of the three-stage advertising system (matching, prediction and auction), to fully utilize the user interests captured in the preceding stages, Evaluator leverages the Specifically, we adopt a Bi-LSTM [16] layer and a multi-head self-attention [36] layer to encode the ad sequence embedding ùëØ ùë® , where Bi-LSTM effectively captures bidirectional sequence information, while self-attention efficiently captures interactions between distantly positioned ads within the sequence. Formally, the sequential representation of self-attention layer is defined as:  where ùëë denotes the dimension of embeddings, and ùë∏ ùë® , ùë≤ ùë® , ùëΩ ùë® represents the query, key and value matrices, which is transformed linearly from the sum of allocation embedding ùëØ ùë® and positional encoding ùë∑ùë¨ ùë® . Our employed positional encoding mechanism adheres to the sinusoidal version in [36], endowing the self-attention layer with the capacity to discern the permutation information. Next, we obtain the forward output state ùëØ ùíá ùë® and backforward output state ùëØ ùíÉ ùë® of ùëØ ùë® through Bi-LSTM layer.  For brevity, we omit Bi-LSTM's implementation details, including the input gates, forget gates, output gates and cell states. KDD '25, August 3-7, 2025, Toronto, Canada Ruitao Zhu, et al. Subsequently, all sequential representations are concatenated with the user representation ùíâ ùíñ , and fed into a Multilayer Perceptron (MLP) to obtain the externality-aware calibration vector:  where ùúé (¬∑) and ùëü (¬∑) denote the fully connected layer with sigmoidal and ReLU activation functions, respectively. Finally, it should be noted that CGA allows any Evaluator model that captures sequential context to improve the G-E framework. In this work, we present an efficient implementation from our practice.",
  "3.3 Payment Computation": "According to Corollary 1, the optimal payment is defined in Definition 3, where the integral term can be rewritten as an expectation:  which can be approximated using Monte Carlo sampling. However, note that Œò ùëñ ( ùë° ùëñ , ùíÉ -ùíä ; ùëø , ùíñ ) = Œò ( ùíô ùíä ; A( ùë° ùëñ , ùíÉ -ùíä ; ùëø , ùíñ ) , ùëø , ùíñ ) . Processing each sample requires invoking Generator A and Evaluator Œò , resulting in high computational costs during inference. Reducing the number of samples can mitigate this but increases payment variance, directly affecting platform revenue and advertiser utility. Motivated by the successful application of neural networks to effectively approximate the optimal mechanism in multi-item auction setting in [11], we introduce PaymentNet to learn the optimal payment rule. Specifically, the inputs include the allocation embedding ùëØ ùë® ‚àà R ùëò √ó ùëë , the self-exclusion bidding profile ùë© -= [ ùíÉ -ùë® 1 , ùíÉ -ùë® 2 , ¬∑ ¬∑ ¬∑ , ùíÉ -ùë® ùíå ] ‚àà R ùëò √ó( ùëò -1 ) , and the expected value profile ùíÅ ¬∑ ùöØ ‚àà R ùëò √ó 1 , where ùíÅ = [ ùëß 1 ùê¥ 1 , ùëß 2 ùê¥ 2 , ¬∑ ¬∑ ¬∑ , ùëß ùëò ùê¥ ùëò ] denotes the allocation probability defined in Equation (5) and ùöØ = [ Œò ùê¥ 1 , Œò ùê¥ 2 , ¬∑ ¬∑ ¬∑ , Œò ùê¥ ùëò ] denotes the permutation-aware CTR estimated by Evaluator. Moreover, to satisfy IR constraint, as defined in Definition 2, PaymentNet employs a sigmoidal activation function to compute the payment rate Àú ùíë ‚àà [ 0 , 1 ] ùëò , and subsequently outputs the payment ùíë = Àú ùíë ‚äô ùíÉ . Formally, the payment rate is defined as:  where ùúé (¬∑) and ùëü (¬∑) denote the fully connected layer with sigmoidal and ReLU activation functions, respectively.",
  "4 OPTIMIZATION AND TRAINING": "According to Corollary 1, the optimal allocation rule only requires maximizing virtual welfare and is independent of the payment rule. Therefore, we decouple the optimization of G-E framework and PaymentNet, which maintains the optimality of CGA.",
  "4.1 Optimization of G-E Framework": "In the G-E framework, as Evaluator captures permutation-level externalities and guides Generator to obtain the optimal allocation, we first train Evaluator Œò to convergence using list-wise ad click data. Each sample ùëô ‚àà D is an ad sequence of length ùëò exposed to a user, with the label ùë¶ ùëô ùëñ ‚àà { 0 , 1 } indicating whether the user clicks on the ùëñ -th ad. The binary cross-entropy loss is defined as:  where ùúÉ ùëô ùëñ denotes the permutation-aware CTR of the ùëñ -th ad in the ad sequence ùëô as predicted by Evaluator. After training Evaluator Œò to convergence, we freeze its parameters and train Generator using policy gradient with rewards from Evaluator. At each slot ùë° , the contextual information ùíî ùíï serves as the state, and the allocation probability ùëß ùë° ùëñ output by Generator serves as the action. Since ùíî ùíï only encodes the preceding context, to capture the bi-directional contextual information, we use the well-trained Evaluator to estimate the permutation-aware reward of each candidate ad within the complete ad sequence ùë® . Similar to [13], we decompose this permutation-aware reward into two parts. Self-Reward. Aligning with the objective of optimal allocation, we use Evaluator Œò to estimate the expected virtual welfare of each selected ad ùëé ùê¥ ùëñ , termed as self-reward:  External-Reward. Each selected ad not only contributes its reward but also affects the CTR of other ads due to the permutationlevel externalities. Similar to the marginal contribution applied in classical VCG mechanism [35], we model this external effect as external reward:  where ùë® -ùíä denotes the ad sequence excluding ùëé ùê¥ ùëñ . Combing the above two rewards, we obtain the permutationaware reward of selecting ùëé ùê¥ ùëñ , defined as:  Finally, the loss function of Generator is defined as:  where ùë† denotes a sample from dataset D , representing the candidate ad set for a request, ùê¥ ùë† ùëñ denotes the ùëñ -th ad of the ad allocation output by Generator based on the input ad set ùë† , and ùëß ùê¥ ùë† ùëñ denotes the allocation probability in Equation (5).",
  "4.2 Optimization of PaymentNet": "After training Generator A and Evaluator Œò to convergence, we freeze their parameters and then apply the augmented Lagrangian method to solve the constrained optimization problem (3) to optimize PaymentNet. The Lagrangian function augmented with a quadratic penalty term for violating the IC constraint is defined as:  (10) Contextual Generative Auction with Permutation-level Externalities for Online Advertising KDD '25, August 3-7, 2025, Toronto, Canada where ùë® ùë† denotes the allocation output by the freezed Generator A with the input of ad set ùë† , ùúÜ ùëñ denotes Lagrange multipliers, and ùúå > 0 denotes the hyperparameter for the IC penalty term. Similar to [11], the optimization process based on Lagrangian function (10) includes the iteration of ( i ) updating PaymentNet: ùíò ùíèùíÜùíò P = ùëéùëüùëîùëöùëñùëõ ùë§ P L ùëÉ ( ùíò ùíêùíçùíÖ P ; ùùÄ ùíêùíçùíÖ ) , and ( ii ) updating the Lagrange multipliers: ùùÄ ùíèùíÜùíò = ùùÄ ùíêùíçùíÖ + ùúå d ùíìùíàùíï ( ùíò ùíèùíÜùíò P ) . Note that problem (3) is non-convex. Thus, the above Lagrangian method is not guaranteed to converge to the global optimum. However, the experimental results indicate that the optimized CGA can approximate the optimal revenue with minimal regret, as discussed in Section 5.2.",
  "5 EXPERIMENTS": "In this section, we conduct offline experiments and online A/B tests to evaluate the effectiveness of CGA, and mainly focus on the following questions: ¬∑ RQ1 : How does CGA perform in terms of key metrics like platform revenue and CTR, compared with existing ad auctions? ¬∑ RQ2 : What are the effects of modeling permutation-level externalities compared to set-level and W/O externalities? ¬∑ RQ3 : How do various designs of CGA affect its performance? ¬∑ RQ4 : How does our proposed CGA perform in the real-world ad auction scenarios with efficient deployment?",
  "5.1 Experiment Setup": "5.1.1 Dataset. In offline experiments, we evaluate the performance of CGA using real logs collected from a leading e-commerce platform Taobao during January 2024. The training set comprises 500,000 randomly selected auctions from January 20 to January 23, involving 1,100,875 unique advertisers while the test set comprises 100,000 randomly selected auctions from January 25, involving 452,671 unique advertisers. For each auction sample in the dataset, approximately 30 advertisers are selected by ad system as candidates for the auction stage, where they submit their bids to compete for slots. We set the number of slots ùëò = 3 in offline experiments. 5.1.2 Baseline Methods. We compare CGA with representative auction mechanisms. The baseline methods are categorized into three groups based on the granularity of externality modeling.",
  "W/O externalities:": "¬∑ GSP : GSP ranks ads based on the product of bids and predicted CTR, without modeling externalities.",
  "Set-level externalities :": "¬∑ DNA [25]: Building on GSP, DNA predicts each ad's rankscore by modeling set-level externalities of candidate ads and ranks accordingly for allocation, without considering the mutual influence among ads in the ad list. ¬∑ SW-VCG [22]: SW-VCG formalizes multi-slot auction design as a maximum weighted bipartite matching problem between ads and slots, which captures only set-level externalities of candidate ads to estimate edge weights.",
  "Permutation-level externalities :": "¬∑ VCG Auction [35] with Permutation-level Externalities ( VCG ): VCG selects the ad permutation that maximizes social welfare for allocation and combines this with a payment rule to satisfy IC. We evaluate all permutations of the candidate ads with CGA's Evaluator, enabling VCG to capture permutation-level externalities. ¬∑ EdgeNet [33]: EdgeNet utilizes Transformer to replace DNA's set encoder and employs a greedy strategy to sequentially allocate ads, modeling partial permutation-level externalities. ¬∑ Optimal : To evaluate CGA's approximation to the theoretical upper bound, according to Corollary 1, we construct this baseline by traversing all permutations to maximize virtual welfare and using Monte Carlo sampling to calculate the payment. 5.1.3 Performance Metrics. We consider the following metrics to measure platform revenue, user experience, and ex-post regret of advertisers, respectively. ¬∑ Revenue Per Mille: RPM = Àù ùëêùëôùëñùëêùëò √ó ùëùùëéùë¶ùëöùëíùëõùë° Àù ùëñùëöùëùùëüùëíùë†ùë†ùëñùëúùëõ √ó 1000 . ¬∑ Click-Through Rate: CTR = Àù ùëêùëôùëñùëêùëò Àù ùëñùëöùëùùëüùëíùë†ùë†ùëñùëúùëõ . ùë† ¬∑ IC metric: Œ® = 1 | D| Àù ùë† ‚ààD Àù ùëñ ‚àà ùëò c ùëüùëîùë° ùëñ ùë¢ ùëñ ( ùë£ ùë† , ùíÉ ùíî ; ùëø ùíî , ùíñ ùíî ) , where c ùëüùëîùë° ùë† ùëñ is ùëñ defined in Equation (2). This is a common metric for IC testing of ad auction mechanisms [7, 23, 25, 33], which measures the relative increase in utility that advertisers can obtain by manipulating their bids. Consistent with the evaluation process in [38], we conduct counterfactual perturbation on each advertiser's bid by replacing ùëè ùëñ with ùõº √ó ùëè ùëñ , where ùõº ‚àà { 0 . 2 √ó ùëó | ùëó = 1 , 2 , ¬∑ ¬∑ ¬∑ , 10 } . 5.1.4 Implementation. In CGA, we set the embedding size of features as 8. To capture richer information from different representation subspaces, a multi-head attention mechanism with 4 attention heads is used in all attention layers. The externality-aware calibration vector ùú∏ ùë® and the payment rate Àú ùíë are derived using a MLP with hidden layers of sizes 128 and 32. CGA is trained with the Adam optimizer at a learning rate of 1e-3 and a batch size of 512. All learning-based baseline methods have hyperparameters tuned through grid search, exploring learning rates of {1e-5, 1e-4, 1e-3, 1e-2}, batch sizes of {256, 512, 1024, 2048}, and hidden sizes of {8,16,32,64}.",
  "5.2 Offline Comparison (RQ1 & RQ2)": "CGAandbaseline-Optimal involve the ironed virtual value function, which requires knowledge of each advertiser's value distribution ùëì ùëñ (¬∑) . Estimating ùëì ùëñ (¬∑) from historical data is well-covered in existing research [6, 21, 27, 28]. This paper does not delve into this estimation as CGA focuses on employing generative models to capture permutation-level externalities, independent of distribution estimation techniques. To avoid biases from distribution estimation methods in comparative experiments, following [22], we preset the conditional distribution of each advertiser's value based on their feature vectors as uniform and exponential distributions , respectively, and regenerate the bids accordingly. For SW-VCG, since its predicted ad score ùëÜùëêùëü ùëñ aims to fit the virtual value, we directly set ùëÜùëêùëü ùëñ to Àú ùúô ùëñ for comparison. The experimental results under the above two distributions are presented in Table 1. Our key observations are: (1) As externality modeling advances from W/O externalities to set-level and finally to permutation-level, auction performance improves across three metrics (higher RPM and CTR with lower KDD '25, August 3-7, 2025, Toronto, Canada Ruitao Zhu, et al. Table 1: Performance comparison for key metrics. Lift percentage indicates the relative change of baseline methods over CGA. regret) 5 . This highlights the importance of modeling fine-grained externalities in auction design ( RQ2 ). To further investigate the impact of externalities, we conduct comparative experiments on the CTR prediction task. The results are shown in Table 2, where \"W/O Externalities\" indicates the use of point-wise pCTR and \"Setlevel\" refers to using the Set-level Ad Encoder, as described in Section 3.2, to replace Evaluator's permutation-level ad encoder. The results demonstrate that Evaluator with permutation-level externalities improves the accuracy of predictive values, explaining the improvement in auction metrics. (2) Compared to baseline-Optimal based on enumeration, CGA achieves approximately 95% revenue maximization and negligible ex-post regret. This suggests that CGA enables efficient ad allocation and closely approximates the optimal auction mechanism. Table 2: Performance comparison of externalities modeling.",
  "5.3 Ablation Study (RQ3)": "To verify the effectiveness of CGA's various design considerations, we construct the following variants: ¬∑ CGAŒò removes the Evaluator Œò and uses point-wise CTR instead to evaluate each ad allocation's virtual welfare. ¬∑ CGA (end2end) directly trains Generator and PaymentNet using L ùëÉ from Equation (10). In contrast, CGA first trains Generator to convergence, freezes its parameters, and then trains PaymentNet. ¬∑ CGAùëü ùë†ùëíùëô ùëì removes the self reward ùëü ùë†ùëíùëô ùëì , defined in Equation (7), in the loss function L ùê∫ of Generator. 5 VCG optimizes social welfare at the expense of revenue, independent of externalities. ¬∑ CGAùëü ùëíùë•ùë°ùëíùëüùëõùëéùëô removes the external reward ùëü ùëíùë•ùë°ùëíùëüùëõùëéùëô , defined in Equation (8), in the loss function L ùê∫ of Generator. ¬∑ CGA- Àú ùúô replaces virtual value Àú ùúô ùëñ with ùëè ùëñ in L ùê∫ . The results are shown in Table 3, from which we observe: (1) CGAŒò performs worse than CGA, indicating that the Generator alone cannot fully capture permutation-level externalities, as the autoregressive model perceives only preceding context. The G-E framework helps distill complete sequential knowledge into Generator via policy gradient. (2) CGA (end2end) performs worse. One likely reason is that CGAuses PaymentNet to learn the optimal payment, so the revenue gradient must pass through PaymentNet before reaching Generator while conducting end-to-end training, complicating convergence to the optimal allocation. Furthermore, Corollary 1 ensures that decoupled optimization maintains optimality, thus allowing Generator to focus solely on maximizing virtual welfare. (3) CGAùëü ùë†ùëíùëô ùëì performs the worst due to the absence of each selected ad's own value increment. CGA outperforms CGAùëü ùëíùë•ùë°ùëíùëüùëõùëéùëô because it uses external rewards to model the impact of each selected ad on the final allocation list. (4) Estimating value distribution ùëì ùëñ (¬∑) requires empirical assumptions about bidding strategies, since Ad platforms can only observe bids, causing bias in the estimated ÀÜ ùëì ùëñ (¬∑) . To assess the impact of removing value distribution on CGA's performance, we construct the variant CGA- Àú ùúô . As shown in Table 3, CGA- Àú ùúô shows only a minor decline in revenue (2.6%) and CTR (1.9%) compared to CGA. This small drop may be due to CGA's modeling of externalities, which captures inter-ad correlations and partially reflects the missing value distribution information through other advertisers' bids.",
  "5.4 Online A/B Test (RQ4)": "To verify CGA's effectiveness in the real-world, we compare CGA with the fully deployed DNA in Taobao advertising system through online A/B tests. Table 4 presents the results of online A/B testing conducted from August 19 to August 25, 2023, utilizing 2% of total production traffic. CGA achieves a 3.2% improvement in RPM with Contextual Generative Auction with Permutation-level Externalities for Online Advertising KDD '25, August 3-7, 2025, Toronto, Canada Table 3: Ablation study of CGA. only a 3 ms average increase (1.6% relatively) in online response time (RT) per request, suggesting that CGA can efficiently explore the allocation space via generative models and boost platform revenue. Moreover, the heightened return on investment (ROI) for advertisers indicates that CGA's revenue enhancement results not from inflated payments but from optimized ad allocation by capturing permutation-level externalities, as evidenced by significant CTR and gross merchandise volume (GMV) improvements. Table 4: Experimental results from Online A/B tests.",
  "6 RELATED WORK": "GSP [12] and its variants, like uGSP [2], are widely used in online advertising due to their interpretability and high revenue guarantee, but they do not consider the impact of other ads on user clicks, neglecting externalities [14, 17], leading to suboptimal performance. Advances in computing have led researchers to explore learningbased auctions [44]. DeepGSP [45] and DNA [25] extend GSP using online feedback for end-to-end learning. However, DNA's rankscore prediction faces the evaluation-before-ranking problem [40], restricting its scope to set-level externalities and yielding suboptimal allocations. SW-VCG [22] separates optimal auction design into designing monotone score functions and solving ad-slot maximum bipartite matching. However, SW-VCG still overlooks the mutual influence of ads in the final sequence, as the edge weights in the bipartite graph cannot be predetermined considering permutation-level externalities. Following VCG, NMA [23] proposed an enumerationbased framework to select the optimal allocation. While globally optimal, its high computational complexity makes it impractical for real-time online inference [34]. EdgeNet [33] employs a PointerNetbased structure for greedy ad allocation but ignores the impact of succeeding ads, remaining insufficient for achieving optimal results. Studies of reranking in RS parallels externality modeling by leveraging contextual information to optimize item sequences. Reranking methods can be divided into one-stage and two-stage approaches [32]. One-stage methods [1, 29] estimate refined scores for each item within the initial list and rerank them greedily. These methods encounter the evaluation-before-ranking problem similar to DNA: reranking alters the permutation, introducing different mutual influences. Two-stage methods [13, 32, 34] typically employ a G-E framework. The Generator produces multiple feasible sequences, while the Evaluator selects the optimal sequence based on the estimated list value. This approach enables comprehensive exploration of the permutation space [32], which provides valuable insights for the implementation of CGA. While the G-E framework effectively captures permutation-level externalities, it lacks the capacity to express key economic constraints such as IC and fails to directly optimize platform revenue. Our theoretical results decouple the allocation and payment in optimal auctions with permutation-level externalities. This allows the allocation to employ a general G-E framework focused solely on maximizing expected virtual welfare, while the optimal payment rule is learned through differentiable ex-post regret. Consequently, CGA can be viewed as a unified framework bridging reranking in RS and ad auction theory.",
  "7 CONCLUSION": "This paper proposes the Contextual Generative Auction (CGA), designed to incorporate permutation-level externalities in online multi-slot ad auctions. Our primary theoretical results demonstrate that the classic Myerson Auction maintains its optimality when adapted to permutation-level externalities. This insight drives the design of the CGA framework, which decouples the optimization of allocation and payment. Specifically, we develop an autoregressive generative model with G-E learning paradigm to optimize allocation, and learn the optimal payment by quantifying IC constraint into expected ex-post regret. Extensive offline and online experiments verify the effectiveness of CGA. Notably, the autoregressive generation process of CGA is not limited to specific generative model and can accommodate various advanced solutions [24, 37]. Future research will extend this contextual generative mechanism to integrate heterogeneous items from different channels.",
  "ACKNOWLEDGMENTS": "This work was supported in part by National Key R&D Program of China (No. 2023YFB4502400), in part by China NSF grant No. 62322206, 62132018, 62025204, U2268204, 62272307, 62372296, in part by Alibaba Group through Alibaba Innovative Research Program. The opinions, findings, conclusions, and recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of the funding agencies or the government.",
  "REFERENCES": "[1] Qingyao Ai, Keping Bi, Jiafeng Guo, and W Bruce Croft. 2018. Learning a deep listwise context model for ranking refinement. In The 41st international ACM SIGIR conference on research & development in information retrieval . 135-144. [2] Yoram Bachrach, Sofia Ceppi, Ian A Kash, Peter Key, and David Kurokawa. 2014. Optimising trade-offs among stakeholders in ad auctions. In Proceedings of the fifteenth ACM conference on Economics and computation . 75-92. [3] Santiago R Balseiro, Yuan Deng, Jieming Mao, Vahab S Mirrokni, and Song Zuo. 2021. The landscape of auto-bidding auctions: Value versus utility maximization. In Proceedings of the 22nd ACM Conference on Economics and Computation . 132133. [4] Lucas Beyer, Bo Wan, Gagan Madan, Filip Pavetic, Andreas Steiner, Alexander Kolesnikov, Andr√© Susano Pinto, Emanuele Bugliarello, Xiao Wang, Qihang Yu, et al. 2023. A study of autoregressive decoders for multi-tasking in computer vision. arXiv preprint arXiv:2303.17376 (2023). [5] Chi Chen, Hui Chen, Kangzhi Zhao, Junsheng Zhou, Li He, Hongbo Deng, Jian Xu, Bo Zheng, Yong Zhang, and Chunxiao Xing. 2022. Extr: click-through rate prediction with externalities in e-commerce sponsored search. In Proceedings of the 28th ACM SIGKDD Conference on Knowledge Discovery and Data Mining . 2732-2740. KDD '25, August 3-7, 2025, Toronto, Canada Ruitao Zhu, et al. [6] Yeshwanth Cherapanamjeri, Constantinos Daskalakis, Andrew Ilyas, and Manolis Zampetakis. 2022. Estimation of standard auction models. In Proceedings of the 23rd ACM Conference on Economics and Computation . 602-603. [7] Yuan Deng, S√©bastien Lahaie, Vahab Mirrokni, and Song Zuo. 2020. A datadriven metric of incentive compatibility. In Proceedings of The Web Conference 2020 . 1796-1806. [8] Yuan Deng, Jieming Mao, Vahab Mirrokni, and Song Zuo. 2021. Towards efficient auctions in an auto-bidding world. In Proceedings of the Web Conference 2021 . 3965-3973. [9] Rahul Dey and Fathi M Salem. 2017. Gate-variants of gated recurrent unit (GRU) neural networks. In 2017 IEEE 60th international midwest symposium on circuits and systems (MWSCAS) . IEEE, 1597-1600. [10] Zhijian Duan, Haoran Sun, Yurong Chen, and Xiaotie Deng. 2024. A scalable neural network for dsic affine maximizer auction design. Advances in Neural Information Processing Systems 36 (2024). [11] Paul D√ºtting, Zhe Feng, Harikrishna Narasimhan, David Parkes, and Sai Srivatsa Ravindranath. 2019. Optimal auctions through deep learning. In International Conference on Machine Learning . PMLR, 1706-1715. [12] Benjamin Edelman, Michael Ostrovsky, and Michael Schwarz. 2007. Internet advertising and the generalized second-price auction: Selling billions of dollars worth of keywords. American economic review 97, 1 (2007), 242-259. [13] Yufei Feng, Binbin Hu, Yu Gong, Fei Sun, Qingwen Liu, and Wenwu Ou. 2021. GRN: Generative Rerank Network for Context-wise Recommendation. arXiv preprint arXiv:2104.00860 (2021). [14] Nicola Gatti, Alessandro Lazaric, and Francesco Trov√≤. 2012. A truthful learning mechanism for contextual multi-slot sponsored search auctions with externalities. In Proceedings of the 13th ACM Conference on Electronic Commerce . 605-622. [15] Arpita Ghosh and Mohammad Mahdian. 2008. Externalities in online advertising. In Proceedings of the 17th international conference on World Wide Web . 161-168. [16] Sepp Hochreiter and J√ºrgen Schmidhuber. 1997. Long short-term memory. Neural computation 9, 8 (1997), 1735-1780. [17] Patrick Hummel and R Preston McAfee. 2014. Position auctions with externalities. In Web and Internet Economics: 10th International Conference, WINE 2014, Beijing, China, December 14-17, 2014. Proceedings 10 . Springer, 417-422. [18] Dmitry Ivanov, Iskander Safiulin, Igor Filippov, and Ksenia Balabaeva. 2022. Optimal-er auctions through attention. Advances in Neural Information Processing Systems 35 (2022), 34734-34747. [19] Bernard J Jansen and Tracy Mullen. 2008. Sponsored search: an overview of the concept, history, and technology. International Journal of Electronic Business 6, 2 (2008), 114-131. [20] Przemyslaw Jeziorski and Ilya Segal. 2015. What makes them click: Empirical analysis of consumer demand for search advertising. American Economic Journal: Microeconomics 7, 3 (2015), 24-53. [21] Albert Xin Jiang and Kevin Leyton-Brown. 2005. Estimating bidders' valuation distributions in online auctions. In Proceedings of IJCAI-05 workshop on game theoretic and decision theoretic agents . 98-107. [22] Ningyuan Li, Yunxuan Ma, Yang Zhao, Zhijian Duan, Yurong Chen, Zhilin Zhang, Jian Xu, Bo Zheng, and Xiaotie Deng. 2023. Learning-Based Ad Auction Design with Externalities: The Framework and A Matching-Based Approach. In Proceedings of the 29th ACM SIGKDD Conference on Knowledge Discovery and Data Mining . 1291-1302. [23] Guogang Liao, Xuejian Li, Ze Wang, Fan Yang, Muzhi Guan, Bingqi Zhu, Yongkang Wang, Xingxing Wang, and Dong Wang. 2022. NMA: Neural Multi-slot Auctions with Externalities for Online Advertising. arXiv preprint arXiv:2205.10018 (2022). [24] Shuchang Liu, Qingpeng Cai, Zhankui He, Bowen Sun, Julian McAuley, Dong Zheng, Peng Jiang, and Kun Gai. 2023. Generative flow network for listwise recommendation. In Proceedings of the 29th ACM SIGKDD Conference on Knowledge Discovery and Data Mining . 1524-1534. [25] Xiangyu Liu, Chuan Yu, Zhilin Zhang, Zhenzhe Zheng, Yu Rong, Hongtao Lv, Da Huo, Yiqing Wang, Dagui Chen, Jian Xu, Fan Wu, Guihai Chen, and Xiaoqiang Zhu. 2021. Neural auction: End-to-end learning of auction mechanisms for ecommerce advertising. In Proceedings of the 27th ACM SIGKDD Conference on Knowledge Discovery & Data Mining . 3354-3364. [26] Roger B Myerson. 1981. Optimal auction design. Mathematics of operations research 6, 1 (1981), 58-73. [27] Gali Noti and Vasilis Syrgkanis. 2021. Bid prediction in repeated auctions with learning. In Proceedings of the Web Conference 2021 . 3953-3964. [28] Michael Ostrovsky and Michael Schwarz. 2023. Reserve prices in internet advertising auctions: A field experiment. Journal of Political Economy 131, 12 (2023), 3352-3376. [29] Changhua Pei, Yi Zhang, Yongfeng Zhang, Fei Sun, Xiao Lin, Hanxiao Sun, Jian Wu, Peng Jiang, Junfeng Ge, Wenwu Ou, et al. 2019. Personalized re-ranking for recommendation. In Proceedings of the 13th ACM conference on recommender systems . 3-11. [30] Tian Qin, Fengxiang He, Dingfeng Shi, Wenbing Huang, and Dacheng Tao. 2022. Benefits of permutation-equivariance in auction mechanisms. Advances in Neural Information Processing Systems 35 (2022), 18131-18142. [31] Jad Rahme, Samy Jelassi, Joan Bruna, and S Matthew Weinberg. 2021. A permutation-equivariant neural network architecture for auction design. In Proceedings of the AAAI conference on artificial intelligence , Vol. 35. 5664-5672. [32] Yuxin Ren, Qiya Yang, Yichun Wu, Wei Xu, Yalong Wang, and Zhiqiang Zhang. 2024. Non-autoregressive Generative Models for Reranking Recommendation. arXiv preprint arXiv:2402.06871 (2024). [33] Guangyuan Shen, Shengjie Sun, Dehong Gao, Duanxiao Song, Libin Yang, Zhen Wang, Yongping Shi, and Wei Ning. 2023. EdgeNet: Encoder-decoder generative Network for Auction Design in E-commerce Online Advertising. In Proceedings of the 32nd ACM International Conference on Information and Knowledge Management . 4274-4278. [34] Xiaowen Shi, Fan Yang, Ze Wang, Xiaoxu Wu, Muzhi Guan, Guogang Liao, Wang Yongkang, Xingxing Wang, and Dong Wang. 2023. PIER: Permutation-Level Interest-Based End-to-End Re-ranking Framework in E-commerce. In Proceedings of the 29th ACM SIGKDD Conference on Knowledge Discovery and Data Mining . 4823-4831. [35] Hal R Varian and Christopher Harris. 2014. The VCG auction in theory and practice. American Economic Review 104, 5 (2014), 442-445. [36] Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, ≈Åukasz Kaiser, and Illia Polosukhin. 2017. Attention is all you need. Advances in neural information processing systems 30 (2017). [37] Wenjie Wang, Yiyan Xu, Fuli Feng, Xinyu Lin, Xiangnan He, and Tat-Seng Chua. 2023. Diffusion recommender model. In Proceedings of the 46th International ACM SIGIR Conference on Research and Development in Information Retrieval . 832-841. [38] Yiqing Wang, Xiangyu Liu, Zhenzhe Zheng, Zhilin Zhang, Miao Xu, Chuan Yu, and Fan Wu. 2022. On designing a two-stage auction for online advertising. In Proceedings of the ACM Web Conference 2022 . 90-99. [39] Yunjia Xi, Weiwen Liu, Xinyi Dai, Ruiming Tang, Weinan Zhang, Qing Liu, Xiuqiang He, and Yong Yu. 2021. Context-aware reranking with utility maximization for recommendation. arXiv preprint arXiv:2110.09059 (2021). [40] Yunjia Xi, Weiwen Liu, Xinyi Dai, Ruiming Tang, Weinan Zhang, Qing Liu, Xiuqiang He, and Yong Yu. 2021. Context-aware reranking with utility maximization for recommendation. arXiv preprint arXiv:2110.09059 (2021). [41] Yidan Xing, Zhilin Zhang, Zhenzhe Zheng, Chuan Yu, Jian Xu, Fan Wu, and Guihai Chen. 2023. Truthful auctions for automated bidding in online advertising. In Proceedings of the Thirty-Second International Joint Conference on Artificial Intelligence . 2915-2922. [42] Manzil Zaheer, Satwik Kottur, Siamak Ravanbakhsh, Barnabas Poczos, Russ R Salakhutdinov, and Alexander J Smola. 2017. Deep sets. Advances in neural information processing systems 30 (2017). [43] Ruizhe Zhang, Xiaohui Xie, Jiaxin Mao, Yiqun Liu, Min Zhang, and Shaoping Ma. 2021. Constructing a comparison-based click model for web search. In Proceedings of the Web Conference 2021 . 270-283. [44] Zhanhao Zhang. 2021. A survey of online auction mechanism design using deep learning approaches. arXiv preprint arXiv:2110.06880 (2021). [45] Zhilin Zhang, Xiangyu Liu, Zhenzhe Zheng, Chenrui Zhang, Miao Xu, Junwei Pan, Chuan Yu, Fan Wu, Jian Xu, and Kun Gai. 2021. Optimizing multiple performance metrics with deep GSP auctions for e-commerce advertising. In Proceedings of the 14th ACM International Conference on Web Search and Data Mining . 993-1001.",
  "A APPENDIX": "",
  "A.1 Proof of Lemma 1": "Denote ùë® ‚àó as the allocation that maximizes the expected virtual welfare (select randomly if there exist multiple optimal allocation), i.e. ,  which can be obtained through enumeration. W.l.o.g. , suppose ùëéùëë ùë° ‚àà ùë® ‚àó , and the other ads in ùë® ‚àó constitute the set ùë® ‚àó -ùíï , then the virtual welfare of ùë® ‚àó can be written as:  Whenthebid of ùëéùëë ùë° rises to ùëè ‚Ä≤ ùë° > ùëè ùë° , suppose the resulting allocation maximizing virtual welfare is ùë® ‚Ä≤ , i.e. ,  Contextual Generative Auction with Permutation-level Externalities for Online Advertising KDD '25, August 3-7, 2025, Toronto, Canada We can directly obtain that ùëéùëë ùë° ‚àà ùë® ‚Ä≤ ; otherwise, suppose ùëéùëë ùë° ‚àâ ùë® ‚Ä≤ , then we have Àú Œ¶ ( ùë® ‚Ä≤ ; ùëè ‚Ä≤ ùë° ) = Àú Œ¶ ( ùë® ‚Ä≤ ; ùëè ùë° ) . Since ùë® ‚àó maximizes virtual welfare when ùëéùëë ùë° bids ùëè ùë° and ùúô ( ùëè, ùêπ ) is monotone non-decreasing in ùëè [26], it follows that Àú Œ¶ ( ùë® ‚Ä≤ ; ùëè ùë° ) ‚â§ Àú Œ¶ ( ùë® ‚àó , ùëè ùë° ) ‚â§ Àú Œ¶ ( ùë® ‚àó ; ùëè ‚Ä≤ ùë° ) . If the first ' ‚â§ ' holds as equality, meaning when ùëéùëë ùë° bids ùëè ‚Ä≤ ùë° , both allocations ùë® ‚Ä≤ and ùë® ‚àó have equal and maximized virtual welfare, we choose ùë® ‚àó as the allocation result w.l.o.g . Thus, when ùëéùëë ùë° increases its bid, the allocation remains unchanged, and so does the CTR of ùëéùëë ùë° , validating the proposition. Otherwise, Àú Œ¶ ( ùë® ‚Ä≤ ; ùëè ùë° ) < Àú Œ¶ ( ùë® ‚àó , ùëè ùë° ) , hence, Àú Œ¶ ( ùë® ‚Ä≤ ; ùëè ‚Ä≤ ùë° ) < Àú Œ¶ ( ùë® ‚àó ; ùëè ‚Ä≤ ùë° ) , contradicting the definition of ùë® ‚Ä≤ . Therefore, we have ùëéùëë ùë° ‚àà ùë® ‚Ä≤ . Similarly, the virtual welfare of ùë® ‚Ä≤ can be written as:  Based on the maximized virtual welfare property of ùë® ‚àó and ùë® ‚Ä≤ , we can deduce the following two inequalities:   By subtracting Inequality (12) from Inequality (11), we obtain:  Since Àú ùúô ( ùë°, ùêπ ùë° ) is monotone non-decreasing in ùë° and ùëè ùë° < ùëè ‚Ä≤ ùë° , we have:    Œò ( ùíô ùíï ; A( ùëè ùë° , ùíÉ -ùíï ; ùëø , ùíñ ) , ùëø , ùíñ ) ‚â§ Œò ( ùíô ùíï ; A( ùëè ‚Ä≤ ùë° , ùíÉ -ùíï ; ùëø ) , ùëø , ùíñ ) , demonstrating that the allocation rule A is monotone. ¬∑ Case 2: Àú ùúô ( ùëè ùë° , ùêπ ùë° ) -Àú ùúô ( ùëè ‚Ä≤ ùë° , ùêπ ùë° ) = 0. By swapping the LHS and RHS of Inequality (12) and then adding it to Inequality (11), we obtain:  Substituting Àú ùúô ( ùëè ùë° , ùêπ ùë° ) = Àú ùúô ( ùëè ‚Ä≤ ùë° , ùêπ ùë° ) into Equation (15), we have, the ' ‚â• ' in Inequality (15) holds as equality. Therefore, both Inequality (11) and Inequality (12) hold as equalities, which means that both ùë® ‚àó and ùë® ‚Ä≤ are the allocations that maximize virtual welfare after ùëéùëë ùë° increases her bid to ùëè ‚Ä≤ ùë° . Therefore, w.l.o.g , we choose ùë® ‚àó as the final allocation result, indicating that the allocation outcome remains unchanged after the increase in ùëéùëë ùë° 's bid. Consequently, the CTR of ùëéùëë ùë° also remains unchanged. Thus, the allocation rule A is monotone.",
  "keywords_parsed": [
    "Learning-Based Mechanism Design",
    " Externalities",
    " Generative Auction"
  ]
}