{"TIM: Temporal Interaction Model in Notification System": "Huxiao Ji jihuxiao@kuaishou.com Kuaishou Technology Co., Ltd. Beijing, China Shunyu Zhang zhangshunyu@kuaishou.com Kuaishou Technology Co., Ltd. Beijing, China Cunyi Zhang zhangcunyi@kuaishou.com Kuaishou Technology Co., Ltd. Beijing, China", "Haitao Yang Linchuan Li": "yanghaitao@kuaishou.com lilinchuan@kuaishou.com Kuaishou Technology Co., Ltd. Beijing, China", "Xuanping Li \u2217": "lixuanping@kuaishou.com Kuaishou Technology Co., Ltd. Beijing, China", "ABSTRACT": "Wenwu Ou ouwenwu@gmail.com Independent Beijing, China", "ACMReference Format:": "Modern mobile applications heavily rely on the notification system to acquire daily active users and enhance user engagement. Being able to proactively reach users, the system has to decide when to send notifications to users. Although many researchers have studied optimizing the timing of sending notifications, they only utilized users' contextual features, without modeling users' behavior patterns. Additionally, these efforts only focus on individual notifications, and there is a lack of studies on optimizing the holistic timing of multiple notifications within a period. To bridge these gaps, we propose the Temporal Interaction Model (TIM), which models users' behavior patterns by estimating CTR in every time slot over a day in our short video application Kuaishou. TIM leverages long-term user historical interaction sequence features such as notification receipts, clicks, watch time and effective views, and employs a temporal attention unit (TAU) to extract user behavior patterns. Moreover, we provide an elegant strategy of holistic notifications send time control to improve user engagement while minimizing disruption. We evaluate the effectiveness of TIM through offline experiments and online A/B tests. The results indicate that TIM is a reliable tool for forecasting user behavior, leading to a remarkable enhancement in user engagement without causing undue disturbance.", "CCS CONCEPTS": "\u00b7 Information systems \u2192 Personalization .", "KEYWORDS": "Mobile Notification, Deep Learning \u2217 corresponding author Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. ICMR '24, June 10-14, 2024, Phuket, Thailand. \u00a9 2024 Copyright held by the owner/author(s). Publication rights licensed to ACM. ACM ISBN 979-8-4007-0619-6/24/06...$15.00 https://doi.org/10.1145/3652583.3657614 Huxiao Ji, Haitao Yang, Linchuan Li, Shunyu Zhang, Cunyi Zhang, Xuanping Li, and Wenwu Ou. 2024. TIM: Temporal Interaction Model in Notification System. In Proceedings of the 2024 International Conference on Multimedia Retrieval (ICMR '24), June 10-14, 2024, Phuket, Thailand. ACM, New York, NY, USA, 5 pages. https://doi.org/10.1145/3652583.3657614", "1 INTRODUCTION": "In an era where the digital landscape is saturated with an overwhelming amount of content, capturing and maintaining user attention has become a formidable challenge for mobile applications. Amidst the cacophony of digital interactions, mobile phone notifications have emerged as a potent tool for engaging users, acting as a bridge, connecting users to applications and services in a timely, personalized, and contextually relevant manner. However, users typically receive an average of around 100 notifications from different mobile phone applications (apps) per day[10]. If the delivery of notifications is poorly timed, users may miss these alerts on their phones. In contrast, if multiple notifications are sent continuously while users are using their phones, they may feel disturbed and consequently disable the notification function. Thus, it is important to find the opportune moments in order to signalize notifications to remind users of important values and increase engagement without causing excessive disturbance. This paper seeks to explore the efficacy of phone notifications as a mechanism to enhance user engagement, delving into the strategies that can optimize their impact without creating undue interference. Recently, a multitude of studies have explored various dimensions of forecasting user engagement on social platforms[6, 14, 20, 22, 23]. These methods include analyzing user behavior and social attributes[19], constructing user action graphs[9], identifying the periodic nature of user activities[2], assessing the causal impacts of social influence[24], and capturing similarities from user interactions[17]. These studies employ a uniform model with static parameters across all users, which may not adequately capture the diverse patterns of user engagement. One approach [3] utilizes decision trees to categorize users into distinct clusters, followed by the application of individual logistic regression models for each cluster to predict user attrition. Another study [21] utilizes matrix factorization techniques to forecast personalized engagement in mobile video streaming. However, these approaches fall short in our context, where extensive user interaction sequence data is present. ICMR '24, June 10-14, 2024, Phuket, Thailand. Huxiao Ji et al. Embedding layer Temporal Feature Extraction Target date type History date type sequence User interaction sequence context feature Temporal Attention Unit FC + Relu (16) FC + Relu (8) Sigmoid Output \ud835\udc3e embedding vectors Figure 1: Overview of TIM, with TAU as the central structure for extracting user behavioral patterns. TAU extracts the feature of the target date from the day dimension and then fuses the features in the slot dimension. Temporal Attention Unit Target Date Type Weighted  sum :Work day :Rest day Date Type Embedding User Interaction Embedding Inner Product & Softmax Attention Score \u00d7\ud835\udc4a ! \" \u00d7\ud835\udc4a ! # Query Value Key \ud835\udc3e Stack Output of TAU, \ud835\udc3e embedding vectors for \ud835\udc3e slots Rotary Positional Embedding & Linear  Self Attention \u00b7 \u00b7 \u00b7 Previous studies have suggested numerous techniques to determine the optimal moment to send a notification, largely by predicting its response[8, 11, 13]. One study employed built-in sensors to detect social context and identified 'breakpoint', an opportune moment to deliver smartphone notifications[12]. Another investigation found that such a breakpoint occurs when a user pauses their work and has spare time to interact with a significant notification[7]. However, user engagement may not be attributed to a single notification, but a sequence of notifications, presenting an attribution challenge for modeling. To our best knowledge, no previous work has resolved the issue of determining the holistic timing for sending multiple notifications to enhance user engagement throughout the day. To fully model the engagement habits of users, we propose the Temporal Interaction Model (TIM). TIM leverages long-term user historical interaction sequences and employs a temporal attention unit (TAU) to extract key behavioral features, with a particular focus on identifying distinct patterns that emerge during work days and rest days. With a day divided into several equal time slots, TIM estimates users' slot-wise CTR over a day. Moreover, we put forward the first strategy that optimizes the holistic timing of multiple notifications in a day, with the ultimate goal of maximizing the notification click volume of Kuaishou. In the subsequent sections, we will present theoretical derivation and empirical evidence to support our proposed method in section 2. Section 3 introduces the details and results of our offline experiments and online A/B tests on KUAISHOU. Finally, section 4 concludes this work and discusses future works.", "2 METHODS": "In this section, we provide a detailed description of TIM in section 2.1 and present the derivation and implementation of our strategy in section 2.2.", "2.1 Temporal Interaction Model": "To simplify the problem of notification send timing, we divide a day into \ud835\udc3e equal time slots with length \ud835\udc47 each and use TIM to estimate users' slot-wise CTR. The overview of TIM is shown in fig. 1. We collected various interaction features of users during \ud835\udc3e time slots in the past \ud835\udc3f days, including notification receipts, clicks, active duration, video browsing counts, etc. The feature vectors forms a \ud835\udc3e \u00d7 \ud835\udc3f \u00d7 \ud835\udc51 1 tensor \ud835\udc4b = ( \ud835\udc4b 1 , \ud835\udc4b 2 , . . . , \ud835\udc4b \ud835\udc3e ) . We leverage the effectiveness of attention mechanisms[1, 4, 5, 18] for sequence processing by introducing the Temporal Attention Unit (TAU) to extract user behavior pattern embeddings from long-term historical interaction sequences, which addresses the previous limitation of not fully utilizing users' historical behaviors. The fully connected network that follows integrates user contextual features and behavior pattern embeddings. TAU consists of two attention layers. The first layer is a target attention layer, which outputs one embedding for each of the \ud835\udc3e slots by extracting user interaction features of the same time slot in previous \ud835\udc3f days. The outputs are formulated as  where \ud835\udc92 1 = \ud835\udc85 \u22a4 \ud835\udc5e \ud835\udc4a \ud835\udc44 1 , \ud835\udc3e 1 = ( \ud835\udc37 \u210e + \ud835\udc4b \ud835\udc58 ) \ud835\udc4a \ud835\udc3e 1 , \ud835\udc49 1 = ( \ud835\udc37 \u210e + \ud835\udc4b \ud835\udc58 ) \ud835\udc4a \ud835\udc49 1 , Supposing the projection matrices of query, key and value are \ud835\udc4a \ud835\udc44 1 , \ud835\udc4a \ud835\udc3e 1 and \ud835\udc4a \ud835\udc49 1 correspondingly, \ud835\udc85 \ud835\udc5e and \ud835\udc37 \u210e represent target date type TIM: Temporal Interaction Model in Notification System ICMR '24, June 10-14, 2024, Phuket, Thailand. Table 1: Performance comparison between TIM and baseline models. Each row represents xgBoost without and with user interaction features, MLP without and with user interaction features and TIM, respectively. embedding and historical date type embedding (DTE) respectively, which can alleviate the difference in user behavior habits between work days and rest days, and \ud835\udc51 2 denotes the projection matrices dimension to scale the weight. The second attention layer, in which \ud835\udc90 1 \ud835\udc58 ( \ud835\udc58 \u2208 { 1 , 2 , . . . , \ud835\udc3e }) fuses with each other, is a linear self-attention layer[15] with rotary position embedding (RoPE)[16]. Let O 1 = ( \ud835\udc90 1 1 , \ud835\udc90 1 2 , . . . , \ud835\udc90 1 \ud835\udc3e ) \u22a4 be the input matrix, \ud835\udc4a \ud835\udc44 2 , \ud835\udc4a \ud835\udc3e 2 and \ud835\udc4a \ud835\udc49 2 be projection matrices of this layer, we have \ud835\udc44 2 = O 1 \ud835\udc4a \ud835\udc44 2 , \ud835\udc3e 2 = O 1 \ud835\udc4a \ud835\udc3e 2 , \ud835\udc49 2 = O 1 \ud835\udc4a \ud835\udc49 2 , and the final output of TAU is calculated as:  where J represents a matrix of all 1's, G(\u00b7) is the operation that first adds RoPE to query/key matrix and then normalizes each row of the resultant matrix by \u2113 2. The output O 2 = ( \ud835\udc90 2 1 , \ud835\udc90 2 2 , . . . , \ud835\udc90 2 \ud835\udc3e ) \u22a4 indicates the interaction embeddings of every slot extracted by TAU. Finally, for each slot \ud835\udc58 , \ud835\udc90 2 \ud835\udc58 is concatenated with users' contextual embeddings, and fed into the fully connected network to output the predicted CTR \ud835\udc5d \ud835\udc58 .", "2.2 Maximizing Click Count With TIM": "With the predicted slot-wise CTR of TIM, it remains challenging to coordinate these results in practical implementation. The majority of prior research only focused on the timing of a single notification in a time window, while in the real-world scenario of Kuaishou, a user is allocated a given quota of notifications per day. Therefore, we need to perform a holistic optimization rather than optimizing individual points. To address this issue, we model the relationship between slot-wise CTR and our business goals, solve for a sending control strategy that maximizes revenue, and provide an approximate implementation approach. To achieve our business goal, we need to maximize user's overall click count in one day, which is formulated as  where the objective \ud835\udc8f = ( \ud835\udc5b 1 , \ud835\udc5b 2 , . . . , \ud835\udc5b \ud835\udc3e ) represents the expected numbers of notifications sent in each slot, \ud835\udc91 = ( \ud835\udc5d 1 , \ud835\udc5d 2 , . . . , \ud835\udc5d \ud835\udc3e ) is the vector of predicted slot-wise CTR and \ud835\udc5e denotes the quota of notifications assigned to the user. \ud835\udc91 \u22a4 \ud835\udc8f is the expected click count in one day, and \ud835\udf06 \u2225 \ud835\udc8f \u2225 2 2 ( \ud835\udf06 > 0 ) is the regularization term that constrains the number of notifications in a single slot, which ensures that users are not disturbed by continuous notifications. The Lagrangian function is  and the Karush-Kuhn-Tucker(KKT) conditions are derived as:      Combining eqs. (3) to (5), we obtain that  Note that while \ud835\udf41 = 0 and \ud835\udf06 = \u2225 \ud835\udc91 \u2225 1 2 \ud835\udc5e , we have \u2225 \ud835\udc8f \u2225 1 = \u2225 \ud835\udc91 \u2225 1 -\ud835\udc3e\ud835\udf11 2 \ud835\udf06 = \ud835\udc5e \u2225 \ud835\udc91 \u2225 1 -\ud835\udc3e\ud835\udc5e\ud835\udf11 \u2225 \ud835\udc91 \u2225 1 = \ud835\udc5e , which implies that \ud835\udf11 = 0 and \ud835\udc5b \ud835\udc56 \u221d \ud835\udc5d \ud835\udc56 . With such observation, we are inspired to set \ud835\udc5b \ud835\udc56 = \ud835\udc5e \u00b7 \ud835\udc5d \ud835\udc56 \u2225 \ud835\udc91 \u2225 1 . To implement the above-mentioned result, we propose to control the sending with cumulative CTR. Assuming that slot \ud835\udc60 begins at \ud835\udc61 \ud835\udc60 -1 and ends at \ud835\udc61 \ud835\udc60 ( \ud835\udc61 \ud835\udc60 -\ud835\udc61 \ud835\udc60 -1 = \ud835\udc47 ), and the CTR is consistent throughout the slot. The expected number of notifications sent before time \ud835\udc61 \ud835\udc60 -1 + \u0394 \ud835\udc61 (0 \u2264 \u0394 \ud835\udc61 < \ud835\udc47 ) is  where \ud835\udc43 \u210e = \u02dd \ud835\udc60 -1 \ud835\udc56 = 0 \ud835\udc5d \ud835\udc56 is the sum of predicted CTR of slots before \ud835\udc60 . Therefore, when a trigger occurs at time \ud835\udc61 \ud835\udc60 -1 + \u0394 \ud835\udc61 , the probability to send a notification is  where H(T) represents the notification count sent before time T .", "3 EXPERIMENTAL RESULTS": "In this section, we introduce our experiments. Sections 3.1 to 3.3 present the settings, results, and ablation studies of our offline experiments. Section 3.4 reports the results of online A/B tests.", "3.1 Experimental Settings": "Our dataset consists of actual data collected from Kuaishou. We randomly select 1 million users' notification data and features during a week (from date \ud835\udc61 to date \ud835\udc61 + 6) as the training dataset and use the data from the same set of users on date \ud835\udc61 + 8 as the testing dataset. We sampled two datasets according to whether the date \ud835\udc61 + 8 is a ICMR '24, June 10-14, 2024, Phuket, Thailand. Huxiao Ji et al. Table 2: Impact of RoPE and DTE. work day or a rest day. We select xgBoost with and without user interaction features (XGB & XGB \ud835\udc56\ud835\udc5b\ud835\udc61 ) and multi-layer perception with and without user interaction features (MLP & MLP \ud835\udc56\ud835\udc5b\ud835\udc61 ) as baseline models. To evaluate the efficacy of the models, we compute the area under the receiver operating characteristic curve (AUC), top\ud835\udc58 hit ratio (HR@ \ud835\udc58 ) and top\ud835\udc58 Accuracy (A@ \ud835\udc58 ) on the testing dataset.", "3.2 Offline Metrics Comparison": "The offline metrics of TIM and baseline models are reported in table 1. Based on the results, we observe that TIM outperforms all baseline models on all metrics, both on work day and rest day, which shows the strong power of TIM in extracting user behavior patterns. Moreover, XGB \ud835\udc56\ud835\udc5b\ud835\udc61 and MLP \ud835\udc56\ud835\udc5b\ud835\udc61 surpass XGB and MLP respectively by a large margin, indicating the significant effect of user history interaction features.", "3.3 Ablation Study": "In order to figure out the contribution of RoPE and DTE, we conduct experiments on TIM without RoPE and DTE (TIM \ud835\udc4f\ud835\udc4e\ud835\udc60\ud835\udc52 ), and with only RoPE (TIM \ud835\udc45 ) or DTE (TIM \ud835\udc37 ). Results are reported in table 2. We observe the performance of TIM surpasses both TIM \ud835\udc45 and TIM \ud835\udc37 , showing that both RoPE and DTE work in enhancing model ability. As supporting evidence, we extracted the query embedding for history 30 days and calculated their average attention scores to each other in the target attention layer of TIM and TIM \ud835\udc45 . The results are shown in figs. 2(a) and 2(b) as heat maps. The '0' on the axis represents work days and '1' represents rest days. We observe that the attention score heatmap of TIM exhibits clear striped patterns Figure 2: Attention scores in TIM (a) and TIM \ud835\udc45 (b). 0 0 0 0 1 1 0 0 0 0 1 1 1 0 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 0 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 (a) TIM 0 0 0 0 1 1 0 0 0 0 1 1 1 0 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 0 0 1 1 0 0 0 0 1 1 1 0 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 (b) TIM \ud835\udc45 that correlate with work days and rest days, while that of TIM \ud835\udc45 does not. This suggests that DTE can assist the model in accurately extracting user behavior patterns.", "3.4 Online Evaluation": "We also report on the online business gains of TIM through the A/B test, where users are randomly divided into three groups. For users in the control group, notifications are distributed evenly over time. Users in another group receive notifications based on the overall slot-wise CTR. The last group uses TIM to control the delivery. For a fair comparison, the quotas of notifications of users in all groups are assigned by the same algorithm. We mainly focus on the following metrics: \u00b7 DAU: Daily active users. \u00b7 Watch time: Total duration spent on watching videos. \u00b7 Send volume: Total notification sent volume. \u00b7 CTR: Click-through rate, the percentage of notifications that get clicked over all notifications in one day. \u00b7 Switch close rate: Percentage of users who switched off the notification toggle from being switched on within a day. Our main business goals include duration and DAU, and the switch close rate needs to be neutral to ensure user satisfaction. Results in table 3 shows that compared with uniform delivery, TIM increases the CTR of notifications by 1%, resulting in a 0.1% increase in DAU and a 0.066% increase in watch time. At the same time, the volume of notifications (+0.023% with p-value=0.48) and switch close rate (+0.448% with p-value=0.47) remain neutral. This suggests that TIM guarantees both precise timing of notifications and business health, providing users with a strong sense of awareness. Table 3: TIM's business gain in online A/B test, compared with uniform delivery. In parentheses are p-values.", "4 CONCLUSION": "In this paper, we introduce the Temporal Interaction Model (TIM). TIM uses historical data on user interactions over a long time, applies TAU to identify patterns in user behavior, and predicts CTR for each user in each time slot throughout the day. Furthermore, we present a strategy that optimizes the overall timing of notifications in mobile applications, leading to an enhancement of user engagement without causing excessive disturbance. Our experimental results demonstrate the effectiveness of TIM in enhancing notification delivery. In future work, we will explore the application of TIM in diverse scenarios and conduct targeted improvements, such as enhancing real-time performance and multi-objective estimation. TIM: Temporal Interaction Model in Notification System ICMR '24, June 10-14, 2024, Phuket, Thailand.", "REFERENCES": "[1] Dzmitry Bahdanau, Kyunghyun Cho, and Yoshua Bengio. 2014. Neural machine translation by jointly learning to align and translate. arXiv preprint arXiv:1409.0473 (2014). [2] Farhan Asif Chowdhury, Yozen Liu, Koustuv Saha, Nicholas Vincent, Leonardo Neves, Neil Shah, and Maarten W Bos. 2021. CEAM: the effectiveness of cyclic and ephemeral attention models of user behavior on social platforms. In Proceedings of the international AAAI conference on web and social media , Vol. 15. 117-128. [3] Arno De Caigny, Kristof Coussement, and Koen W De Bock. 2018. A new hybrid classification algorithm for customer churn prediction based on logistic regression and decision trees. European Journal of Operational Research 269, 2 (2018), 760-772. [4] Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. 2018. BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding. arXiv preprint arXiv:1810.04805 (2018). [5] Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, et al. 2020. An Image is Worth 16x16 Words: Transformers for Image Recognition at Scale. In International Conference on Learning Representations . [6] Rupesh Gupta, Guanfeng Liang, Hsiao-Ping Tseng, Ravi Kiran Holur Vijay, Xiaoyu Chen, and R\u00f3mer Rosales. 2016. Email volume optimization at LinkedIn. In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining . 97-106. [7] Rashid Kamal, Paul McCullagh, Ian Cleland, and Chris Nugent. 2021. A hybrid model based on behavioural and situational context to detect best time to deliver notifications on mobile devices. In Integrated Emerging Methods of Artificial Intelligence & Cloud Computing . Springer, 11-21. [8] Feifan Li, Lun Du, Qiang Fu, Shi Han, Yushu Du, Guangming Lu, and Zi Li. 2023. DIGMN: Dynamic Intent Guided Meta Network for Differentiated User Engagement Forecasting in Online Professional Social Platforms. In Proceedings of the Sixteenth ACM International Conference on Web Search and Data Mining . 384-392. [9] Yozen Liu, Xiaolin Shi, Lucas Pierce, and Xiang Ren. 2019. Characterizing and forecasting user engagement with in-app action graph: A case study of snapchat. In Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining . 2023-2031. [10] Abhinav Mehrotra, Mirco Musolesi, Robert Hendley, and Veljko Pejovic. 2015. Designing content-driven intelligent notification mechanisms for mobile applications. In Proceedings of the 2015 ACM International Joint Conference on Pervasive and Ubiquitous Computing . 813-824. [11] Conor O'Brien, Huasen Wu, Shaodan Zhai, Dalin Guo, Wenzhe Shi, and Jonathan J Hunt. 2022. Should i send this notification? Optimizing push notifications decision making by modeling the future. arXiv preprint arXiv:2202.08812 (2022). [12] Chunjong Park, Junsung Lim, Juho Kim, Sung-Ju Lee, and Dongman Lee. 2017. Don't bother me. I'm socializing! A breakpoint-based smartphone notification"}
