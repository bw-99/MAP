{"Deep Context Interest Network for Click-Through Rate Prediction": "Xuyang Hou,Zhe Wang,Qi Liu,Tan Qu,Jia Cheng,Jun Lei Meituan, Beijing, China {houxuyang,wangzhe65,liuqi104,qutan,jia.cheng.sh,leijun}@meituan.com", "ABSTRACT": "list item (1) Click-Through Rate (CTR) prediction, estimating the probability of a user clicking on an item, is essential in industrial applications, such as online advertising. Many works focus on user behavior modeling to improve CTR prediction performance. However, most of those methods only model users' positive interests from users' click items while ignoring the context information, which is the display items around the clicks, resulting in inferior performance. In this paper, we highlight the importance of context information on user behavior modeling and propose a novel model named D eep C ontext I nterest N etwork (DCIN), which integrally models the click and its display context to learn users' context-aware interests. DCIN consists of three key modules: 1) Position-aware Context Aggregation Module (PCAM), which performs aggregation of display items with an attention mechanism; 2) Feedback-Context Fusion Module (FCFM), which fuses the representation of clicks and display contexts through non-linear feature interaction; 3) Interest Matching Module (IMM), which activates interests related with the target item. Moreover, we provide our hands-on solution to implement our DCIN model on large-scale industrial systems. The significant improvements in both offline and online evaluations demonstrate the superiority of our proposed DCIN method. Notably, DCIN has been deployed on our online advertising system serving the main traffic, which brings 1.5% CTR and 1.5% RPM lift.", "CCS CONCEPTS": "\u00b7 Information systems \u2192 Personalization .", "KEYWORDS": "CTR Prediction, User Behavior Modeling, Context-aware Interests", "ACMReference Format:": "Xuyang Hou,Zhe Wang,Qi Liu,Tan Qu,Jia Cheng,Jun Lei. 2023. Deep Context Interest Network for Click-Through Rate Prediction. In Proceedings of the 32nd ACM International Conference on Information and Knowledge Management (CIKM '23), October 21-25, 2023, Birmingham, United Kingdom. ACM, New York, NY, USA, 5 pages. https://doi.org/10.1145/XXXXXX.XXXXXX", "1 INTRODUCTION": "Click-Through Rate (CTR) prediction, which aims at predicting the probability of a user clicking on an item, is critical for industrial Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. list item (2) click click applications such as online advertising and recommendation systems [5, 16]. Recent research on CTR can be divided into many directions, such as feature interaction and user behavior modeling. This paper focuses on the problem of user behavior modeling. Works on user behavior modeling hypothesize that users' historical behaviors reflect users' interests towards items. Lots of works [7, 11, 13, 18, 21, 22] focus on capturing user interests from click behaviors and achieve great success in CTR prediction. However, some studies [13, 15] find that there are gaps between users' click behaviors and their real interests, leading to biased user representation and inferior performance. In order to tackle the problem, pioneering works DFN [17], DUMN [1] introduce users' unclick behaviors to capture users' negative preferences and get further performance promotion. However, they model users' click and unclick behaviors separately, which ignores the interaction between click and unclick items. As shown in Figure 1, there are generally many display items on one screen of a computer/smartphone. Users' click behaviors are not only determined by the matching degree between items and their interests but also influenced by the display context [2, 12, 20]. For example, as shown in Figure 1, when a user wants to buy a T-shirt, he may click the green one when its surrounding items are smartphones, shoes, or hair dryers since those are boring to him. But when the display items are all T-shirts, he may click the blue one because it may match his interests better. Based on the above analysis, we argue that display context is also essential in interest modeling. RACP [6] introduces page-wise feedback modeling and aggregates different pages into different interest representations. However, different clicks on one page may indicate different interests, which degrades the model's capability to capture users' fine-grained interests precisely. In this paper, we propose D eep C ontext I nterest N etwork (DCIN) to extract context-aware interest representations from users' click behaviors and corresponding display contexts aiming at acquiring comprehensive and fine-grained user representation. Specifically, we first design a Position-aware Context Aggregation Module (PCAM), which performs aggregation of display items with an attention mechanism. Meanwhile, we consider position bias [9, 10] and integrate position information into PCAM. Then, Feedback-Context Fusion Module (FCFM) is proposed to fuse the representation of clicks and corresponding display contexts through non-linear feature interaction to capture users' context-wise interests. Finally, we use Interest Matching Module (IMM) to match behaviors related to the target item. Moreover, we also provide our hands-on solution to implement DCIN on large-scale industrial systems. Our contributions are as follows: \u00b7 We highlight the necessity of introducing context information for interest modeling, which can be used to capture users' interests more precisely and comprehensively. \u00b7 We devise a novel sequential model, DCIN, which effectively integrates display context and position information to acquire users' context-aware interests. \u00b7 We conduct both offline and online experiments, and the significant improvements demonstrate the superiority of our proposed DCIN method. The online optimization makes DCIN process users' behavior sequences 28x longer than the SOTA method RACP [6]. Notably, DCIN has served the main traffic in our online advertising system, bringing 1.5% CTR and 1.5% RPM lift.", "2 METHODOLOGY": "In this section, we introduce the design of DCIN.", "2.1 Preliminaries": "CTR prediction is to predict the probability \ud835\udc5d that user \ud835\udc62 clicks target item \ud835\udc61 with model F , given user behaviors \ud835\udc6a (click items) and \ud835\udc6b (display items), and context \ud835\udc50 , formulated as \ud835\udc5d = F( \ud835\udc6a , \ud835\udc6b , \ud835\udc62, \ud835\udc61, \ud835\udc50 ) . The click behaviors are a sequential list of click items with corresponding features such as item id, category, etc., i.e., \ud835\udc6a = { \ud835\udc50 1 , \ud835\udc50 2 . . . , \ud835\udc50 \ud835\udc41 } , where \ud835\udc50 \ud835\udc56 is the \ud835\udc56 -th click item and \ud835\udc41 is the length of \ud835\udc6a . To model the display context, we pick out \ud835\udc40 corresponding display items for each click, hence display behaviors \ud835\udc6b can be denoted as: where \ud835\udc51 \ud835\udc56 \ud835\udc57 is the \ud835\udc57 -th display item around click \ud835\udc50 \ud835\udc56 . We try to keep the click in the middle when selecting display items for each click. We denote \ud835\udc5d \ud835\udc56 and \ud835\udc5e \ud835\udc56 \ud835\udc57 as the absolute position of \ud835\udc50 \ud835\udc56 and \ud835\udc51 \ud835\udc56 \ud835\udc57 respectively. We also calculate relative position \ud835\udc5f \ud835\udc56 \ud835\udc57 = \ud835\udc5d \ud835\udc56 -\ud835\udc5e \ud835\udc56 \ud835\udc57 between \ud835\udc50 \ud835\udc56 and \ud835\udc51 \ud835\udc56 \ud835\udc57 . We utilize the widely-used embedding technique to transform sparse features into low-dimensional dense vectors. For example, \ud835\udc86 \ud835\udc50 \ud835\udc56 represents the embedding of click item \ud835\udc50 \ud835\udc56 .", "2.2 Deep Context Interest Network": "The architecture of DCIN is shown in Figure 2, mainly consisting of three modules. Specifically, we first design Position-aware Context Aggregation Module (PCAM) to aggregate the display items with an attention mechanism. Then Feedback-Context Fusion Module (FCFM) is proposed to fuse the representation of clicks and corresponding display contexts through non-linear feature interaction to acquire context-aware interests. Finally, we propose the Interest Matching Module (IMM) to learn the interests related to the target item adaptively. 2.2.1 Position-aware Context Aggregation Module . Asshown in Figure 1, there are generally many display items on one screen of a computer/smartphone. Users' click behaviors are not only determined by the matching degree between items and their interests but also influenced by the display context [2, 20]. However, modeling users' interests only from their click behaviors ignores the context information, leading to biased interest representation and inferior performance. To capture users' context-aware interests, we design PCAM, which aggregates display items for each click with an attention mechanism. Moreover, users generally tend to click top items on the screen (known as position bias [9, 10]) regardless of the relevance. Hence, items' positions also impact users' click behaviors. We also integrate position information into PCAM for a better understanding of users' actual interests. As a result, PCAM can be formulated as follows: where \ud835\udc97 \ud835\udc8a represents the display context corresponding to click \ud835\udc50 \ud835\udc56 and is modeled as a weighted sum aggregation of display items \ud835\udc86 \ud835\udc51 \ud835\udc56 \ud835\udc57 , and \ud835\udc7e \ud835\udc49 is learning parameters. \ud835\udf07 \ud835\udc56 \ud835\udc57 is the attention weight, which can be formulated as follows: where \ud835\udefc \ud835\udc56 \ud835\udc57 is the relevance between the \ud835\udc56 -th click and its \ud835\udc57 -th display item, \ud835\udc99 \ud835\udc50 \ud835\udc56 = \ud835\udc50\ud835\udc5c\ud835\udc5b\ud835\udc50\ud835\udc4e\ud835\udc61 ( \ud835\udc86 \ud835\udc50 \ud835\udc56 , \ud835\udc86 \ud835\udc5d \ud835\udc56 ) represents the concatenation of item embedding \ud835\udc86 \ud835\udc50 \ud835\udc56 and its absolute position embedding \ud835\udc86 \ud835\udc5d \ud835\udc56 and the same as \ud835\udc99 \ud835\udc51 \ud835\udc56 \ud835\udc57 , \ud835\udc52 \ud835\udc5f \ud835\udc56 \ud835\udc57 is the one-dimensional embedding vector of relative position \ud835\udc5d \ud835\udc56 \ud835\udc57 , and \ud835\udc7e \ud835\udc44 and \ud835\udc7e \ud835\udc3e are learning parameters. 2.2.2 Feedback-Context Fusion Module . Previous user behavior models [7, 11, 13, 18, 21, 22] directly regard users' click items as users' interest, ignoring the context information. To capture users' context-aware interests, we propose FCFM to fuse the representation of clicks and corresponding display contexts through non-linear feature interaction. Concretely, FCFM is implemented by a 2-layer MLP: where \ud835\udc87 ( \ud835\udc58 ) \ud835\udc56 is the output of the \ud835\udc58 -th layer, and \ud835\udc7e ( \ud835\udc58 ) and \ud835\udc83 ( \ud835\udc58 ) are learning parameters. The input is formulated as follows: where \u2217 represents the element-wise product. Then, we obtain context-aware interest \ud835\udc70 \ud835\udc56 = \ud835\udc87 2 \ud835\udc56 from click \ud835\udc50 \ud835\udc56 and its corresponding display context \ud835\udc97 \ud835\udc56 . For generalization and trainability, we share the learnable parameters across different clicks. 2.2.3 Interest Matching Module . With the first two modules, weintegrally model the click and its display context to capture users' context-aware interests, denoted as \ud835\udc70 = { \ud835\udc70 1 , \ud835\udc70 2 , . . . , \ud835\udc70 \ud835\udc41 } , which are more precise and comprehensive than those extracted only from click behaviors. To capture the user interests that are related to the target item, the SOTA sequential models can be easily integrated, like DIN [22], DIEN [21], BST [3], etc. Here we choose the DIN Target Item Other Feature \u2026 \u2026 Attention Attention Attention MLP Output Sum pooling \ud835\udc3c ! \ud835\udc52 \" ! \ud835\udc52 # ! \ud835\udc52 $ !! Attention \ud835\udc52 % !! \ud835\udc52 $ !& \ud835\udc52 % !& \u2026 Fusion Module \ud835\udc65 ! \" \ud835\udc63 ! \ud835\udc3c ' \ud835\udc3c ( Position-aware Context  Aggregation Module (PCAM) Feedback-Context Fusion Module (FCFM) Interest Matching Module (IMM) \ud835\udc52 \" \" \ud835\udc52 # \" \ud835\udc52 $ '! Attention \ud835\udc52 % '! \ud835\udc52 $ '& \ud835\udc52 % '& \u2026 \ud835\udc65 ! # \ud835\udc63 \" \ud835\udc52 \" # \ud835\udc52 # # \ud835\udc52 $ (! Attention \ud835\udc52 % (! \ud835\udc52 $ (& \ud835\udc52 % (& \u2026 \ud835\udc65 ! $ \ud835\udc63 # Fusion Module Fusion Module method to aggregate user interests, which can be formulated as follows: behaviors are reserved. The surrounding 20 display items for each click are utilized to model the display context. where \ud835\udc7c is the final user representation, which will be concatenated with other features and fed into MLP for CTR prediction. We utilize the widely-used negative log-likelihood function as the loss function to train our DCIN model.", "2.3 Optimization for Online Serving": "For industrial recommender systems, the serving latency constraints are highly restricted. Since we introduce display items to capture users' context-aware interests, the sequence length has been extended tens of times. Generally, the serving latency of online models is proportional to the sequence length. As a result, it is challenging to make DCIN serve in an industrial online system directly. To address the challenge, we make some online optimizations. Specifically, since PCAM and FCFM have no connection with the target item, we can pre-calculate users' context-aware interest representations \ud835\udc70 = { \ud835\udc70 1 , \ud835\udc70 2 , . . . , \ud835\udc70 \ud835\udc41 } , and directly make it as model's input when online serving, which saves a large amount of online serving time (10 milliseconds). Since RACP [6] needs the target item to aggregate page-wise interests, it can only shorten the sequence length to make the model serve online. With online optimization, DCIN can process users' behavior sequences 28x longer than the SOTA method RACP, adding only one millisecond of online latency.", "3 EXPERIMENTS": "", "3.1 Experimental Settings": "3.1.1 Datasets . Integrating display context and position information into interest models is a novel exploration. Hence we build a 31-day industrial dataset from our online advertising system, which contains more than 1 billion samples. Following the standard industry practice, we split the data in the first 30 days as the training set and the data on the last day as the testing set. Users' recent 50-click 3.1.2 Compared Methods . We implement six state-of-art models to compare with DCIN. All models use the same features for fair comparisons. Wide&Deep [4] consists of a Wide part and a Deep part to learn raw and high-order feature interactions. DeepFM [8] replaces the Wide part in [4] with an FM layer. DIN [22] introduces an attention mechanism to capture users' diverse interests for different target items. DIEN [21] proposes an interest evolving layer based on a gated recurrent unit (GRU) to model users' dynamic interests. DFN [17] tries to learn positive preferences from click behaviors and negative preferences from unclick behaviors. RACP [6] introduces page-wise feedback modeling and is the published SOTA solution for user behavior modeling. 3.1.3 Evaluation Metrics . We utilize a widely-adopted metric Area Under Curve (AUC) for evaluation in the CTR prediction task. We further introduce RelaImpr [19] to measure the relative improvements over the base model:", "3.2 Experimental Results": "We repeat all experiments 5 times and report their average results. In experiments, the embedding dimension is 16 for each feature. The hidden sizes of MLP in FCFM and the output layer are 64/16, and 1024/512/128 respectively. We utilize Adam with the learning rate to be 1e-4, and the batch size is 3000. 3.2.1 Offline Performance Comparison . The experimental results are shown in Table 1, from which we can find that our proposed DCIN significantly outperforms all methods on AUC and achieves 21.24% RelaImpr over the base model. As introduced in Section 2.3, DCIN can process users' behavior sequences 28x longer than RACP. For a fair comparison, DCIN (short) uses the same sequence length as RACP, and DCIN uses a longer sequence as implemented in our online advertising system. Specifically, first, DIN and DIEN perform much better than Wide&Deep and DeepFM because they capture users' diverse and temporal interests for different target items. Second, DFN beats DIN and DIEN slightly since it tries to capture dislike signals from unclick behaviors. Fourth, RACP performs better than DFN since it models users' contextualized page-wise interests. Fifth, our proposed DCIN (short) beats RACP. On the one hand, different clicks, even on one page, may indicate different interests. RACP only models page-wise interests, degrading the model's capability to capture users' fine-grained interests. On the other hand, RACP ignores the impact that items' positions have on users' click behaviors. Finally, DCIN beats DCIN (short) since it introduces a longer sequence. 3.2.2 Ablation Tests . We also conduct ablation tests to verify the effectiveness and necessity of different components in DCIN. Firstly, we remove the position information in PCAM and conduct experiment DCIN (short)-w/o position. As shown in Table 1, DCIN (short)-w/o position performs worse than DCIN (short) since items' positions also have important impact on users' click behaviors. Secondly, we remove the FCFM module in DCIN and conduct experiment DCIN (short)-w/o FCFM where we directly regard display context \ud835\udc97 \ud835\udc56 as users' interests, which can be formulated as \ud835\udc70 \ud835\udc56 = \ud835\udc97 \ud835\udc56 instead of \ud835\udc70 \ud835\udc56 = \ud835\udc87 2 \ud835\udc56 . As shown in Table 1, DCIN (short)-w/o FCFM also performs poorly than DCIN (short) due to the lack of fusion between clicks and display contexts. 3.2.3 Online A/B Test . We conduct a strict online A/B test to evaluate DCIN on our online advertising system for two weeks. Compared with DIN (online baseline), DCIN has improved CTR by 1.5% and RPM (Revenue Per Mile) by 1.5%. For now, DCIN has been deployed online and serves the main traffic, which contributes to significant business revenue growth. 3.2.4 Case Study . To demonstrate the effectiveness of DCIN for context-aware interest representations, we randomly select 10 click items and choose 100 different display contexts for each click respectively. Then we extract the corresponding context-aware interests \ud835\udc70 \ud835\udc56 and visualize their distribution through t-SNE [14]. As shown in Figure 3, the distinct separation among click items indicates the dominance of click behavior in learning. The obvious diversity of different contexts of the same click demonstrates the ability of DCIN to capture fine-grained context-aware interest representations. 10.0 7.5 5.0 2.5 0.0 2.5 5.0 7.5 10.0 10 5 0 5 10 Figure 3: Visualization of context-aware interests for 10 click items under 100 different display contexts. Each color represents one click item. The representation distribution shows the separation among click items and the diversity among different display contexts of the same click item. To verify the effectiveness of context modeling, we visualize the attention weights from IMM between the target item and the same click item under different display contexts. As shown in Figure 4, the weights of DIN (green color) is the same since DIN only takes click behaviors as input, resulting in the inability to distinguish different display contexts. While DCIN learns higher weights under the right competitive display context where all display items are of interest to the user. click DIN:0.0258 DCIN:0.0236 DCIN:0.0336 DIN:0.0258 Target Item click", "4 CONCLUSIONS": "In this paper, we highlight the necessity of display contexts and position information for interest modeling and devise a novel sequential model DCIN. The significant improvements in both offline and online evaluations demonstrate the superiority of our proposed DCIN methods. Notably, DCIN has been deployed on our online advertising system, and now it is serving the main traffic. Deep Context Interest Network for Click-Through Rate Prediction", "REFERENCES": "[1] Zhi Bian, Shaojun Zhou, Hao Fu, Qihong Yang, Zhenqi Sun, Junjie Tang, Guiquan Liu, Kaikui Liu, and Xiaolong Li. 2021. Denoising User-aware Memory Network for Recommendation. In Fifteenth ACM Conference on Recommender Systems . 400-410. [2] Jes\u00fas Bobadilla, Ra\u00fal Lara-Cabrera, \u00c1ngel Gonz\u00e1lez-Prieto, and Fernando Ortega. 2020. Deepfair: deep learning for improving fairness in recommender systems. arXiv preprint arXiv:2006.05255 (2020). [3] Qiwei Chen, Huan Zhao, Wei Li, Pipei Huang, and Wenwu Ou. 2019. Behavior sequence transformer for e-commerce recommendation in alibaba. In Proceedings of the 1st International Workshop on Deep Learning Practice for High-Dimensional Sparse Data . 1-4. [4] Heng-Tze Cheng, Levent Koc, Jeremiah Harmsen, Tal Shaked, Tushar Chandra, Hrishi Aradhye, Glen Anderson, Greg Corrado, Wei Chai, Mustafa Ispir, et al. 2016. Wide & deep learning for recommender systems. In Proceedings of the 1st workshop on deep learning for recommender systems . 7-10. [5] Paul Covington, Jay Adams, and Emre Sargin. 2016. Deep neural networks for youtube recommendations. In Proceedings of the 10th ACM conference on recommender systems . 191-198. [6] Zhifang Fan, Dan Ou, Yulong Gu, Bairan Fu, Xiang Li, Wentian Bao, Xin-Yu Dai, Xiaoyi Zeng, Tao Zhuang, and Qingwen Liu. 2022. Modeling Users' Contextualized Page-wise Feedback for Click-Through Rate Prediction in E-commerce Search. (2022). [7] Yufei Feng, Fuyu Lv, Weichen Shen, Menghan Wang, Fei Sun, Yu Zhu, and Keping Yang. 2019. Deep session interest network for click-through rate prediction. arXiv preprint arXiv:1905.06482 (2019). [8] Huifeng Guo, Ruiming Tang, Yunming Ye, Zhenguo Li, and Xiuqiang He. 2017. DeepFM: a factorization-machine based neural network for CTR prediction. arXiv preprint arXiv:1703.04247 (2017). [9] Huifeng Guo, Jinkai Yu, Qing Liu, Ruiming Tang, and Yuzhou Zhang. 2019. PAL: a position-bias aware learning framework for CTR prediction in live recommender systems. In Proceedings of the 13th ACM Conference on Recommender Systems . 452-456. [10] Jianqiang Huang, Ke Hu, Qingtao Tang, Mingjian Chen, Yi Qi, Jia Cheng, and Jun Lei. 2021. Deep Position-wise Interaction Network for CTR Prediction. In Proceedings of the 44th International ACM SIGIR Conference on Research and Development in Information Retrieval . 1885-1889. [11] Jing Li, Pengjie Ren, Zhumin Chen, Zhaochun Ren, Tao Lian, and Jun Ma. 2017. Neural attentive session-based recommendation. In Proceedings of the 2017 ACM CIKM '23, October 21-25, 2023, Birmingham, United Kingdom. on Conference on Information and Knowledge Management . 1419-1428. [12] Xiang Li, Shuwei Chen, Jian Dong, Jin Zhang, Yongkang Wang, Xingxing Wang, and Dong Wang. 2023. Decision-Making Context Interaction Network for ClickThrough Rate Prediction. Proceedings of the AAAI Conference on Artificial Intelligence 37, 4 (Jun. 2023), 5195-5202. [13] Qi Pi, Weijie Bian, Guorui Zhou, Xiaoqiang Zhu, and Kun Gai. 2019. Practice on long sequential user behavior modeling for click-through rate prediction. In Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining . 2671-2679. [14] Laurens Van der Maaten and Geoffrey Hinton. 2008. Visualizing data using t-SNE. Journal of machine learning research 9, 11 (2008). [15] MenghanWang,MingmingGong,Xiaolin Zheng, and Kun Zhang. 2018. Modeling dynamic missingness of implicit feedback for recommendation. Advances in neural information processing systems 31 (2018). [16] Zhibo Xiao, Luwei Yang, Wen Jiang, Yi Wei, Yi Hu, and Hao Wang. 2020. Deep multi-interest network for click-through rate prediction. In Proceedings of the 29th ACM International Conference on Information & Knowledge Management . 2265-2268. [17] Ruobing Xie, Cheng Ling, Yalong Wang, Rui Wang, Feng Xia, and Leyu Lin. 2021. Deep feedback network for recommendation. In Proceedings of the Twenty-Ninth International Conference on International Joint Conferences on Artificial Intelligence . 2519-2525. [18] Weinan Xu, Hengxu He, Minshi Tan, Yunming Li, Jun Lang, and Dongbai Guo. 2020. Deep interest with hierarchical attention network for click-through rate prediction. In Proceedings of the 43rd International ACM SIGIR Conference on Research and Development in Information Retrieval . 1905-1908. [19] Ling Yan, Wu-Jun Li, Gui-Rong Xue, and Dingyi Han. 2014. Coupled group lasso for web-scale ctr prediction in display advertising. In International Conference on Machine Learning . PMLR, 802-810. [20] Yu Zheng, Chen Gao, Xiang Li, Xiangnan He, Yong Li, and Depeng Jin. 2021. Disentangling user interest and conformity for recommendation with causal embedding. In Proceedings of the Web Conference 2021 . 2980-2991. [21] Guorui Zhou, Na Mou, Ying Fan, Qi Pi, Weijie Bian, Chang Zhou, Xiaoqiang Zhu, and Kun Gai. 2019. Deep interest evolution network for click-through rate prediction. In Proceedings of the AAAI conference on artificial intelligence , Vol. 33. 5941-5948. [22] Guorui Zhou, Xiaoqiang Zhu, Chenru Song, Ying Fan, Han Zhu, Xiao Ma, Yanghui Yan, Junqi Jin, Han Li, and Kun Gai. 2018. Deep interest network for click-through rate prediction. In Proceedings of the 24th ACM SIGKDD international conference on knowledge discovery & data mining . 1059-1068."}
