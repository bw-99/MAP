{
  "BAT: Benchmark for Auto-bidding Task": "",
  "Alexandra Khirianova": "Ekaterina Solodneva",
  "Andrey Pudovikov": "Avito Moscow, Russia Lebedev Physical Institute of the Russian Academy of Sciences Moscow, Russia khirianova.alexandra@gmail.com Sergey Osokin Avito Moscow, Russia saosokin@avito.ru Moscow Institute of Physics and Technology Moscow, Russia Avito Moscow, Russia solodneva.ea@mipt.ru Egor Samosvat Avito Moscow, Russia easamosvat@avito.ru",
  "Alexander Ledovsky": "Avito Moscow, Russia adledovskiy@avito.ru",
  "Abstract": "The optimization of bidding strategies for online advertising slot auctions presents a critical challenge across numerous digital marketplaces. A significant obstacle to the development, evaluation, and refinement of real-time autobidding algorithms is the scarcity of comprehensive datasets and standardized benchmarks. To address this deficiency, we present an auction benchmark encompassing the two most prevalent auction formats. We implement a series of robust baselines on a novel dataset, addressing the most salient Real-Time Bidding (RTB) problem domains: budget pacing uniformity and Cost Per Click (CPC) constraint optimization. This benchmark provides a user-friendly and intuitive framework for researchers and practitioners to develop and refine innovative autobidding algorithms, thereby facilitating advancements in the field of programmatic advertising. The implementation and additional resources can be accessed at the following repository 1 .",
  "CCS Concepts": "",
  "· Applied computing → Online auctions .": "1 https://github.com/avito-tech/bat-autobidding-benchmark, https://doi.org/10.5281/ zenodo.14794182 Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. WWW'25, Sydney, NSW, Australia. © 2025 Copyright held by the owner/author(s). Publication rights licensed to ACM. ACM ISBN 979-8-4007-1274-6/25/04 https://doi.org/10.1145/3696410.3714657 Lomonosov Moscow State University Moscow, Russia Avito Moscow, Russia a.pudovikov@iai.msu.ru",
  "Yuriy Dorn": "Lomonosov Moscow State University Moscow, Russia Moscow Institute of Physics and Technology Moscow, Russia dornyv@my.msu.ru",
  "Yana Zenkova": "Avito Moscow, Russia ypzenkova@avito.ru",
  "Keywords": "Online auctions, advertising platforms, RTB, autobidding",
  "ACMReference Format:": "Alexandra Khirianova, Ekaterina Solodneva, Andrey Pudovikov, Sergey Osokin, Egor Samosvat, Yuriy Dorn, Alexander Ledovsky, and Yana Zenkova. 2025. BAT: Benchmark for Auto-bidding Task. In Proceedings of the ACM Web Conference 2025 (WWW '25), April 28-May 2, 2025, Sydney, NSW, Australia. ACM,NewYork,NY,USA,11pages. https://doi.org/10.1145/3696410.3714657",
  "1 Introduction": "Modern online advertising systems enable the dynamic rendering of advertisements on web pages in response to a user request [27]. The displayed advertisements are usually chosen from the available inventory according to specific criteria, such as relevance, temporal proximity, and performance metrics. These selected advertisements are then hierarchically organized in descending order based on the aforementioned criteria [34]. In the majority of instances, either all available advertising spaces or the most prominently positioned ones are allocated through an auction mechanism for each impression, competing among sufficiently relevant advertisements [30]. This setup is also known as the sponsored search problem [10, 20]. The company owning the advertisement submits a bid, and the advertising space is awarded to the highest bidder in the auction. Given the immense scale of advertisements and the frequency of auctions occurring in real-time, manual bid setting becomes impractical [31], necessitating the development of optimal automated bidding algorithms and thereby setting the RTB problem [15]. The reliability and efficiency [8] of developed algorithms for such a problem directly influence the effectiveness, targeting precision, and overall return on investment (ROI) in both advertising and trading domains. WWW'25, April 28-May 2, 2025, Sydney, NSW, Australia. Alexandra Khirianova et al. Research on RTB algorithms is widely conducted for both VCG auctions ([25], [31], [4], [6], [2], [35]) and FP auctions ([11], [22], [23], [26], [24], [3], [14]), because these auctions have proven to be competitive [12]. Beyond the diversity in auction types, companies' objectives and constraints in advertising campaigns vary significantly. Budget constraints are ubiquitous, and companies often specify desired click volumes or maximum cost-per-click thresholds [15]. Developing and validating an automated bidding algorithm is an essential step prior to production deployment. The scarcity of appropriate datasets for this task is a well-documented challenge in the field of automated bidding [22].",
  "2 Contribution": "In this study, we introduce BAT (Benchmark for Auto-bidding Task), a novel dataset designed to support the development and evaluation of automated bidding algorithms and related tasks. To enhance the dataset's usability and accessibility, we provide a detailed description of its contents. BAT comprises two distinct parts: data from 10 million FP auctions and 1 million VCG auctions, each collected over a month-long period on a major platform, Avito. Moreover, we demonstrate the practical utility of BAT by introducing two innovative algorithms for RTB: Adaptive Linear Model (ALM) and Traffic-aware PID (TA-PID). These algorithms have demonstrated their effectiveness in production environments, are straightforward to implement, and serve as a solid foundation for the development of more sophisticated methods. Furthermore, we enhanced the automated bidding algorithm M-PID from [33] by leveraging specific dataset fields, resulting in a significant performance improvement compared to the baseline. We also included two additional baselines: the budget pacing system Mystique [28] and an autobidding algorithm with budget and ROI constraints [19]. To ensure reproducibility and facilitate further research, we make the source code used in our analysis publicly available. This code serves as a practical guide for interacting with BAT and provides a solid foundation for researchers and practitioners to build upon our work.",
  "3 Related works": "Development of RTB algorithms is critically important for both individual users and large advertisers, as well as for auction platform owners, to investigate the optimality, fairness, and efficiency of auction processes. The performance of autobidding algorithms under real-world conditions can be evaluated using specialized datasets that include logs from various auction types across a diverse set of companies from different information domains [22]. This is crucial because advertising characteristics for products like automobiles and food differ significantly in terms of temporal periodicity, clickthrough conversion rates, and other metrics. These datasets should encompass key company and advertisement indicators, assess the click probability of winning ads, and provide statistics on auctions won in simulation, expenditures, clicks, and conversions for the algorithm under test [36]. In the context of this task, the 2014 iPinYou dataset [17] remains one of the most pertinent resources available. Developed for the KDDCupcompetition on RTB, this dataset encompasses ad features and bid prices, with the target variable (winning price or cost-perclick) to be predicted, alongside a substantial volume of logged auctions. Moreover, it incorporates contextual features pertaining to user interests and ad slot parameters. Comprising several million bid requests, the iPinYou dataset is conducive to robust statistical analysis and machine learning model training. However, it is limited to 9 advertisers, each representing a distinct logical category, which poses challenges in simulating competition among a more extensive array of ads driven by specific algorithms. Furthermore, the dataset's collection in 2013 may impact the relevance of its content to contemporary trends and technologies in online advertising. For instance, the dataset exclusively represents second-price auctions, which present limitations for many modern platforms that have adopted alternative auction mechanisms [22]. In 2024, a dataset from Alibaba was released [32], developed for testing RL algorithms for solving the RTB problem with a Cost per Action (CPA) constraint. It contains a Generalized Second Price auction with 170 million records; the number of advertisers is 48. This dataset contains the winning price and the bids made in each auction, as well as the conversion action probability. Auctions are implemented for 3 slots. The dataset contains the key components of an RL problem: states, actions, rewards, and environmental dynamics, making it ideal for training RL algorithms in the context of online advertising. Since, as far as the authors are concerned, these two datasets are the only open datasets in the field of autobidding tasks, the algorithms are most frequently tested on private, closed datasets, which can be attributed to the need for anonymity on proprietary platforms [22]. A large number (more than 9000) of advertisers in the BAT dataset participating in more than 10 million auctions, provide the opportunity to test algorithms representatively. Aggregating data on CTR and CVR for ads is an advantage of the dataset; it expands the possibilities of implementing a wide range of algorithms using these values. The data is presented for two types of auctions - VCG and FP, which in the context of the modern large-scale transition of platforms from second-price to first-price auctions [13] is of undoubted interest for the scientific community from the perspective of developing and testing algorithms in various formulations of the problem. In the BAT dataset, the auction results contain a wide range of predictions for click and conversion events, the increase in visibility for the ad and statistics on budget write-offs in connection with clicks on the ad (see below in section Dataset description). Auctions are implemented for all slots, which provides wide variability in display outcomes, which is important to consider when participating in auctions on many platforms. The format of the dataset fields is as close as possible to the data used in production on large advertising platforms, suggesting the use of computationally simple in interference and effective algorithms for autobidding. In addition to the dataset we present several RTB baselines. Complex and efficient algorithms dedicated to the task of budget pacing are constantly being developed [5], [19]. We will use in our baselines principles, which are commonly used for this type of problem in applications on modern platforms due to their efficiency [33], [16], [9]. BAT: Benchmark for Auto-bidding Task WWW'25, April 28-May 2, 2025, Sydney, NSW, Australia.",
  "4 Dataset description": "Let us provide a comprehensive description of our datasets. Each dataset (VCG and FP) comprises three distinct components: (a) campaigns and their permanent attributes, (b) auction outcomes, and (c) traffic data.",
  "4.1 Campaigns": "This component of the dataset encompasses information pertaining to the invariant parameters of the participating advertising campaigns (see Table 1). Table 1: Campaigns statistics data format. · loc_id - unique identifier for the location where a transaction can be made to purchase the object advertised in the campaign, · campaign_id, item_id - unique identifier assigned to each promoted advertising campaign and its corresponding item, respectively, · campaign_start_date, campaign_end_date - starting and ending dates of the campaign, which have been shifted to maintain anonymity, · campaign_start, campaign_end - unix-like timestamps representing the starting and ending times of the promotional campaign, · auction_budget - total monetary budget allocated to each campaign, · microcat_ext - identifier for the micro-category to which the advertised item belongs, · logical_category (categorical variable) - reference index indicating the item's category. This index consists of two parts separated by a dot: the global logical category index and the subcategory index, · region_id - reference index representing the geographical location of the item, providing a broader spatial context compared to the loc_id. Furthermore, data regarding the frequency of advertisement participation in auctions across the four user-accessible platforms is available. This information, currently not utilized in the algorithms, may prove valuable for future development of complex autobidding algorithms by employing this field as a categorical feature.",
  "4.2 Auction statistics": "The data presented in Table 2 contains auction statistics for campaigns from Campaigns part. We propose that this dataset component be utilized in auction simulations, kept separate from the actual bidding method, and provided solely for training purposes. Table 2: Auction statistics data format. Each log represents one participation of an advertising campaign in one auction. · campaign_id, item_id - same as mentioned above, · period - timestamp for which the auction data was aggregated, · contact_price_bin - discrete-price bin value, which can be mapped to the actual auction bid using a logarithmic transformation function, 𝛾 𝑏𝑖𝑛 (in our case 𝛾 = 1 . 2), · AuctionWinBidSurplus, AuctionVisibilitySurplus - expected incremental cash write-offs for auctions at the current bid level relative to the previous auction position, and the mathematical expectation of additional visibility gained with the current bid. Visibility is defined as the probability that a user will scroll down and view the advertisement with a maximum value of 1. \"Incremental\" refers to the difference in visibility between the current bin and the previous bin (smaller by 1), · AuctionClicksSurplus, AuctionContactsSurplus - expected increase in user clicks and contacts within the specified time frame compared to participating in the auction with the previous bin, · CRPredicts, CTRPredicts - values of item CTR and CR aggregated by item features, · AuctionCount (for VCG auctions) - number of observed auctions from which the data was aggregated.",
  "4.3 Traffic": "The Traffic component of the dataset (see Table 3) consists of the information about a contacts-over-time distribution on the auction platform. This data describes how the traffic is spreading over a week for each region separately. · region_id - identifier of region, similar to other dataset components; · dow - day of week, number of day from 1 to 7, where numeration starts from Sunday; · hour - hour of collected statistics, from 0 to 23; WWW'25, April 28-May 2, 2025, Sydney, NSW, Australia. Alexandra Khirianova et al. · traffic share - portion of total contacts during the week. The sum of all traffic in the region for a week is 1. Table 3: Traffic share data format. This information can be used to specialize the algorithm regarding different types of traffic shares and be used as a prediction when setting a bid.",
  "5 Data collection, filtering and sampling": "The VCG auction data was collected on the Avito platform in March/April 2024, FP auction data - in July/August 2024. Data acquisition was performed by utilizing auction results from search and real advertising campaigns participating in these auctions. After determining the outcomes of each company's participation in the auctions, all results for campaigns (including winning or losing at auction, corresponding bid, CTR, CR, and resulting position in the auction) were aggregated based on price bins and time periods (with 1-hour discretization). The surplus fields were derived by calculating the difference between the sum of the relevant parameters (such as clicks, visibility, and others) for the current price bin and the corresponding sum for the previous price bin. The calculation took into account the resulting position and its visibility. CTR and CR were estimated as the average of the corresponding values but exclusively for the represented campaign. The number of aggregated auctions was recorded in the AuctionCount field. Statistics with VCG auction were collected using 10% of auction results logged to form one period of statistical data for each campaign. These datasets contain information about 2500 sampled campaigns with statistics over a 21 days period. Statistics with FP auction was formed by logging 100% of auctions data but only for 1% of advertising campaigns. We consider this dataset to have more descriptive power over VCG auctions dataset. This dataset contains information about 9000 sampled campaigns with statistics over a 21 days period. Furthermore, the datasets were filtered to contain only campaigns that are fully covered by statistics data over the lifetime of the campaign, and the auction data was logged correctly. The filtering process included several steps: removal of invalid or incomplete data points, ensuring all necessary metrics were present and positive, verification of data completeness, including checks for full period coverage and alignment of log start times with campaign start times, exclusion of campaigns shorter than one day or with duplicate entries, other various quality indicators, such as budget adequacy for both VCG and FP auctions, sufficient click and contact volumes, and minimum campaign durations.",
  "6 Dataset statistics": "Logging and aggregating a large amount and range of data on advertisements and auctions allows you to use the dataset for debugging RTB algorithms with fine-tuning on many parameters. Here we provide a brief overview of the details of the statistics. The weekly traffic distribution graph (see Fig. 1) indicates significant daily fluctuations - a 30-fold difference with a maximum at noon and a minimum at 3 a.m., which should be taken into account when calculating rate changes during the day. The maximum activity in all regions is observed on Monday, and the minimum on Saturday. Figure 1: The statistics on week traffic distribution for all regions on average. 0.014 0.012 0.010 0.008 0.002 0.000 Sun Mon Tue Wed Thu Fri Sat 6 12 18 0 6 12 18 0 6 12 18 0 6 12 18 0 6 12 18 0 6 12 18 0 6 12 18 Day and Hour Table 4 shows the distribution of logged campaigns by lifetime: most campaigns participated in auctions for 1 day, the next position is duration for a week, and the remaining campaigns make a smaller contribution. These statistics are explained by the naturalness and convenience of choosing a reporting period of 1 day and 1 week. Table 4: Distribution of campaigns by timelife. Figure 2 illustrates the relationship between bin increments and the corresponding changes in key metrics (clicks) for a representative micro-category across both auction types, with each increment measured relative to the previous bin level. Given that the simulation utilizes aggregated data to estimate both the marginal increase in clicks per time interval associated with a single-bin bid increase (Fig. 2a) and the corresponding increment in auction win rate (Fig. 2b), these statistical relationships provide valuable insights into the anticipated performance dynamics of the algorithm as bid levels are elevated. For example, using Figure 2, one can estimate that for contact price bin 55 for VCG auctions and 40 for FP auctions, there is a maximum increase in budget write-offs, as well as a maximum increase in clicks (up to 2 additional clicks when the bin is increased by 1 in FP auctions and up to 0.5 clicks in VCG). BAT: Benchmark for Auto-bidding Task WWW'25, April 28-May 2, 2025, Sydney, NSW, Australia. Increasing the bid between 10 and 20 bins in both types of auctions does not make a significant contribution to the number of clicks received, resulting in close to zero click profits in this range. A significant increase in the number of auctions won begins with bin 30 for FP and 40 for VCG. The characteristic growth of surpluses at small bins is the result of the reserve prices used. This fact can be useful for testing algorithms with low bids, for example at the end of the budget spend or hard CPC constraint. Figure 2: Dependences of AuctionClicksSurplus and AuctionWinBidSurplus on contact price bin for an example of micricategory. VCG VCG 1500 FPA FPA 1000 | 1 250 contact price bin contact price bin On average, auction items are more expensive at night, as shown in Fig. 3. This is due to the decrease in traffic during these hours. However, this dependence has a large scatter, as demonstrated by the curves of several specific campaigns. VCG Campaign ID 165623546 VCG FPA Campaign ID 259222329 3 4 Hour Figure 3: Dependence of contact price bin on hour: Blue shades represent VCG, while orange represents FP. The graph shows the time-averaged price bin, standard deviation, and one example of values for a specific campaign for each auction type. Table 5 provides a concise analysis of campaign budgets for both VCG and FP components of our dataset. This distribution is particularly valuable for consideration when designing and analyzing simulations. For instance, given our constraints, it significantly influences the theoretical maximum number of clicks that campaigns can procure at a fixed CPC. Table 5: Distribution of campaigns by initial budget. The characteristics of auction prices and their quantity may have a strong dependence on the logical category. Figure 4 presents a histogram illustrating the distribution of campaign volumes across various logical categories. The category nomenclature employs separated by a dot hierarchical subdivision, so for example 1.2 could be the equivalent of Cars.Ferrari. The diversity of mean parameters for different categories is presented in Appendix A. Figure 4: The number of campaigns per logical category. VCG g 1 Category",
  "7 Problem formulation": "The task is based on a common problem, which is caused by the need for modern platforms to provide advertisers with an automated bidding strategy for their advertising campaigns with a limited budget. The goal is to have a fixed duration during which spending is desirable to be consistent, and the number of additional clicks received during the campaign should be as high as possible. This setting coincides with the work of [33], which considered the case where each ad campaign occurs in 𝑁 auctions per day. Each auction has a winning price 𝑤𝑝 𝑖 , determined when the platform receives all bids. In VCG auction, if 𝑏𝑖𝑑 𝑖 is higher than 𝑤𝑝 𝑖 , then the campaign will win that auction, platform sets 𝑥 𝑖 to be 1, and 0 otherwise. In the FP case, if the campaign wins the auction, 𝑏𝑖𝑑 𝑖 equals 𝑤𝑝 𝑖 . The budget of the agent is decreased on 𝑏𝑖𝑑 𝑖 if the user clicks on the ad. Authors of work [33] solve the task under constraints of budget 𝐵 and average CPC which has to be less than 𝐶 . In the original work, the problem was formulated as:  Alexandra Khirianova et al. WWW'25, April 28-May 2, 2025, Sydney, NSW, Australia.  Since we aim to address a similar task we will utilize this problem formulation. The budget constraints for the campaigns ( 𝐵 ) are taken from Campaigns data, 'auction_budget' field, while the cost per click ( 𝐶 ) constraints are set manually depending on the experiment and are uniform across all campaigns. The winning price ( 𝑤𝑝 ) is determined based on aggregated data for each individual campaign, specifically from the 'contact_price_bin'. The problem under consideration is a linear programming problem. Authors turn to the primal-dual method, as described in [33], and obtain the known theorem for the optimal bid, which relies on the solution of the dual problem. We use this algorithm as one of the baselines, introducing into the formula a dependence on traffic distribution. We also use the algorithm from work [19] which takes into account the CPC constraint mentioned above. We also suggest testing two algorithms that have proven empirically successful in the budget pacing process, as they are already in use in the production environment. These algorithms, as well as [28], focus on uniformity of spending, which in real bidding is necessary to avoid the situation of buying clicks too quickly at too high a price. These algorithms do not have a cost-per-click limit. We will compare these algorithms to explore their effectiveness in several disciplines: budget pacing, satisfying the CPC condition, and buyout of the largest number of clicks per budget.",
  "8 Baselines": "Wehave tested our dataset on several baselines, taking into account the specifics of the data we provide. Figure 5: Traffic definitions. Tk p Tprev Tleft Tk - tstart tk - 2 tk = 1 tend Time We introduce the terms for traffic share as shown in Figure 5. The time interval between 𝑡 𝑘 -1 and 𝑡 𝑘 represents the time window that corresponds to a single step of the algorithm. 𝑇 𝑘 and 𝑇 𝑘 -1 denote expected traffic share in the current and previous auction time windows; 𝑇 𝑙𝑒𝑓 𝑡 and 𝑇 𝑝𝑟𝑒𝑣 signify remaining traffic share and traffic share from start up to now for the campaign. Additionally, we define 𝑇 𝑎𝑙𝑙 = 𝑇 𝑝𝑟𝑒𝑣 + 𝑇 𝑙𝑒𝑓 𝑡 . Consequently, the bid is discretized as Δ = ⌊ log ( 𝑏 ) log 𝛾 ⌋ . Since to compute a bid, the algorithm uses formula 𝑏 = 𝛾 Δ , with the parameter 𝛾 confined by the design of the auction system. We will name 𝐵 0 as the campaign's initial balance, and 𝐵 𝑘 as the campaign's balance at the moment 𝑘 . The pseudocodes for novel algorithms (ALM Algorithm 1, TAPID Algorithm 2) are presented in Appendix B.",
  "8.1 Adaptive Linear Model (ALM)": "We use a fast and easy-to-implement baseline of an autobidding system employing linear prediction techniques, drawing inspiration from existing linear models utilized for bidding prediction [7], [21], [29], [31]. In the event of the absence of prior bidding data for the campaign, the algorithm initiates with an initial bid 𝑏 0, as each campaign in the dataset undergoes a cold start. Therefore, we selected a value for 𝑏 0 at which this problem occurred least frequently for all campaigns, iterating over it as a hyperparameter with optimization of the baseline metrics. By considering ˆ 𝐵 𝑛 = 𝐵 𝑛 𝐵 0 as the relative current campaign budget and ˆ 𝐵 𝑛 -1 = 𝐵 𝑛 -1 𝐵 0 as the relative previous balance, with a slope  the algorithm conducts a linear prediction of the campaign budget output at the end of the campaign lifetime:  Subsequently, it calculates Δ 𝑛 -1, where the current bin is Δ 𝑛 = Δ 𝑛 -+ 𝐵 𝑙𝑒𝑓 𝑡 · 𝛽 , with the control parameter 𝛽 1 chosen empirically. In the final stage, the algorithm clips relative bin change Δ 𝑛 to avoid excessive fluctuation with clip boundaries (also as hyperparameters), and then computes 𝑏 𝑛 based on the calculated bin.",
  "8.2 Traffic-aware PID (TA-PID)": "The classic PID uses the difference between the true and estimated value to produce a control signal. This control signal is then sent to adjust the system's input. Since PID controllers are still used as baseline methods [18] and in industries [5], we decided to propose this method as one of the baseline methods to make our dataset more accessible to use. Keeping the previous designations of variables the same, we will describe a baseline based on a PID controller for managing a bid by comparing the spending speed with a reference value, taking into account historical traffic data. As in the previous baseline, the algorithm would initiate with a fixed bid 𝑏 0 for all campaigns. Then the algorithm begins by calculating the desired average budget spending rate 𝑠 𝑖𝑑𝑒𝑎𝑙 :  Then we calculate the control error as the difference between the desired and actual spend rates:  The PID controller takes 𝑒 𝑛 to calculate the exponent bin adjustment Δ with the coefficients of proportional 𝑘 𝑝 , integral 𝑘 𝑖 and differential 𝑘 𝑑 dependence:   BAT: Benchmark for Auto-bidding Task WWW'25, April 28-May 2, 2025, Sydney, NSW, Australia.",
  "8.3 Model predictive PID (M-PID)": "This baseline was described in [33]. The authors use the formula for optimal bid:  where 𝑝 and 𝑞 correspond to budget spending and CPC. These parameters will be used as reference signals for PID. M-PID also involves taking into account the indirect influence of reference signals on each other. We modify the authors' version of the PID for the described task as follows. Our goal is to help advertisers maximize the quantity of conversions with the budget 𝐵 0, get the desired total number of clicks 𝐶𝑙𝑖𝑐𝑘𝑠 , and spend the budget as evenly as possible over a given period campaign lifetime 𝑇𝑖𝑚𝑒 . For the CPC reference, we use the next formula:  To determine the budget spend reference for each step, we also normalize the current campaign's balance relative to the remaining traffic aggregated for the campaign's region, ensuring uniform ideal spending 𝑠 𝑛 at the moment 𝑛 :  The weights 𝑘 𝑝 , 𝑘 𝑖 , and 𝑘 𝑑 are determined during offline testing and adjusted during online testing. Otherwise, the same formulas and algorithm for PID as in [33] are applied.",
  "8.4 Mystique": "The algorithm in [28] optimizes the linearity of budget spending based on the expected lifetime of the campaign and the total budget. If the campaign experiences underspending or overspending in relation to the linear function, the algorithm, based on the difference between the desired and actual spending, as well as the slope of the desired and actual spend curves, changes the rate to reduce this difference. We implement only bid control without implementing a daily update of the desired spend curve, for comparability of the algorithm's work with other baselines.",
  "8.5 BROI (Budget-ROI)": "This algorithm has been selected due to its robust theoretical foundations and practical applicability, as well as its consideration of agents utilizing an equal bidding strategy, which is essential for the platform in question. In the subsequent section, the optimistic variant of the algorithm proposed by Lucier et al. will be adopted. This study introduced an autobidding algorithm that integrates budget and return on investment (ROI) constraints. For the purposes of this analysis, ROI is interpreted as a cost-per-click (CPC) constraint. A significant theoretical finding of this research indicates that if all participants in the auction employ this algorithm, the resulting liquid welfare across all rounds can achieve at least fifty percent of the expected optimal liquid welfare. This algorithm has been selected due to its theoretical foundations and practical applicability, as well as its consideration of agents using an equal bidding strategy, which may be essential for some platforms.",
  "9 Experiments and Metrics": "This section will present experiments and relevant metrics to examine how the constraints for adaptive budget pacing and CPC tasks influence the performance of the provided algorithms. This analysis will focus on constraints beyond the budget constraint, which must always be satisfied.",
  "9.1 Budget pacing experiment": "The first 4 baselines (Linear, TA-PID, M-PID, Mystique) were developed for budget pacing, so the first experiment will be conducted for them with minimization of the deviation of the spend function from the uniform, normalized to traffic share. To ensure uniformity in spending, we propose and use the metric 𝑅𝑀𝑆𝐸 𝑇 to optimize baseline hyperparameters. This metric is measured as the RMSE between the user's actual spend and an ideal spending curve, normalized by traffic share. This is calculated as follows: normalize hourly traffic for the campaign's lifetime  calculate the ideal budget at time 𝑛 : 𝐵 ∗ 𝑛 = ˆ 𝑇 𝑛 · 𝐵 0, and compute RMSE:  where 𝑁 is the number of time points. Since M-PID has an additional constraint on the CPC set equal to the initial budget, this condition does not affect the bidding results. The Sum Click Ratio (SCR) will also be measured - sum of clicks achieved for all campaigns in the experiment to compare the efficiency of algorithms.",
  "9.2 CPC constraint experiment": "The second experiment will be held for algorithms optimizing the solution of the RTB problem with the constraint of the CPC: M-PID and BROI. The CPC will be set 10 times smaller than the average value for the logical category under study in order to formulate a result that is obviously difficult to achieve. The metrics under study (used to optimize hyperparameters) will be Relative Cost Per Click, 𝑅𝐸𝐿 _ 𝐶𝑃𝐶 = 𝐶𝑃𝐶 𝑅𝑒𝑎𝑙 / 𝐶𝑃𝐶 , where 𝐶𝑃𝐶 𝑅𝑒𝑎𝑙 is the empirical mean cost per click for all campaigns.",
  "9.3 Click sum maximizing experiment": "Also, having equalized the chances of two types of algorithms (with and without CPC constraint) as in experiment 1, setting CPC equal to the initial budget, we examine the SCR metric itself to directly evaluate the efficiency of algorithms without CPC constraints. An additional experiment showing the significant difference in the behavior of algorithms on short-term (less than 1 day) and long-term campaigns is presented in Appendix C.",
  "10 Experimental settings": "This section provides a detailed overview of the auction simulation process for all baseline models. At the beginning of the simulation, we accept campaigns from both parts (VCG and FP) of the BAT as input, setting the budget and campaign lifetime based on statistics. WWW'25, April 28-May 2, 2025, Sydney, NSW, Australia. Alexandra Khirianova et al. The simulation then commences. At each timestamp (one hour), the algorithms determine the bid for that period. The campaign budget for each timestamp is reduced by the expected price of auction participation. For the FP auction, the expected price is the product of AuctionContactsSurplus and bid as if we buy each auction with the defined bid. For the VCG auction, the result price is the sum of AuctionWinBidSurplus for each bin less than or equal to the campaign's one. Each campaign receives feedback at every timestamp, including write-off, additional clicks, contacts, visibility, and the number of won auctions. It's important to note that the mechanism uses reference CTR and CVR values values required for solving the Linear Programming problem in M-PID, as mentioned in the original article [33], and are also part of the solution in BROI [19]. For estimating CTR and CVR, we utilize aggregated statistics from the Auction Statistics dataset, compiling data hourly, by category, and current bid range, since both CTR and CVR tend to strongly increase with bid value. To optimize parameters more effectively, the campaign dataset is divided into two subsets, 𝑆 1 and 𝑆 2, ensuring that all campaigns in 𝑆 1 conclude before any campaign in the validation set begins. A Bayesian optimization package Optuna [1] is utilized on 𝑆 1 to maximize the metric involved, calculated as the total across all campaigns and then averaged. This method helps identify the optimal values for bidder constants for all baselines. Finally, the bidder mechanism is evaluated on 𝑆 2 to measure how effectively our parameter optimization performs, offering a more reliable assessment than optimizing on the entire dataset.",
  "11 Experimental results": "This section provides a quantitative analysis of the baseline performance based on the metrics, with results aggregated for logical category 1. Table 6: The results of experiment 1 - tuning budget pacing. Table 6 displays the results of the first experiment focused on achieving the most uniform spending. The leading algorithm, Mystique, performs best in both auction types, as this was the target metric in its development. M-PID takes second place for FP auctions, while TA-PID comes in second for VCG auctions. ALM was the least effective in achieving uniform spending for VCG auctions, but its results for FP auctions are close to the winning algorithm. Table 7: The results of experiment 2 - tuning CPC. Table 7 displays the results of the second experiment, which focuses on satisfying the CPC constraint. It is evident that the algorithms perform with varying success in FP and VCG auctions. Notably, M-PID demonstrates significantly better results in FP auctions compared to its competitors than it does in VCG auctions. Table 8: The results of experiment 3 - tuning sum of clicks. Table 8 shows the results of the third experiment focused on maximizing click gains. The leading algorithms, TA-PID and ALM, achieve very similar results. Additionally, M-PID demonstrates excellent performance in FP auctions, while Mystique achieves strong results in VCG auctions. In addition to the high efficiency of the mentioned algorithms in achieving the desired outcomes, we would like to highlight the transparency of the autobidder algorithms. This clarity allows researchers to easily track the key features of the algorithm's behavior-specifically, based on traffic in our case, and on other relevant parameters in general. Furthermore, the consistent performance of these algorithms across the dataset validates their effectiveness as a benchmark for autobidding research.",
  "12 Conclusion": "The work presents a user-friendly benchmark BAT for RTB algorithms development. The benchmark includes a new large-scale dataset, containing data on both VCG and FP auctions. This dataset reveals detailed information not only about the distribution of winning bids but also about traffic details, statistics of logical categories and geographic regions, aggregated information about CTR, CVR ads, purchased clicks, visibility, contacts, and funds deducted when winning an auction. Additionally, the dataset includes logs of all auction winners and several losers to ensure the completeness of statistics. In addition, a series of RTB algorithms (novel and well-known) was implemented within the benchmark. Metrics were proposed, and experiments were conducted for various formulations of the budget pacing problem. This makes the technique of working with the dataset as transparent as possible. We believe a benchmark based on a real-world dataset from the modern online advertisement platform Avito will indeed benefit the scientific community and promote the development of online bidding algorithms.",
  "Acknowledgments": "The research is supported by the Ministry of Science and Higher Education of the Russian Federation (Goszadaniye), project No. FSMG-2024-0011. BAT: Benchmark for Auto-bidding Task WWW'25, April 28-May 2, 2025, Sydney, NSW, Australia.",
  "References": "[1] Takuya Akiba, Shotaro Sano, Toshihiko Yanase, Takeru Ohta, and Masanori Koyama. 2019. Optuna: A Next-generation Hyperparameter Optimization Framework. In Proceedings of the 25th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining . Association for Computing Machinery, AK, Anchorage, USA, 2623 - 2631. https://doi.org/10.1145/3292500.3330701 [2] Kareem Amin, Michael Kearns, Peter Key, and Anton Schwaighofer. 2012. Budget optimization for sponsored search: Censored learning in mdps. In Proceedings of the Twenty-Eighth Conference on Uncertainty in Artificial Intelligence (Catalina Island, CA) (UAI'12) . AUAI Press, Arlington, Virginia, USA, 54-63. [3] Dirk Bergemann, Benjamin Brooks, and Stephen Morris. 2017. First-price auctions with general information structures: Implications for bidding and revenue. Econometrica 85, 1 (2017), 107-143. https://doi.org/10.3982/ECTA13958 [4] Han Cai, Kan Ren, Weinan Zhang, Kleanthis Malialis, Jun Wang, Yong Yu, and Defeng Guo. 2017. Real-time bidding by reinforcement learning in display advertising. In Proceedings of the tenth ACM international conference on web search and data mining . Association for Computing Machinery, New York, NY, USA, 661-670. https://doi.org/10.1145/3018661.3018702 [5] Qinyi Chen, Phuong Ha Nguyen, and Djordje Gligorijevic. 2024. OptimizationBased Budget Pacing in eBay Sponsored Search. In Companion Proceedings of the ACM on Web Conference 2024 (Singapore, Singapore) (WWW'24) . Association for Computing Machinery, New York, NY, USA, 328-337. https://doi.org/10.1145/ 3589335.3648331 [6] Ye Chen, Pavel Berkhin, Bo Anderson, and Nikhil R Devanur. 2011. Real-time bidding algorithms for performance-based display ad allocation. In Proceedings of the 17th ACM SIGKDD international conference on Knowledge discovery and data mining . Association for Computing Machinery, New York, NY, USA, 1307-1315. https://doi.org/10.1145/2020408.2020604 [7] Abebe Hailu and Sophie Thoyer. 2006. Multi-unit auction format design. Journal of Economic Interaction and Coordination 1, 2 (2006), 129-146. https://doi.org/10. 1007/s11403-006-0012-9 [8] Yanjun Han, Zhengyuan Zhou, Aaron Flores, Erik Ordentlich, and Tsachy Weissman. 2020. Learning to bid optimally and efficiently in adversarial firstprice auctions. arXiv preprint arXiv:2007.04568 abs/2007.04568 (2020), 1-41. https://doi.org/10.48550/arXiv.2007.04568 [9] Sarma Tangirala Harrison Chu, John M. Trenkle and Andrew Wang. 2020. Using a PID controller engine for controlling the pace of an online campaign in realtime. US 10,878,448 B1. [10] Jim Jansen and Tracy Mullen. 2008. Sponsored search: An overview of the concept, history, and technology. IJEB 6 (01 2008), 114-131. https://doi.org/10. 1504/IJEB.2008.018068 [11] Grégoire Jauvion, Nicolas Grislain, Pascal Dkengne Sielenou, Aurélien Garivier, and Sébastien Gerchinovitz. 2018. Optimization of a ssp's header bidding strategy using thompson sampling. In Proceedings of the 24th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining . Association for Computing Machinery, New York, NY, USA, 425-432. https://doi.org/10.1145/3219819. 3219917 [12] Olivier Jeunen, Sean Murphy, and Ben Allison. 2022. Learning to bid with AuctionGym. In Proceedings of the 28th ACM SIGKDD Conference on Knowledge Discovery and Data Mining AdKDD Workshop (Washington DC, USA) (AdKDD '22) . ACM, New York, NY, USA, 1-6. [13] Olivier Jeunen, Sean Murphy, and Ben Allison. 2023. Off-Policy Learningto-Bid with AuctionGym. In Proceedings of the 29th ACM SIGKDD Conference on Knowledge Discovery and Data Mining (Long Beach, CA, USA) (KDD '23) . Association for Computing Machinery, New York, NY, USA, 4219-4228. https://doi.org/10.1145/3580305.3599877 [14] Bernhard Kasberger and Karl H Schlag. 2023. Robust bidding in first-price auctions: How to bid without knowing what others are doing. Management Science 70, 7 (2023), 4219 - 4235. https://doi.org/10.2139/ssrn.3044438 [15] Kuang-Chih Lee, Ali Jalali, and Ali Dasdan. 2013. Real time bid optimization with smooth budget delivery in online advertising. In Proceedings of the seventh international workshop on data mining for online advertising . Association for Computing Machinery, New York, NY, USA, 1-9. https://doi.org/10.1145/2501040. 2501979 [16] Bin Li, Xiao Yang, Daren Sun, Zhi Ji, Zhen Jiang, Cong Han, and Dong Hao. 2020. Incentive Mechanism Design for ROI-constrained Auto-bidding. In PRICAI 2024: Trends in Artificial Intelligence . Springer, Singapore, 291-296. https://doi.org/10. 1007/978-981-96-0125-7_24 [17] Hairen Liao, Lingxiao Peng, Zhenchuan Liu, and Xuehua Shen. 2014. iPinYou global rtb bidding algorithm competition dataset. In Proceedings of the Eighth International Workshop on Data Mining for Online Advertising . Association for Computing Machinery, New York, NY, USA, 1-6. https://doi.org/10.1145/2648584. 2648590 [18] Junwei Lu, Chaoqi Yang, Xiaofeng Gao, Liubin Wang, Changcheng Li, and Guihai Chen. 2019. Reinforcement learning with sequential information clustering in real-time bidding. In Proceedings of the 28th ACM International Conference on Information and Knowledge Management (Beijing, China) (CIKM '19) . Association [34] Dawei Yin, Yuening Hu, Jiliang Tang, Tim Daly, Mianwei Zhou, Hua Ouyang, Jianhui Chen, Changsung Kang, Hongbo Deng, Chikashi Nobata, et al. 2016. Ranking relevance in yahoo search. In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining (San Francisco, Alexandra Khirianova et al. WWW'25, April 28-May 2, 2025, Sydney, NSW, Australia. California, USA) (KDD '16) . Association for Computing Machinery, New York, NY, USA, 323-332. https://doi.org/10.1145/2939672.2939677 [35] Shuai Yuan and Jun Wang. 2012. Sequential selection of correlated ads by pomdps. In Proceedings of the 21st ACM International Conference on Information and Knowledge Management (Maui, Hawaii, USA) (CIKM '12) . Association for Computing Machinery, New York, NY, USA, 515-524. https://doi.org/10.1145/2396761. 2396828 [36] S. Yuan, J. Wang, and X. Zhao. 2013. Real-time bidding for online advertising: measurement and analysis. In Proceedings of the Seventh International Workshop on Data Mining for Online Advertising (Chicago, Illinois) (ADKDD '13) . Association for Computing Machinery, New York, NY, USA, Article 3, 8 pages. https://doi. org/10.1145/2501040.2501980",
  "A Diversity of mean parameters in different categories": "Avito platform covers a wide range of everyday lifestyle categories, from essential daily needs to leisure and wellness services. These categories naturally have different distributions of parameters, and consequently, auction dynamics, which is presented in dataset, and allows for testing algorithms across diverse aspects of the environment. Table 9 shows the difference in average per campaign: CTR, CVR, starting budget and campaign duration (in days), depending on the logical category.",
  "B Algorithms": "",
  "Algorithm 1 ALM": "Input : Campaign, campaign's budget 𝐵 , expected traffic distribution 𝑇 𝑛 , 1 ≤ 𝑛 ≤ 𝑁 Parameters : Degree base 𝛾 , control parameter 𝛽 , cold start value 𝑏 0 Output : Bids for each timestamp 1: Play bid 𝑏 = 𝑏 0, Δ 0 = 𝑙𝑜𝑔 𝛾 𝑏 0 2: for 𝑛 in 1 , ..., 𝑁 do 3: Receive clicks, spend budget 4: Compute relative budget ˆ 𝐵 𝑛 , ˆ 𝐵 𝑛 -1 and slope 𝑘 5: Compute ˆ 𝐵 𝑙𝑒𝑓 𝑡 and then bin Δ 𝑛 6: Update and play bid 𝑏 ← -𝛾 Δ 𝑛 7: end for",
  "Algorithm 2 TA-PID": "Input : Campaign, campaign's budget 𝐵 , expected traffic distribution 𝑇 𝑛 , 1 ≤ 𝑛 ≤ 𝑁 Parameters : Degree base 𝛾 , PID coefficients 𝑘 𝑝 , 𝑘 𝑖 , 𝑘 𝑑 , cold start value 𝑏 0 Output : Bids for each timestamp 1: Compute desired average budget spending rate 𝑠 𝑖𝑑𝑒𝑎𝑙 and 2: Play bid 𝑏 = 𝑏 0 3: for 𝑛 in 1 , ..., 𝑁 do 4: Receive clicks, spend budget 5: Compute control error 𝑒 𝑛 and control signal 𝑢 ( 𝑛 ) 6: Update Δ 𝑛 by 𝑢 ( 𝑛 ) 7: Play bid 𝑏 ← - 𝛾 Δ 𝑛 8: end for",
  "C Experiment on campaigns of different durations": "Advertising campaigns of varying durations exhibit statistically sig- nificant disparities, thereby enhancing the diversity of the dataset. To substantiate this observation, we conducted a supplementary experiment. The accompanying Table 10 illustrates the performance metrics of maximized SCR, normalized on a per diem basis, when algorithms operate in an environment using exclusively long-term or short-term advertising campaigns. Best effectiveness is marked with *** in descending order. BAT: Benchmark for Auto-bidding Task WWW'25, April 28-May 2, 2025, Sydney, NSW, Australia. Table 9: Comparison of parameters for different logical categories The differential performance of these algorithms aligns with their inherent operational characteristics: PID controllers demonstrate superior efficacy in environments conducive to parameter calibration, particularly in long-term campaign strategies. ALM consistently exhibits optimal performance metrics in short-term campaign scenarios. Mystique, which modulates daily expenditure to conform to the theoretical optimal curve, demonstrates particular efficacy in campaigns with a temporal constraint of 24 hours or less. Table 10: Performance comparison of different algorithms",
  "keywords_parsed": [
    "Online auctions",
    "advertising platforms",
    "RTB",
    "autobidding"
  ],
  "references_parsed": [
    {
      "ref_id": "b1",
      "title": "Optuna: A Next-generation Hyperparameter Optimization Framework"
    },
    {
      "ref_id": "b2",
      "title": "Budget optimization for sponsored search: Censored learning in mdps"
    },
    {
      "ref_id": "b3",
      "title": "First-price auctions with general information structures: Implications for bidding and revenue"
    },
    {
      "ref_id": "b4",
      "title": "Real-time bidding by reinforcement learning in display advertising"
    },
    {
      "ref_id": "b5",
      "title": "Optimization-Based Budget Pacing in eBay Sponsored Search"
    },
    {
      "ref_id": "b6",
      "title": "Real-time bidding algorithms for performance-based display ad allocation"
    },
    {
      "ref_id": "b7",
      "title": "Multi-unit auction format design"
    },
    {
      "ref_id": "b8",
      "title": "Learning to bid optimally and efficiently in adversarial first-price auctions"
    },
    {
      "ref_id": "b9",
      "title": "Using a PID controller engine for controlling the pace of an online campaign in realtime"
    },
    {
      "ref_id": "b10",
      "title": "Sponsored search: An overview of the concept, history, and technology"
    },
    {
      "ref_id": "b11",
      "title": "Optimization of a ssp's header bidding strategy using thompson sampling"
    },
    {
      "ref_id": "b12",
      "title": "Learning to bid with AuctionGym"
    },
    {
      "ref_id": "b13",
      "title": "Off-Policy Learning-to-Bid with AuctionGym"
    },
    {
      "ref_id": "b14",
      "title": "Robust bidding in first-price auctions: How to bid without knowing what others are doing"
    },
    {
      "ref_id": "b15",
      "title": "Real time bid optimization with smooth budget delivery in online advertising"
    },
    {
      "ref_id": "b16",
      "title": "Incentive Mechanism Design for ROI-constrained Auto-bidding"
    },
    {
      "ref_id": "b17",
      "title": "iPinYou global rtb bidding algorithm competition dataset"
    },
    {
      "ref_id": "b18",
      "title": "Reinforcement learning with sequential information clustering in real-time bidding"
    },
    {
      "ref_id": "b34",
      "title": "Ranking relevance in yahoo search"
    },
    {
      "ref_id": "b35",
      "title": "Sequential selection of correlated ads by pomdps"
    },
    {
      "ref_id": "b36",
      "title": "Real-time bidding for online advertising: measurement and analysis"
    }
  ]
}