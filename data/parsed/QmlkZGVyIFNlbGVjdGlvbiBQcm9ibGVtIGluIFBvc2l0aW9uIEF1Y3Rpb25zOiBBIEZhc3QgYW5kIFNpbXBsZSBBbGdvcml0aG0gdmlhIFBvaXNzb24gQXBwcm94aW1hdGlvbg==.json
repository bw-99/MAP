{
  "Bidder Selection Problem in Position Auctions: A Fast and Simple Algorithm via Poisson Approximation": "Nikolai Gravin ∗ nikolai@mail.shufe.edu.cn Shanghai University of Finance and Economics Shanghai, China Yixuan Even Xu ∗ xuyx20@mails.tsinghua.edu.cn Tsinghua University Beijing, China Renfei Zhou ∗ zhourf20@mails.tsinghua.edu.cn Tsinghua University Beijing, China",
  "ABSTRACT": "In the Bidder Selection Problem (BSP) there is a large pool of 𝑛 potential advertisers competing for ad slots on the user's web page. Due to strict computational restrictions, the advertising platform can run a proper auction only for a fraction 𝑘 < 𝑛 of advertisers. We consider the basic optimization problem underlying BSP: given 𝑛 independent prior distributions, how to efficiently find a subset of 𝑘 with the objective of either maximizing expected social welfare or revenue of the platform. We study BSP in the classic multi-winner model of position auctions for welfare and revenue objectives using the optimal (respectively, VCG mechanism, or Myerson's auction) format for the selected set of bidders. This is a natural generalization of the fundamental problem of selecting 𝑘 out of 𝑛 random variables in a way that the expected highest value is maximized. Previous PTAS results ([Chen, Hu, Li, Li, Liu, Lu, NIPS 2016], [Mehta, Nadav, Psomas, Rubinstein, NIPS 2020], [Segev and Singla, EC 2021]) for BSP optimization were only known for single-item auctions and in case of [Segev and Singla 2021] for 𝑙 -unit auctions. More importantly, all of these PTASes were computational complexity results with impractically large running times, which defeats the purpose of using these algorithms under severe computational constraints. We propose a novel Poisson relaxation of BSP for position auctions that immediately implies that 1) BSP is polynomial-time solvable up to a vanishingly small error as the problem size 𝑘 grows; 2) there is a PTAS for position auctions after combining our relaxation with the trivial brute force algorithm. Unlike all previous PTASes, we implemented our algorithm and did extensive numerical experiments on practically relevant input sizes. First, our experiments corroborate the previous experimental findings of Mehta et al. that a few simple heuristics used in practice (e.g., Greedy for general submodular maximization) perform surprisingly well in ∗ The authors contributed equally to this research. The full version of this paper is available at https://arxiv.org/abs/2306.10648. Nikolai Gravin is supported by Science and Technology Innovation 2030 'New Generation of Artificial Intelligence' Major Project No.(2018AAA0100903), National Key R&D Program of China (2023YFA1009500), NSFC grants 62150610500, 61922052, and 61932002, Innovation Program of Shanghai Municipal Education Commission, and Fundamental Research Funds for Central Universities. Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. WWW'24, May 13-17, 2024, Singapore, Singapore © 2024 Copyright held by the owner/author(s). Publication rights licensed to ACM. ACM ISBN 979-8-4007-0171-9/24/05...$15.00 https://doi.org/10.1145/3589334.3645418 terms of approximation factor. Furthermore, our algorithm outperforms Greedy both in running time and approximation on medium and large-sized instances, i.e., its running time scales better with the instance size.",
  "CCS CONCEPTS": "· Theory of computation → Approximation algorithms analysis ; Algorithmic game theory and mechanism design ; · Applied computing → Online auctions .",
  "KEYWORDS": "Bidder Selection, Submodular Maximization, Position Auctions",
  "ACMReference Format:": "Nikolai Gravin, Yixuan Even Xu, and Renfei Zhou. 2024. Bidder Selection Problem in Position Auctions: A Fast and Simple Algorithm via Poisson Approximation. In Proceedings of the ACM Web Conference 2024 (WWW '24), May 13-17, 2024, Singapore, Singapore. ACM, New York, NY, USA, 19 pages. https://doi.org/10.1145/3589334.3645418",
  "1 INTRODUCTION": "Online advertising is a big part of the modern e-commerce industry and a key to the monetization of many online businesses. The majority of ad slots on a user web page are sold in real time via an automated auction to a group of candidate advertisers. The whole process from the time when an auction is initiated based on the impression about advertising opportunity up to the time when ads are displayed on the user's page usually has to be completed in a few milliseconds. This makes it imperative for the platform (Ad exchange ADX, or Demand side DSP) to keep the auction processing and communication time under a strict limit. Meanwhile, a platform usually runs a complex ML model on each advertiser to get an accurate estimate of their auction score 1 . As some platforms already have or anticipate to have in the near future an excessive number of prospective advertisers, the comprehensive ML model can only be run on a fraction 𝑘 of 𝑛 advertisers due to strict time 2 limit. In practice, the platform handles this by a two-stage selection process: it filters out all but 𝑘 advertisers by running a much faster and less accurate ML model, and then it runs a proper auction for the remaining 𝑘 advertisers using the comprehensive and slow ML model. E.g., for the ADX platforms 𝑛 may be in the range 20 -50 and 𝑘 depends on the specific company, e.g., 𝑘 = 10 or 𝑘 = 20; in the case of DSPs, 𝑛 may vary a lot and can reach thousands, while 𝑘 cannot be too large, e.g., 𝑘 = 100 or 𝑘 = 200. 1 An auction score is comprised of estimates for click-through-rate (CTR), ad relevance, and value-per-click bid. 2 In some case, the platform may also estimate the bids to avoid communication lag. WWW'24, May 13-17, 2024, Singapore, Singapore Nikolai Gravin, Yixuan Even Xu, and Renfei Zhou This raises multiple practical challenges for the ADX and/or DSP platforms. A platform first needs to get 𝑛 rough score estimates, which can be viewed as 𝑛 distributions of the bidders' accurate auction scores. One problem is how to obtain these estimates online in a constantly changing environment. Another learning problem, recently considered by Goel et al. [10] is how to retrieve this information from strategic agents, who might affect the selection stage by adjusting their bids. Third, there is an underlying optimization question: for 𝑛 prospective bidders with known independent prior distributions ( 𝐷 𝑖 ) 𝑖 ∈[ 𝑛 ] how to select 𝑘 < 𝑛 of them with the objective of either maximizing expected score (social welfare) or platform's revenue. We focus on this basic optimization problem termed the Bidder Selection Problem (BSP). The welfare maximization BSP for the VCG single-item (or more generally ℓ -unit) auction is equivalent to the following fundamental algorithmic question: select 𝑘 out of 𝑛 independent random variables, with the objective of maximizing the expected maximum (expected sum of top ℓ values). This question (for single-item) has received significant attention under different names: model-driven optimization [9], 𝑘 -MAX [6], team selection with test scores [14], subset selection for expected maximum [17], non-adaptive ProbeMax [22], which extends to the topℓ -out-of𝑘 problem. It is also natural to consider the selection problem with a more general set of objectives given by linear combinations of the topℓ objectives. The latter problem generalizes ℓ -unit auctions and corresponds to the widely used position auction [8, 24] environment as described, e.g., in [12]. In position auction, there are 𝑚 sorted positions that appear alongside the search results and 𝑛 advertisers competing for these 𝑚 slots. Each slot 𝑗 ∈ [ 𝑚 ] has a different click-through rate 𝑤 𝑗 (additional multiplicative factor for the click probability on 𝑗 -th position), which translates into the value 𝑣 𝑖 · 𝑤 𝑗 for advertiser 𝑖 if 𝑖 's ad is displayed at 𝑗 -th position. Prior Results for the BSP. The basic BSP of welfare maximization (second-price auction) was shown to be NP-hard by Goel et al. [9] and later by Mehta et al. [17]. On the positive side, there are a few known Polynomial Time Approximation Schemes (PTAS). First, Chen et al. [6] gave a dynamic programming-based polynomial time approximation scheme (PTAS). Later, Mehta et al. [17] and Segev and Singla [22] respectively proposed an Efficient PTAS (EPTAS) for the BSP. Both of their approaches are based on discretizing and enumerating all possible distributions for the maximum of a few random variables: [17] characterize all 𝑛 distributions into one of 𝐶 ( 𝜀 ) bins (where 𝐶 ( 𝜀 ) = 𝑂 ( 1 / 𝜀 ) 𝑂 ( 1 / 𝜀 ) depends on the approximation guarantee 1 -𝜀 ) and then run a brute force search with the complexity of 𝑂 GLYPH<16> 𝑛 · log ( 𝑘 ) 𝑂 ( 𝐶 ( 𝜀 ) ) GLYPH<17> ; [22] use a complex reduction to a multi-dimensional extension of Santa Claus problem of [2] with at least 𝑂 ( 1 / 𝜀 ) 𝑂 ( 1 / 𝜀 ) 𝑂 ( 1 / 𝜀 2 ) running time 3 . We would like to emphasize that the findings of Mehta et al. and Segev and Singla could only be considered as purely computational complexity results rather than real algorithms to be used in practice or even in testing/numerical experiments. Indeed, their approaches are rather involved and not very easy to implement, e.g., Segev and 3 We give a lower bound on the running time, as it is hard to say what is the exact time complexity of their approach, as they did not specify it explicitly and their result proceeds by a sequence of reductions with non-trivial running time dependencies. Singla only state an existential result without explicitly describing their algorithm. Furthermore, the running times of these EPTASes even for the basic 𝑘 -MAX problem and small values of 𝑛 and 𝑘 are enormously large 4 . I.e., using any of the existing PTASes would completely defeat the purpose of a two-stage selection process. For the revenue objective, Mehta et al. [17] also considered BSP for the second-price auction, which is equivalent to maximizing the expectation of the second largest value among selected 𝑘 random variables. They showed strong impossibility results: it is impossible to get any constant factor approximation in polynomial time under either of the exponential time, or the planted clique hypothesises. Auction Formats. One of the most commonly used formats in advertising industry is the Generalized Second Price (GSP) auction. It was shown in [8, 24] that GSP of any position auction with any set of bidders has a Nash equilibrium equivalent to the welfaremaximizing outcome of the VCG. In some cases (e.g., Google's auction for selling contextual ads [25]) the platform's auction format is based directly on the VCG. Thus, in the BSP context with the welfare-maximization objective, it is most natural to analyze the VCG mechanism. For the revenue objective, it is natural to study the optimal Myerson's auction, as it gives an upper bound on the revenue of any other auction format. Then one can reduce revenue maximization to welfare maximization of the VCG format. I.e., it is w.l.o.g. to only study welfare-maximization BSP for the VCG format, which we do in the rest of our paper. It is also natural to study revenue maximization BSP for the GSP format (or by the revenue equivalence of the VCG format). Unfortunately, it does not admit polynomial time 𝑂 ( 1 ) -approximation even for the basic single-item auction due to strong impossibility results of [17].",
  "1.1 Our Results": "Wepropose a novel relaxation of the BSP for a more general position auction environment, which we call Poisson (or Poisson-Chernoff) relaxation. It has the following theoretical guarantees. (1) The relaxation is a continuous maximization problem with a concave objective that can be solved in time polynomial in 𝑛 and 𝑘 . In fact, the objective of this relaxation is a nicely structured algebraic function that lends itself to efficient convex minimization solvers. (2) With small adjustments (summarized in Algorithm 1), the relaxed objective converges at the rate 1 -𝑂 ( 𝑘 -1 / 4 ) to the actual social welfare of fractional BSP as the problem size 𝑘 grows (Theorem 4.4). The standard rounding of this fractional solution suffers only a small loss of 𝑂 ( 𝑘 -1 / 2 ) , yielding GLYPH<0> 1 -𝑂 ( 𝑘 -1 / 4 ) GLYPH<1> -approximation (Theorem 4.5) for the integral BSP. (3) For the special case of the single-item auction, our algorithm achieves 1 -𝑂 GLYPH<0> √︁ ln 𝑘 / 𝑘 GLYPH<1> approximation (see Appendix C). These results have immediate theoretical implications and can be implemented in practice unlike all previous PTAS algorithms, as our approach has far superior running time to the point where it outperforms some of the existing heuristics used in practice, such as the Greedy algorithm for general submodular maximization. 4 Note that 𝑘 -MAX is a special case of general submodular optimization which already admits efficient 1 -1 / 𝑒 approximation. Hence, 𝜀 < 1 / 𝑒 and the time complexity of 2 Θ ( 1 / 𝜀 ) Θ ( 1 / 𝜀 ) > 2 9000 with conservative estimates of Θ ( 1 / 𝜀 ) = 2 / 𝜀 . Bidder Selection Problem in Position Auctions WWW'24, May 13-17, 2024, Singapore, Singapore Furthermore, our results bring new theoretical insight for BSP: the BSP converges to a polynomial-time solvable optimization problem as the problem size 𝑘 grows. Theoretical Implications. Our Algorithm 1 gives a ( 1 -𝜀 ) approximation to the BSP for any position auction with 𝜀 = Ω ( 𝑘 -1 / 4 ) and works in polynomial time (independent of 𝜀 ). On the other hand, for small values of 𝜀 ( 𝜀 = 𝑂 ( 𝑘 -1 / 4 ) ), a straightforward exhaustive search algorithm gives a perfect solution in 𝑂 ( 𝑛 𝑘 ) = 𝑛 poly ( 1 / 𝜀 ) time. I.e., the combination of our relaxation with the brute force algorithm yields a PTAS: Corollary 1.1. BSP for any position auction admits a ( 1 -𝜀 ) PTAS that runs in 𝑛 poly ( 1 / 𝜀 ) time. Moreover, the algorithm as in Corollary 1.1 is an EPTAS with a much better dependency on 𝜀 than previous PTASes under a mild assumption that 𝑘 ≥ log 𝑛 : Corollary 1.2. BSP for position auctions admits a ( 1 -𝜀 ) EPTAS for any 𝑘 ≥ log 𝑛 that runs in 𝑂 ( poly ( 𝑛, 𝑘 )) + 2 𝑂 ( 𝜀 -8 ) time. Proof. Algorithm 1 runs in 𝑂 ( poly ( 𝑛, 𝑘 )) . We run brute force only when 𝜀 = 𝑂 ( 𝑘 -1 / 4 ) , i.e., when 𝑘 2 = 𝑂 ( 𝜀 -8 ) . Then its running time is not more than 𝑛 𝑘 ≤ 2 𝑘 2 = 2 𝑂 ( 𝜀 -8 ) , since 𝑘 ≥ log 𝑛 . □ Comparison with Previous Theoretical Results. Our novel Poisson approximation approach yields more general theoretical results than previous work. E.g., as Segev and Singla [22] briefly mention how their scheme can be extended from 𝑘 -MAX (i.e., single-item auction) to ℓ -unit auctions, one may wonder if a similar approach also extends to the more general position auction environment. To the best of our knowledge, it does not. Indeed, their main idea is to consider two regimes for ℓ : small (a constant) ℓ < 1 / 𝜀 3 , and large ℓ > 1 / 𝜀 3 . They claim that the former case can be handled with a similar approach (maybe with a significantly worse dependency of the running time on 𝜀 than the case ℓ = 1), and in the later case, one can use concentration bounds similar to the (3) case described in Section 3.1. This argument cannot be used for the objective that is a linear combination of welfare in 1-unit and 𝑘 / 2-unit auctions. Relevance in Practice. Our relaxation is a white-box approach that can be easily adapted to different scenarios. E.g., if some bidders have to be included in the final solution (which is often the case in industry because of contract obligations), then our approach gives the same approximation with these additional constraints 5 . Also, depending on the type of problem instances, a few steps of our algorithm can be removed or simplified to fit the specific domain, which results in simpler and more efficient solutions. Furthermore, unlike the case with all previous PTASes, we actually implemented our algorithm and did numerical experiments on several generated data sets of practically relevant sizes. Note that a company cares much more about the implementability and running time of their algorithms rather than its theoretical approximation guarantees 6 , which has been the main focus of previous PTAS results. In contrast, our algorithm is not very complex and 5 In fact, the approximation guarantee holds not only for the global objective, but also for the surplus objective, i.e., the additional gain to welfare from the non-fixed bidders. 6 In the context of BSP any reasonable heuristic is preferable to a complex and slow algorithm with good approximation efficiency guarantees. is based on standard continuous convex maximization methods, which means that it is much easier to understand and adopt by a platform's product team. The experiments are summarized in Section 5. We slightly simplified our theoretical Algorithm 1 to avoid the hard-coded efficiency loss of 𝑂 ( 𝑘 -1 / 4 ) in the approximation. Weobserved that among all tested algorithms, our algorithm produced solutions that were always within 0.1% of the best-performing algorithm in terms of objective value. Furthermore, our algorithm's running time scales significantly slower than any other tested algorithm. For large instances where 𝑛 = 1000 , 𝑘 = 200, our algorithm took less than 1 minute to complete, while even Greedy (which is a subroutine in all previous PTASes) took more than 1 day and Local Search could not finish within 1 week. These findings demonstrate the practical relevance of our approach.",
  "1.2 Other Related Work": "Mehta et al. [17] mention a few other scenarios besides bidder selection with similar mathematical formulations. The applications range from a two-tier solution for scoring documents in a search result [5], to filtering initial proposals in procurement auctions [21, 23], to voting theory [20]. Bei at al. [3] studied BSP with the revenue objective under multiple auction formats including Myerson's auction and gave constant factor approximation for the second-price auction with anonymous reserve. They also introduced another optimization framework for the BSP under costs, which is more challenging than the BSP under capacity constraint. Poisson approximation is a well-developed technique from probability theory and statistics. A survey [19] mentions at least twenty different results on the basic question of approximating the sum of independent Bernoulli random variables by the Poisson distribution. In statistics, Poisson approximation is commonly used in Extreme Value Theory (EVT) with applications to structural and geological engineering, traffic prediction, and finance (see, e.g., a book [18]). It has also been used in theoretical computer science, e.g., [16] used Le Cam's Poisson approximation theorem for stochastic bin packing and knapsack problems and also for EUM introduced in [15]. In fact, the expected utility maximization (EUM) is closely related to our objective. EUM is formulated as choosing a feasible subset 𝑆 out of 𝑛 random variables 𝑋 1 , . . . , 𝑋 𝑛 to maximize E [ 𝑢 ( ˝ 𝑖 ∈ 𝑆 𝑋 𝑖 )] , where 𝑢 is a given utility function. The problem has been studied under capacity [4] or other combinatorial constraints [15, 16, 26] with a non-linear (typically concave) utility function. The BSP for single-item auction, i.e., the 𝑘 -MAXproblem, has a similar objective E [ max 𝑖 ∈ 𝑆 { 𝑋 𝑖 }] to EUM but with max operator instead of the sum. When the distributions of 𝑋 𝑖 are unknown, EUM becomes an online learning problem. Chen et al. [6] gave the first PTAS for 𝑘 -MAX, but their main focus is on Combinatorial Multi-Armed Bandits.",
  "2 PRELIMINARIES": "A set of 𝑛 bidders wish to receive some service and each bidder 𝑖 ∈ [ 𝑛 ] has a private non-negative value 𝑣 𝑖 ∈ R ≥ 0 indicating how much they are willing to pay for it. We denote the vector of bidder values as v = ( 𝑣 𝑖 ) 𝑖 ∈[ 𝑛 ] . By the revelation principle, we can restrict our attention to incentive compatible and individually rational singleround auctions A , where each bidder 𝑖 submits a sealed bid 𝑏 𝑖 to the auctioneer. The auctioneer then decides on a feasible allocation WWW'24, May 13-17, 2024, Singapore, Singapore Nikolai Gravin, Yixuan Even Xu, and Renfei Zhou vector a ( b ) = ( 𝑎 𝑖 ( b )) 𝑖 ∈[ 𝑛 ] and payments p ( b ) = ( 𝑝 𝑖 ( b )) 𝑖 ∈[ 𝑛 ] . The incentive compatibility and individual rationality mean that by bidding truthfully 𝑏 𝑖 = 𝑣 𝑖 , each bidder 𝑖 ∈ [ 𝑛 ] (a) maximizes her utility 𝑢 𝑖 ( 𝑏 𝑖 , b -𝑖 ) def == 𝑣 𝑖 · 𝑎 𝑖 ( 𝑏 𝑖 , b -𝑖 ) -𝑝 𝑖 ( 𝑏 𝑖 , b -𝑖 ) and (b) receives non-negative utility 𝑢 𝑖 ( 𝑣 𝑖 , b -𝑖 ) ≥ 0. The seminal VCG mechanism (a second-price auction in the case of single-item auction) is an example of incentive compatible mechanism that also maximizes social welfare SW ( a , v ) = ˝ 𝑛 𝑖 = 1 𝑎 𝑖 · 𝑣 𝑖 . Westudy auctions in the Bayesian setting, where we assume that bidder values are drawn independently from known prior distributions v ∼ D = ˛ 𝑖 ∈[ 𝑛 ] 𝐷 𝑖 . We also use 𝐷 𝑖 ( 𝜏 ) = Pr 𝑣 𝑖 ∼ 𝐷 𝑖 [ 𝑣 𝑖 ≤ 𝜏 ] to denote the cumulative distribution function. The auction designer is usually concerned about two objectives: the expected social welfare SW = Ev ∼ D [ SW ( a ( v ) , v )] , and revenue Rev = Ev ∼ D [ ˝ 𝑖 ∈[ 𝑛 ] 𝑝 𝑖 ( v )] . The VCG mechanism maximizes the welfare on every valuation profile v , and thus maximizes SW in expectation for any prior D . The well-known Myerson's auction maximizes Rev. This auction reduces the problem of revenue maximization to virtual welfare maximization by transforming values ( 𝑣 𝑖 ) 𝑖 ∈[ 𝑛 ] to virtual values 𝜑 𝑖 ( 𝑣 𝑖 ) for regular distribution 𝐷 𝑖 and by doing ironing 𝜑 𝑖 ( 𝑣 𝑖 ) for irregular distribution 𝐷 𝑖 . I.e., the expected revenue of Myerson's auction can be written as Rev = Ev [ SW ( a ( v ) , 𝜑 ( v ))] for regular distributions and Rev = Ev [ SW ( a ( v ) , 𝜑 ( v ))] for general distributions. Auction Environments. The single-item auction is an environment with the feasible allocations given by { a : ˝ 𝑖 ∈[ 𝑛 ] 𝑎 𝑖 ≤ 1 } . A more general ℓ -unit auction environment for ℓ ∈ N is given by the feasibility constraints: ˝ 𝑖 ∈[ 𝑛 ] 𝑎 𝑖 ≤ ℓ and 𝑎 𝑖 ∈ [ 0 , 1 ] for all 𝑖 ∈ [ 𝑛 ] . A position auction environment further generalizes ℓ -unit auctions. It is specified by a sorted weight vector w = ( 1 ≥ 𝑤 1 ≥ 𝑤 2 ≥ . . . ≥ 𝑤 𝑛 ≥ 0 ) , which represents the click-through rate probabilities for 𝑛 advert positions 7 . Every bidder may get at most one position and each advert position can be assigned to at most one advertiser. Formally, the feasibility allocations can be specified with an assignment function 𝜋 : [ 𝑛 ] → [ 𝑛 ] of 𝑛 advertisers to 𝑛 sorted slots as follows: { a : ∃ 𝜋, 𝑎 𝑖 ∈ [ 0 , 𝑤 𝜋 ( 𝑖 ) ] for all 𝑖 ∈ [ 𝑛 ]} . Bidder Selection. In the Bidder Selection Problem (BSP) the seller first decides 𝑥 𝑖 ∈ { 0 , 1 } which bidders 𝑖 ∈ [ 𝑛 ] to invite to the auction. The selected set of bidders 𝑆 may not exceed a certain capacity 𝑘 ≥ | 𝑆 | , i.e., ˝ 𝑖 ∈[ 𝑛 ] 𝑥 𝑖 ≤ 𝑘 . Then the auctioneer runs an optimal auction A for the set 𝑆 of invited bidders: VCG mechanism for the welfare objective, and Myerson for the revenue objective. Since revenue of the Myerson's auction can be rewritten as the expected virtual welfare with independent (ironed) virtual values ( 𝜑 𝑖 ( 𝑣 𝑖 ) : 𝑣 𝑖 ∼ 𝐷 𝑖 ) 𝑖 ∈ 𝑆 , the BSP for the revenue maximization is equivalent to the BSP for the welfare maximization. Thus it suffices to only consider the welfare maximization problem. Specifically, we denote by v ∼ x · D the independent draws of 𝑣 𝑖 ∼ 𝑥 𝑖 · 𝐷 𝑖 (i.e., 𝑣 𝑖 ∼ 𝐷 𝑖 when 𝑥 𝑖 = 1, and 𝑣 𝑖 = 0 when 𝑥 𝑖 = 0) for all 𝑖 ∈ [ 𝑛 ] , then the BSP of the VCG mechanism for any ℓ -unit/position auction 7 The number of available positions 𝑚 is usually smaller than the number of bidders 𝑛 , in which case we simply let 𝑤 𝑚 + 1 = · · · = 𝑤 𝑛 = 0. with weights w can be written as follows:   where 𝑣 ( 𝑖 ) is the 𝑖 -th largest value among { 𝑣 𝑖 } 𝑖 ∈[ 𝑛 ] . We want to obtain good approximation algorithms for these BSPs. I.e., we would like to find in polynomial time x ∈ { 0 , 1 } 𝑛 with | x | 1 ≤ 𝑘 such that Ev ∼ x · D [ ˝ ℓ 𝑖 = 1 𝑣 ( 𝑖 ) ] ≥ ( 1 -𝜀 ) OPT ( ℓ ) and Ev ∼ x · D [ ˝ 𝑛 𝑖 = 1 𝑤 𝑖 · 𝑣 ( 𝑖 ) ] ≥ ( 1 -𝜀 ) OPT ( w ) for a small 𝜀 > 0. To simplify the presentation, we assume that all distributions ( 𝐷 𝑖 ) 𝑖 ∈[ 𝑛 ] have finite supports and are given explicitly as the algorithm's input. It has been observed before that the BSP's objective is a monotone submodular function of the set 𝑆 = { 𝑖 : 𝑥 𝑖 = 1 } of invited bidders, i.e., SW ( 𝑆 ) + SW ( 𝑇 ) ≥ SW ( 𝑆 ∩ 𝑇 ) + SW ( 𝑆 ∪ 𝑇 ) for any 𝑆,𝑇 ⊆ [ 𝑛 ] . The same property holds for the ℓ -unit and position auctions with an almost identical proof (see [6]). Wealso consider the standard (in submodular optimization literature) multi-linear extension of the BSP objective. I.e., for a fractional x ∈ [ 0 , 1 ] 𝑛 , we invite each bidder 𝑖 to the auction independently with probability 𝑥 𝑖 . We employ the same notation v ∼ x · D as in the integral problem, where 𝑣 𝑖 ∼ 𝑥 𝑖 · 𝐷 𝑖 means that we first decide whether to invite 𝜉 𝑖 ∈ { 0 , 1 } bidder 𝑖 according to a Bernoulli distribution 𝜉 𝑖 ∼ Ber ( 𝑥 𝑖 ) , then draw their value 𝑣 𝑖 ∼ 𝜉 𝑖 · 𝐷 𝑖 . The capacity constraint transforms into the bound on the expected number of invited bidders ˝ 𝑛 𝑖 = 1 𝑥 𝑖 ≤ 𝑘 . We describe this new mathematical formulation in Section 3. In Section 4, we first consider this fractional relaxation of BSP and we discuss in Section 4.2 how to obtain a good solution to the integral BSP from the fractional problem.",
  "3 NEWMATHEMATICAL FORMULATION": "In this section, we give a fractional relaxation of BSP. As the welfare of any position auction can be written as a linear combination of ℓ -unit auctions, we begin with a fractional relaxation of BSP for the ℓ -unit auction. Specifically, the expected social welfare with a fractional set of bidders x is SW ( x , ℓ ) = E v ∼ x · D [ ˝ ℓ 𝑖 = 1 𝑣 ( 𝑖 ) ] , where 𝑣 ( 𝑖 ) denotes the 𝑖 -th largest value among { 𝑣 𝑖 } 𝑖 ∈{ 1 , 2 ,...,𝑛 } . Hence, the following mathematical program represents BSP for ℓ -unit auction:  As ℓ is fixed, whenever it is clear from the context, we will simply write SW ( x ) . Bernoulli Representation. We now derive an explicit formula for the social welfare SW ( x ) . Fixing a threshold 𝜏 , the expected number of bidders with values exceeding 𝜏 among the highest ℓ bidders is Ev ∼ x · D [ min ( ˝ 𝑛 𝑖 = 1 I [ 𝑣 𝑖 ≥ 𝜏 ] , ℓ )] . Therefore, by integrating 8 over 𝜏 ∈ [ 0 , +∞) , we get  8 The function inside the integral is piece-wise constant, i.e., it is constant between consecutive values of the threshold 𝜏 in the supports of { 𝐷 𝑖 } 𝑖 ∈[ 𝑛 ] . Bidder Selection Problem in Position Auctions WWW'24, May 13-17, 2024, Singapore, Singapore Note that I [ 𝑣 𝑖 ≥ 𝜏 ] for 𝑣 𝑖 ∼ 𝑥 𝑖 · 𝐷 𝑖 is a Bernoulli random variable, and Ev ∼ x · D [ min ( ˝ 𝑛 𝑖 = 1 I [ 𝑣 𝑖 ≥ 𝜏 ] , ℓ )] is the minimum of a sum of independent Bernoulli random variables and ℓ . To simplify notations, we explicitly define the probabilities of Bernoulli random variables   Definition 3.1 (Bernoulli Objective). For a vector q ∈ [ 0 , 1 ] 𝑛 and ℓ , the Bernoulli objective term of q and ℓ is a function H ber ( q , ℓ ) :  Position Auctions. A position auction is given by a vector of nonnegative weights 9 w : ( 𝑤 1 ≥ 𝑤 2 ≥ · · · ≥ 𝑤 𝑛 ≥ 0 ) . The highest social welfare we get from the set 𝑆 of invited bidders is ˝ | 𝑆 | 𝑖 = 1 𝑣 ( 𝑖 ) · 𝑤 𝑖 , where 𝑣 ( 1 ) ≥ · · · ≥ 𝑣 ( | 𝑆 | ) are ordered values of bidders in 𝑆 . Thus the expected social welfare for a fractional set x is  where 𝑤 𝑛 + 1 def == 0. Then the respective fractional BSP program for position auctions is as follows.  We will often omit dependency on w in SW whenever it is clear from the context. We further consider the Bernoulli representation for position auctions:  As in (2), q ( x , 𝜏 ) represents the probabilities of each bidder's value exceeding 𝜏 . Hber ( q , w ) is called the Bernoulli objective term for position auctions.",
  "3.1 Overview of Our Approach": "The fractional relaxation (4) is still neither convex nor concave and thus is too unwieldy. The central idea of our paper is to use instead Poisson approximation to the Bernoulli objective terms Hber ( q ( x , 𝜏 ) , w ) . Specifically, we substitute each Bernoulli random variable 𝑧 ∼ Ber ( 𝑝 ) with 𝑝 = 𝑞 𝑖 ( 𝑥 𝑖 , 𝜏 ) by the Poisson random variable 𝑦 ∼ Pois ( 𝑝 ) with the same expectation as 𝑧 . We use the following Poisson objective term H pois ( q , ℓ ) to approximate H ber ( q , ℓ ) .  9 Usually weights are only for the first 𝑘 slots, as we only select a set of 𝑘 bidders. In this case, we simply assume that 𝑤 𝑘 + 1 = . . . = 𝑤 𝑛 = 0. The advantage of the Poisson approximation H pois ( q , ℓ ) is that the resulting functions H pois ( q , ℓ ) and H pois ( q , w ) are concave in q . This in turn allows us to efficiently solve the optimization problem for the Poisson approximation analogous to (4). This Poisson approximation works well 10 in the following situations. (1) Whentheprobabilities 𝑝 𝑖 = 𝑞 𝑖 ( 𝑥 𝑖 , 𝜏 ) of 𝑧 𝑖 ∼ Ber ( 𝑝 𝑖 ) are small (i.e., 𝑝 𝑖 ≤ 𝛿, ∀ 𝑖 ∈ [ 𝑛 ] ). This allows us to handle the crucial contribution to the welfare comprised of small probability tail events for large thresholds 𝜏 . (2) When E [ ˝ 𝑛 𝑖 = 1 𝑧 𝑖 ] is large (when thresholds 𝜏 are small). Indeed, by Chernoff bounds the sums of independent random variables (both Bernoulli and Poisson) ˝ 𝑛 𝑖 = 1 𝑧 𝑖 and ˝ 𝑛 𝑖 = 1 𝑦 𝑖 are close to their expectations. In fact, we simply use Chernoff objective term H cher ( q , ℓ ) def == min GLYPH<0>˝ 𝑛 𝑖 = 1 𝑞 𝑖 , ℓ GLYPH<1> instead of Poisson approximation in this case. (3) When ℓ is large. In this case, either the concentration inequality gives a good approximation when E [ ˝ 𝑛 𝑖 = 1 𝑧 𝑖 ] = E [ ˝ 𝑛 𝑖 = 1 𝑦 𝑖 ] is large, or when this expectation is much smaller than ℓ then the probability that either of ˝ 𝑛 𝑖 = 1 𝑧 𝑖 or ˝ 𝑛 𝑖 = 1 𝑦 𝑖 exceeds the threshold ℓ is small. Then the algorithmic framework for the BSP is rather straightforward. We need to solve the following concave program of x :  We define the approximate social welfare g SW ( x , w ) to be the objective of (6). Here, H pois ( q ( x , 𝜏 ) , ℓ ) = E 𝑌 ∼ Pois ( ˝ 𝑞 𝑖 ) [ min ( 𝑌, ℓ )] and all functions under the integral are piece-wise constant with the number of pieces bounded by the size of the union of the supports of 𝐷 𝑖 . The optimal fractional solution x can be computed rather efficiently using continuous convex optimization. Finally, we use a rounding procedure (similar to the multi-linear extension of submodular function) to the fractional solution of (6) to obtain an integral solution with a small loss to the approximation guarantee.",
  "4 OUR ALGORITHM": "Poisson approximation is the central idea of this paper. We use the Poisson Objective to approximate Bernoulli objective terms. Definition 4.1 (Poisson Objective). For q ∈ [ 0 , 1 ] 𝑛 and ℓ ∈ N , the Poisson objective term is a function H pois ( q , ℓ ) given by  Note that the latter equality is an important property of Poisson distribution: the sum of independent Poisson random variables 𝑦 𝑖 ∼ Pois ( 𝑞 𝑖 ) follows the Poisson distribution Pois ( ˝ 𝑛 𝑖 = 1 𝑞 𝑖 ) . Another crucial property is the concavity of Poisson approximation. Claim 4.2 (Concavity of Poisson). Hpois ( q , ℓ ) is a concave function in q ∈ [ 0 , 1 ] 𝑛 for ∀ ℓ ∈ N . 10 The sum of Poisson random variables approaches the sum of Bernoulli random variables in TV and other statistical distances. WWW'24, May 13-17, 2024, Singapore, Singapore Nikolai Gravin, Yixuan Even Xu, and Renfei Zhou Proof. Let 𝜆 = ˝ 𝑛 𝑖 = 1 𝑞 𝑖 . Notice that H pois ( q , ℓ ) only depends on 𝜆 , which is linear in q . We use H pois ( 𝜆 ) to represent this function. Then, we only need to prove that H pois ( 𝜆 ) is concave in 𝜆 . Rewrite  By a straightforward differentiation of the partial series we get  Therefore, H pois ( q , ℓ ) is concave in 𝜆 , and thus concave in q . □ Chernoff Approximation. As we mentioned earlier Poisson approximation is useful for small probabilities 𝑞 𝑖 ≤ 𝛿 . For another extreme case where 𝜆 = ˝ 𝑛 𝑖 = 1 𝑞 𝑖 is large, due to concentration bounds, Poisson approximation also works well with 𝑂 ( 𝜆 -1 / 2 ) relative error, because both ˝ 𝑛 𝑖 = 1 Ber ( 𝑞 𝑖 ) and Pois ( 𝜆 ) concentrate around 𝜆 . To optimize the presentation for an easier understanding, we will use Chernoff objective term Hcher ( q , ℓ ) def == min GLYPH<0>˝ 𝑛 𝑖 = 1 𝑞 𝑖 , ℓ GLYPH<1> as an alternative of Poisson in this case. It is also concave in q . In a number of cases H pois ( q , ℓ ) and H cher ( q , ℓ ) are good approximations to H ber ( q , ℓ ) . In Appendix A, we present these approximation guarantees along with a simple algorithm that illustrates our approach in an important special case.",
  "4.1 Algorithm for Position Auctions": "Below, we consider Bidder Section Problem for position auctions. We first analyze the fractional BSP, and then explain in Section 4.2 how to do integral rounding of the fractional solution with only a small loss to the approximation guarantee. For the fractional BSP, we give an efficient polynomial time ( 1 -𝑂 ( 𝑘 -4 )) -approximation algorithm (see Theorem 4.4 for the exact statement). Recall that the Bernoulli objective term for position auctions Hber ( q , w ) is defined in Section 3. The expected welfare SW ( x ) = SW ( x , w ) is written as an integral of H ber . Below, we will also need the Chernoff objective term  We sometimes slightly abuse notations and write H ber ( x , 𝜏 ) and Hcher ( x , 𝜏 ) instead of H ber ( q , w ) and H cher ( q , w ) . In order to effectively use the Poisson approximation we would like to have the small probability assumption 𝑞 𝑖 ≤ 𝛿 , which is achieved by fixing a small bidder set 𝑆 fix properly (see Appendix A for formal approximation guarantees). Fixing Small Bidder Set. We will fix a small set of bidders 𝑆 fix (set 𝑥 𝑖 = 1 for 𝑖 ∈ 𝑆 fix ) with | 𝑆 fix | = 𝜀 · 𝑘 and make sure that all other bidders 𝑖 ∉ 𝑆 fix have only a small probability Pr [ 𝑣 𝑖 ≥ 𝜏 ] ≤ 𝛿 to exceed any of the thresholds 𝜏 > 𝜂 for certain 𝜂 > 0. This allows us to use Poisson approximation for the high range thresholds 𝜏 > 𝜂 and bidders 𝑖 ∈ 𝑀 def == [ 𝑛 ] \\ 𝑆 fix . On the other hand, for the low range thresholds 𝜏 ≤ 𝜂 , we would like to see a certain number ℓ ∗ of bidders 𝑖 ∈ 𝑆 fix to exceed the threshold 𝑣 𝑖 ≥ 𝜏 . To this end, we choose 𝑆 fix so that the expected number of bidders 𝑖 ∈ 𝑆 fix with 𝑣 𝑖 ≥ 𝜏 is at least ℓ ∗ . We can achieve the following guarantees for 𝜀, 𝛿, and ℓ ∗ . Claim 4.3 (Small Bidder Set). Let 𝜀 ∈ [ ℓ ∗ 𝛿 · 𝑘 , 1 ) be a multiple of 1 / 𝑘 for ℓ ∗ ∈ R ≥ 0 : ℓ ∗ < 𝑘 and 𝛿 ∈ ( 0 , 1 ) . We can find in polynomial time a threshold 𝜂 ≥ 0 and a set 𝑆 fix ⊆ [ 𝑛 ] of size | 𝑆 fix | = 𝜀 · 𝑘 :  Proof. We search through all thresholds 𝜏 in the supports of { 𝐷 𝑖 } 𝑖 ≥ 1 and find two consecutive threshold values 𝜂 and 𝜂 + > 𝜂 such that |{ 𝑖 : Pr [ 𝑣 𝑖 ≥ 𝜂 ] ≥ 𝛿 }| ≥ 𝜀 · 𝑘 , but a similar number of bidders |{ 𝑖 : Pr [ 𝑣 𝑖 > 𝜂 ] = Pr [ 𝑣 𝑖 ≥ 𝜂 +] ≥ 𝛿 }| < 𝜀 · 𝑘 for the next value 𝜂 + . We place each bidder 𝑖 with Pr [ 𝑣 𝑖 > 𝜂 ] ≥ 𝛿 into 𝑆 fix and fill the remaining positions in 𝑆 fix up to 𝜀 · 𝑘 with bidders from { 𝑖 : Pr [ 𝑣 𝑖 ≥ 𝜂 ] ≥ 𝛿 > Pr [ 𝑣 𝑖 ≥ 𝜂 +]} . Thus, every bidder 𝑖 ∉ 𝑆 fix has Pr [ 𝑣 𝑖 > 𝜂 ] = Pr [ 𝑣 𝑖 ≥ 𝜂 +] < 𝛿 as required by condition (b). On the other hand, | 𝑆 fix | = 𝜀 · 𝑘 and Pr [ 𝑣 𝑖 ≥ 𝜂 ] ≥ 𝛿 for every 𝑖 ∈ 𝑆 fix , which implies (a), since ∀ 𝜏 ≤ 𝜂 ,  Thus we constructed in polynomial time the desired threshold 𝜂 and set 𝑆 fix . □ We need to balance three parameters ℓ ∗ , 𝛿 , and 𝜀 , which must satisfy the conditions of Claim 4.3. Specifically, we choose ℓ ∗ = 𝑘 1 / 2 , 𝜀 = 𝑘 -1 / 4 rounded up to a multiple of 1 / 𝑘 , and 𝛿 = 𝜀 ≥ 𝑘 -1 / 4 . Claim 4.3 leads to Algorithm 1 (which we will present shortly). For thresholds 𝜏 > 𝜂 , any bidder outside 𝑆 fix has only ≤ 𝛿 probability to exceed the threshold, which is ideal for applying the Poisson approximation. Therefore, to achieve the approximation guarantees when the probability of exceeding the threshold is low, we recalculate the adjusted Poisson objective term by applying Poisson approximation only on these bidders. Specifically, we let 𝑀 def == [ 𝑛 ] \\ 𝑆 fix and define 𝑍 fix ( 𝜏 ) def == ˝ 𝑖 ∈ 𝑆 fix I [ 𝑣 𝑖 ≥ 𝜏 ] (as x 𝑆 fix = 1 𝑆 fix , random variable 𝑍 fix ( 𝜏 ) has Poisson binomial distribution). Indeed, we may calculate all probabilities Pr [ 𝑍 fix ( 𝜏 ) = 𝑗 ] for each 𝑗 ∈ [ 0 , 𝜀 · 𝑘 ] in polynomial time, and define the adjusted Poisson objective term as a conditional expectation depending on 𝑍 fix ( 𝜏 ) :  where H pois ( x 𝑀 , ℓ -𝑗, 𝜏 ) = E 𝑌 ∼ Pois ( 𝜆 𝑀 ) [ min { 𝑌, ℓ -𝑗 }] , and 𝜆 𝑀 = ˝ 𝑖 ∈ 𝑀 𝑞 𝑖 ( 𝑥 𝑖 , 𝜏 ) . For the low-range thresholds 𝜏 ≤ 𝜂 , we use the Chernoff objective H cher ( x , 𝜏 ) = Hcher ( q ( x , 𝜏 ) , w ) to approximate Hber ( x , 𝜏 ) = Hber ( q ( x , 𝜏 ) , w ) for x = ( x 𝑀 , 1 𝑆 fix ) . Importantly, unlike the high-range thresholds, we do not recalculate H cher as a function of x 𝑀 , but use Chernoff approximation for the entire 𝑛 -dimensional vector x = ( x 𝑀 , x 𝑆 fix ) with x 𝑆 fix = 1 𝑆 fix . Thus, as ℓ ∗ = 𝑘 1 / 2 grows with 𝑘 , Hcher ( x , 𝜏 ) → Hber ( x , 𝜏 ) . Bidder Selection Problem in Position Auctions WWW'24, May 13-17, 2024, Singapore, Singapore",
  "Algorithm 1: Fractional BSP for Position Auctions": "Let ℓ ∗ = 𝑘 1 / 2 ; 𝜀 be 𝑘 -1 / 4 rounded up to a multiple of 1 / 𝑘 GLYPH<0> 𝜀 = ⌈ 𝑘 · 𝑘 -1 / 4 ⌉ 𝑘 GLYPH<1> ; 𝛿 = 𝜀 . (1) Find 𝜂 and 𝑆 fix according to Claim 4.3. Set 𝑥 𝑖 = 1 for ∀ 𝑖 ∈ 𝑆 fix . Let 𝑀 def == [ 𝑛 ] \\ 𝑆 fix . (2) Define the approximate welfare using adjusted Poisson objective (7):  (3) Return e x ∗ = ( e x ∗ 𝑀 , 1 𝑆 fix ) , where e x ∗ 𝑀 is the solution to the concave program in x 𝑀 :  Algorithm. Our main algorithm is summarized as Algorithm 1. Theorem 4.4. Algorithm 1 works in polynomial time and is a ( 1 -𝑂 ( 𝜀 )) -approximation, i.e., ( 1 -43 𝑘 -1 / 4 ) -approximation to the fractional BSP for any position auction. The proof of this theorem is deferred to Appendix B.1.",
  "4.2 Rounding": "Weconclude Section 4 by presenting the rounding algorithm, which takes our solution e x ∗ to the fractional BSP produced by Algorithm 1 and returns a solution to the integral BSP. Our fractional relaxation works as the standard multi-linear extension of submodular functions, which corresponds to sampling a random set of bidders 𝑆 ∼ ˛ 𝑛 𝑖 = 1 Ber ( 𝑥 𝑖 ) in the integral BSP. To align the notations for fractional and integral BSPs, we shall use vectors y , z ∈ { 0 , 1 } 𝑛 for the respective sets of selected bidders. Specifically, we use y ∼ Ber ( x ) to represent the random set 𝑆 in the multi-linear extension. Our rounding procedure is in Algorithm 2.",
  "Algorithm 2: Rounding: algorithm for Integral BSP": "(1) Run Algorithm 1 to obtain a fractional solution x . (2) Sample an integral solution y ∼ Ber ( x ) , with y ∈ { 0 , 1 } 𝑛 . (3) · If | y | 1 ≤ 𝑘 , return z = y , · Else ( | y | 1 > 𝑘 ), return 𝑘 bidders z ∼ GLYPH<0> y 𝑘 GLYPH<1> chosen uniformly at random from y . Theorem 4.5. Algorithm 2 works in polynomial time and in expectation is a GLYPH<0> 1 -43 𝑘 -1 / 4 -𝑂 ( 𝑘 -1 / 2 ) GLYPH<1> -approximation to the integral BSP for any position auction. The proof of Theorem 4.5 is deferred to Appendix B.2. Since SW ( z ) ≤ OPT , by running the rounding algorithm a few times and taking the best produced solution, we get a slightly worse approximation guarantee of ( 1 -𝑂 ( 𝑘 -1 / 4 )) OPT with high probability.",
  "5 NUMERICAL EXPERIMENTS": "Wefocus on testing welfare maximization Bidder Selection Problem for position auctions. In our experiments, we used synthetically generated prior distributions, as (1) the BSP is a pure optimization problem, which ignores the issue of data retrieval (2) due to companies' strict nondisclosure rules, it is infeasible to experiment on real historical data. We generally followed the AuctionGym [13] setup, a popular online simulation environment for advertising auctions run by Amazon, in the design of our synthetic data. Implementation. We implemented Algorithms 1 and 2 as well as its modified version for BSP. In this simpler modification, we used a slightly different objective g SW ( x ) def == ∫ +∞ 0 Hpois ( x , 𝜏 ) d 𝜏 than (8): we did not fix any small bidder set, only applied Poisson approximation, and used the same rounding step. The original Algorithm 1 was designed with the worst-case theoretical guarantees in mind, while the modified one is more practically oriented and retains only the most important Poisson approximation. The modification did not affect the run-time much, but allowed us to avoid hard-coded approximation loss of 𝑂 ( 𝑘 -1 / 4 ) due to the potentially suboptimal decision of fixing a small bidder set 𝑆 fix . We implemented the practical variant in Python with the help of Gurobi [11], a well-known commercial convex optimization solver, and present its comparison 11 with benchmark algorithms in Table 1. Benchmarks. Ideally, we would like to compare our solutions to the optimum, which is usually not possible, as BSP is an NP-hard problem even for the case of single-item auction [9]. It is also infeasible to use any of the existing PTAS algorithms, as only [6] implemented their PTAS but could only run experiments on tiny input sizes of ( 𝑛 = 9 , 𝑘 = 3 ) , while EPTASes of [17, 22] are pure computational complexity results with unrealistically large estimates on running times for inputs of any size. Instead, we used two well-known heuristic algorithms as our benchmarks: Greedy for submodular maximization following numerical experiments in [6, 17], and Local Search mentioned in [3]. They are easy to implement and run in feasible times on most of our datasets. Note that if Local Search starts with the solution produced by Greedy, it can only improve upon it, i.e., it seems reasonable to use Local Search as a main reference point for approximation efficiency guarantees. We also tested Local Search against the exact optimum computed by Brute Force on small instances ( 𝑛 = 50 , 𝑘 = 5 ) and found that they always produced the same results. We implemented Greedy, Local Search, and Brute Force in Python to ensure a fair comparison with our algorithm. We also limited the number of threads used by our algorithm to 1, as the benchmark algorithms are not parallelizable. Datasets. We generated each of the 𝑛 prior distributions as a log-normal distribution Lognormal ( 𝜇, 𝜎 2 ) as in AuctionGym [13]. We selected parameters 𝜇 and 𝜎 of each individual distribution by 11 We also compared the performances of the modified version and the theoretical version of our algorithm in Appendix D.1. The approximation efficiency of the theoretical version was worse than the modified version as expected. WWW'24, May 13-17, 2024, Singapore, Singapore Nikolai Gravin, Yixuan Even Xu, and Renfei Zhou Table 1: Experimental results of Local Search, Greedy, and our algorithm. The 'solution' column for each algorithm denotes the average relative quality of the produced solution to that of the best-performing algorithm that terminated in 1 week. Error bars denote the standard deviation. The 'time' column denotes the average running time of each algorithm. drawing them independently from continuous uniform distributions U[ 0 , 0 . 2 ] and U[ 0 , 0 . 5 ] , respectively. 12 We then discretized each distribution to a common, finite support { 0 } ∪ { 1 + 𝑖 50 | 𝑖 = 0 , 1 , . . . , 49 } by moving probability mass on each discretized interval inside [ 0 , 2 ] to its left point and by redistributing the mass on ( 2 , +∞) to the discrete points, proportional to their respective probabilities. The weights w of the position auction on each instance were set as: 𝑤 𝑖 = 1 for 𝑖 ∈ [ 1 , 0 . 2 𝑘 ] , 𝑤 𝑖 = 0 . 2 for 𝑖 ∈ ( 0 . 2 𝑘, 0 . 6 𝑘 ] , and 𝑤 𝑖 = 0 for 𝑖 ∈ ( 0 . 6 𝑘, 𝑘 ] . We constructed datasets with 3 different 𝑛 ∈ { 50 , 200 , 1000 } . For each 𝑛 , we used 3 different values of 𝑘 : for 𝑛 = 50, we set 𝑘 ∈ { 5 , 10 , 20 } ; for 𝑛 = 200, we set 𝑘 ∈ { 10 , 20 , 40 } ; and for 𝑛 = 1000, we set 𝑘 ∈ { 50 , 100 , 200 } . The general idea was to capture practically relevant scenarios of different scales, and also have our benchmarks solve them in a reasonable time. Moreover, we picked 𝑘 so that it is always significantly smaller than 𝑛 . Note that this puts our algorithm at a disadvantage, as our Poisson relaxation gets more accurate as 𝑘 grows. Results. The numerical experiments are given in Table 1. We ran Local Search, Greedy, and our algorithm on all 9 combinations of 𝑛 and 𝑘 . We recorded the approximate efficiency ('solution' column) and the running time of each algorithm (if an algorithm did not terminate in 1 week, we would stop it and write 'N/A' for the respective dataset). We measure efficiency as the relative quality of the produced solution with respect to the solution of the bestperforming algorithm that terminated in 1 week on that test case. (1) As shown in Table 1, Greedy performs surprisingly well: on each generated dataset, it produced solutions within 5% of the best-performing algorithm. It is much better than the ( 1 -1 / 𝑒 ) -approximation guarantee for general submodular maximization. Similar observations have been made in [17]. (2) Our modified algorithm produced solutions that were always within 0.1% of the solution of the best-performing algorithm and also had very small variance. I.e., our algorithm is effective and consistently produces good results. Moreover, its effectiveness improves as the problem size 𝑘 grows, which concurs with our theoretical analysis. 12 AuctionGym uses comparable 𝜇 = 0 . 1 and 𝜎 = 0 . 2. (3) The running time is the most crucial parameter in the context of BSP, as the optimization algorithm must stop within strict time limits and approximate efficiency is only a secondary objective. According to Table 1, the running time of our algorithm scales much slower than that of Greedy and Local Search with 𝑛 and 𝑘 . The time complexities of Greedy and one iteration of Local Search are both 𝑂 ( 𝑛𝑘 3 · | Support |) . When 𝑘 is constant ( 𝑘 = 5), this time complexity is linear in 𝑛 , but even then our algorithm has comparable running time and when 𝑘 = Θ ( 𝑛 ) , it is much faster than the benchmarks.",
  "6 CONCLUDING REMARKS": "In this paper, we studied a more general setting of position auction than all previous work on the Bidder Selection Problem. We proposed a new relaxation that can be solved in time polynomial in 𝑛 and 𝑘 , and the polynomial is rather small. The proposed Poisson approximation approach is much simpler than previous PTAS complexity results for 𝑘 -MAX or non-adaptive probing, and it can be implemented in practice. We also did extensive numerical experiments on inputs with practically relevant sizes and observed that our algorithm outperforms some commonly used heuristics, such as Greedy for general submodular maximization. Furthermore, we showed that the Poisson approximation approach also yields good theoretical guarantees. Namely, that BSP becomes solvable in polynomial time for any fixed 𝜀 , when the problem size 𝑘 grows. Our algorithm is the first one with a nearly perfect efficiency guarantee of PTAS, that is relevant in the application domain of the BSP and can be used by a company. Indeed, all previous PTASes had enormous running times and high implementation complexities that made them completely irrelevant to the problem, which was motivated by getting a speedup of 𝑛 / 𝑘 magnitude. A natural next step would be to consider BSP of various auction environments under richer sets of feasibility constraints such as matroid, matching, and intersection of matroids. Another interesting direction is to identify conditions where it is possible to efficiently optimize the revenue of BSP for VCG/GSP auction formats. Bidder Selection Problem in Position Auctions WWW'24, May 13-17, 2024, Singapore, Singapore",
  "REFERENCES": "[1] MOSEK ApS. 2022. The MOSEK optimization toolbox for MATLAB manual. Version 10.0. MOSEK. http://docs.mosek.com/10.0/toolbox/index.html [2] Nikhil Bansal and Maxim Sviridenko. 2006. The Santa Claus Problem. In Proceedings of the 38th Annual ACM Symposium on Theory of Computing, Seattle, WA, USA, May 21-23, 2006 (Seattle, WA, USA) (STOC '06) . Association for Computing Machinery, New York, NY, USA, 31-40. https://doi.org/10.1145/1132516.1132522 [3] Xiaohui Bei, Nick Gravin, Pinyan Lu, and Zhihao Gavin Tang. 2023. Bidder Subset Selection Problem in Auction Design. In Proceedings of the 2023 ACMSIAM Symposium on Discrete Algorithms, SODA 2023, Florence, Italy, January 22-25, 2023 , Nikhil Bansal and Viswanath Nagarajan (Eds.). SIAM, 3788-3801. https://doi.org/10.1137/1.9781611977554.ch147 [4] Anand Bhalgat and Sanjeev Khanna. 2014. A Utility Equivalence Theorem for Concave Functions. In Integer Programming and Combinatorial Optimization , Jon Lee and Jens Vygen (Eds.). Springer International Publishing, Cham, 126-137. [5] Andrei Z. Broder, David Carmel, Michael Herscovici, Aya Soffer, and Jason Zien. 2003. Efficient Query Evaluation Using a Two-Level Retrieval Process. In Proceedings of the Twelfth International Conference on Information and Knowledge Management (New Orleans, LA, USA) (CIKM '03) . Association for Computing Machinery, New York, NY, USA, 426-434. https://doi.org/10.1145/956863.956944 [6] Wei Chen, Wei Hu, Fu Li, Jian Li, Yu Liu, and Pinyan Lu. 2016. Combinatorial Multi-Armed Bandit with General Reward Functions. In Advances in Neural Information Processing Systems , Daniel D. Lee, Masashi Sugiyama, Ulrike von Luxburg, Isabelle Guyon, and Roman Garnett (Eds.), Vol. 29. Curran Associates Inc., Red Hook, NY, USA, 1651-1659. https://proceedings.neurips.cc/paper/2016/ hash/aa169b49b583a2b5af89203c2b78c67c-Abstract.html [7] D. J. Daley and D. Vere-Jones. 2008. An introduction to the theory of point processes. Vol. II: General Theory and Structure (second ed.). Springer, New York. https: //link.springer.com/book/10.1007/978-0-387-49835-5 [8] Benjamin Edelman, Michael Ostrovsky, and Michael Schwarz. 2007. Internet Advertising and the Generalized Second-Price Auction: Selling Billions of Dollars Worth of Keywords. American Economic Review 97, 1 (March 2007), 242-259. https://doi.org/10.1257/aer.97.1.242 [9] Ashish Goel, Sudipto Guha, and Kamesh Munagala. 2010. How to probe for an extreme value. ACM Trans. Algorithms 7, 1 (2010), 12:1-12:20. https://doi.org/10. 1145/1868237.1868250 [10] Gagan Goel, Renato Paes Leme, Jon Schneider, David Thompson, and Hanrui Zhang. 2023. Eligibility Mechanisms: Auctions Meet Information Retrieval. In Proceedings of the ACM Web Conference 2023 (Austin, TX, USA) (WWW '23) . Association for Computing Machinery, New York, NY, USA, 3541-3549. https: //doi.org/10.1145/3543507.3583478 [11] Gurobi Optimization, LLC. 2023. Gurobi Optimizer Reference Manual. [12] Jason Hartline. [n. d.]. Mechanism Design and Approximation. http:// jasonhartline.com/MDnA/. Accessed: 2022-01-10. [13] Olivier Jeunen, Sean Murphy, and Ben Allison. 2023. Off-Policy Learning-toBid with AuctionGym. In Proceedings of the 29th ACM SIGKDD Conference on Knowledge Discovery and Data Mining . 4219-4228. [14] Jon Kleinberg and Maithra Raghu. 2018. Team Performance with Test Scores. ACM Trans. Econ. Comput. 6, 3-4, Article 17 (oct 2018), 26 pages. https://doi.org/ 10.1145/3274644 [15] Jian Li and Amol Deshpande. 2019. Maximizing Expected Utility for Stochastic Combinatorial Optimization Problems. Mathematics of Operations Research 44, 1 (February 2019), 354-375. https://doi.org/10.1287/moor.2017.0927 [16] Jian Li and Wen Yuan. 2013. Stochastic Combinatorial Optimization via Poisson Approximation. In Proceedings of the Forty-Fifth Annual ACM Symposium on Theory of Computing (Palo Alto, California, USA) (STOC '13) . Association for Computing Machinery, New York, NY, USA, 971-980. https://doi.org/10.1145/ 2488608.2488731 [17] Aranyak Mehta, Uri Nadav, Alexandros Psomas, and Aviad Rubinstein. 2020. Hitting the high notes: Subset selection for maximizing expected order statistics. Advances in Neural Information Processing Systems 33 (2020), 15800-15810. [18] S.Y. Novak. 2011. Extreme Value Methods with Applications to Finance . CRC Press, Boca Raton. [19] S. Y. Novak. 2019. Poisson approximation. Probability Surveys 16 (2019), 228 276. https://doi.org/10.1214/18-PS318 [20] Ariel D. Procaccia, Sashank Jakkam Reddi, and Nisarg Shah. 2012. A Maximum Likelihood Approach For Selecting Sets of Alternatives. In Proceedings of the Twenty-Eighth Conference on Uncertainty in Artificial Intelligence, Catalina Island, CA, USA, August 14-18, 2012 , Nando de Freitas and Kevin P. Murphy (Eds.). AUAI Press, Corvallis, Oregon, 695-704. https://dslpitt.org/uai/displayArticleDetails. jsp?mmnu=1&smnu=2&article_id=2333&proceeding_id=28 [21] Zhou Rong and Zhixue Lu. 2007. Two-stage procurement auction with bidders of asymmetric capacity. Systems Engineering-Theory & Practice 27, 12 (2007), 36-41. [22] Danny Segev and Sahil Singla. 2021. Efficient Approximation Schemes for Stochastic Probing and Prophet Problems. In EC '21: The 22nd ACM Conference on Economics and Computation, Budapest, Hungary, July 18-23, 2021 , Péter Biró, Shuchi Chawla, and Federico Echenique (Eds.). ACM, New York, NY, USA, 793794. https://doi.org/10.1145/3465456.3467614 [23] Guofu Tan. 1992. Entry and R & D in procurement contracting. Journal of Economic Theory 58, 1 (1992), 41-60. [24] Hal Varian. 2007. Position auctions. International Journal of Industrial Organization 25, 6 (2007), 1163-1178. https://EconPapers.repec.org/RePEc:eee:indorg:v: 25:y:2007:i:6:p:1163-1178 [25] Hal R. Varian and Christopher Harris. 2014. The VCG Auction in Theory and Practice. American Economic Review 104, 5 (May 2014), 442-45. https://doi.org/ 10.1257/aer.104.5.442 [26] Jiajin Yu and Shabbir Ahmed. 2016. Maximizing expected utility over a knapsack constraint. Operations Research Letters 44, 2 (2016), 180-185. WWW'24, May 13-17, 2024, Singapore, Singapore Nikolai Gravin, Yixuan Even Xu, and Renfei Zhou",
  "A POISSON AND CHERNOFF APPROXIMATION OF BERNOULLI OBJECTIVE": "In this section, we present approximation guarantees for Bernoulli objective term by the Poisson and Chernoff objectives. Poisson approximation is the central idea of this paper. It is defined in Section 4 as:  We also will solve a special case of fractional Bidder Selection Problem for ℓ -unit auction to demonstrate how Poisson approximation can be useful. In particular, we will assume that each bidder's value has only ≤ 𝛿 probability to be nonzero. Our main goal here will be to illustrate our approach and analysis ideas rather than to derive independent results for this special case. Approximation Guarantees. There are many known Poisson approximation results (see, e.g., a survey [19]) for the sum of independent Bernoulli random variables, e.g., in total variation, earth mover's, uniform (a.k.a. Kolmogorov) distances. These are typically absolute approximation guarantees, while we need relative approximations similar to Chernoff approximations from Lemma A.3. As our goal is to handle small probability tail events, we assume that each bidder's value 𝑣 𝑖 has only a small probability 𝛿 to be greater than zero, i.e., ∀ 𝑖 ∈ [ 𝑛 ] , Pr [ 𝑣 𝑖 > 0 ] ≤ 𝛿 . The following Poisson absolute approximation result will be useful to us: Lemma A.1 ([7, Lemma 11.3.V, p . 162]). Let ( 𝑧 𝑖 ∼ Ber ( 𝑞 𝑖 )) 𝑛 𝑖 = 1 be 𝑛 independent Bernoulli random variables with 𝑞 𝑖 ≤ 𝛿 for ∀ 𝑖 ∈ [ 𝑛 ] . Let 𝑍 def == ˝ 𝑛 𝑖 = 1 𝑧 𝑖 and 𝑌 ∼ Pois ( 𝜆 ) , where 𝜆 def == ˝ 𝑛 𝑖 = 1 𝑞 𝑖 . Then  With Lemma A.1 we can derive relative approximations: Lemma A.2. Suppose q ∈ [ 0 , 𝛿 ] 𝑛 and ℓ ∈ N . Then  Proof. (a). Let 𝑧 𝑖 ∼ Ber ( 𝑞 𝑖 ) be Bernoulli random variables and 𝑍 = ˝ 𝑛 𝑖 = 1 𝑧 𝑖 be their sum. Then we can rewrite H ber ( q , ℓ ) = E [ min ( 𝑍, ℓ )] = ˝ ℓ 𝑗 = 1 Pr [ 𝑍 ≥ 𝑗 ] . Also let 𝑦 𝑖 ∼ Pois ( 𝑞 𝑖 ) and define 𝑌 = ˝ 𝑛 𝑖 = 1 𝑦 𝑖 . Clearly, 𝑌 ∼ Pois ( 𝜆 ) for 𝜆 = ˝ 𝑛 𝑖 = 1 𝑞 𝑖 . Then H pois ( q , ℓ ) = E [ min ( 𝑌, ℓ )] = ˝ ℓ 𝑗 = 1 Pr [ 𝑌 ≥ 𝑗 ] . Hence, we have  The RHS is similar to the earth mover's distance between the sum of Bernoulli and Poisson random variables (the difference is that the summation instead of +∞ goes only up to ℓ ). Next, we shall prove the following inequality:  which together with Lemma A.3 (a) immediately implies the desired result:  We consider two cases. First, when 𝜆 ≥ ℓ . Then for any 𝑗 ∈ N + we have by (10)  Second, when min ( 𝜆, ℓ ) = 𝜆 < ℓ , we use instead the earth mover's distance 𝑑 G ( 𝑍,𝑌 ) = ˝ +∞ 𝑗 = 0 | Pr [ 𝑍 ≥ 𝑗 ] -Pr [ 𝑌 ≥ 𝑗 ]| . We do not calculate the cumulative density functions of 𝑍 = ˝ 𝑛 𝑖 𝑧 𝑖 and 𝑌 = ˝ 𝑛 𝑖 𝑦 𝑖 , but get an upper bound by coupling individual 𝑧 𝑖 and 𝑦 𝑖 . Specifically, we couple 𝑧 𝑖 and 𝑦 𝑖 so that 𝑧 𝑖 = 0 implies 𝑦 𝑖 = 0 (note that Pr [ 𝑧 𝑖 = 0 ] = 1 -𝑞 𝑖 ≤ Pr [ 𝑦 𝑖 = 0 ] = 𝑒 -𝑞 𝑖 ). Conversely, if 𝑧 𝑖 = 1 it is matched with all 𝑦 𝑖 = 1 , 2 , . . . and the remaining probability for 𝑦 𝑖 = 0. Then we have  Bidder Selection Problem in Position Auctions WWW'24, May 13-17, 2024, Singapore, Singapore Since 𝑧 𝑖 = 0 is matched to 𝑦 𝑖 = 0, we get the following expression for the term E [| 𝑧 𝑖 -𝑦 𝑖 |] ,  where the first inequality holds, since Pr [ 𝑧 𝑖 = 1 ∧ 𝑦 𝑖 = 0 ] = ( Pr [ 𝑦 𝑖 = 0 ] -Pr [ 𝑧 𝑖 = 0 ]) = 𝑒 -𝑞 𝑖 -1 + 𝑞 𝑖 ≤ 𝑞 2 𝑖 / 2 and Pr [ 𝑦 𝑖 = 𝑗 ] = 𝑒 -𝑞 𝑖 𝑞 𝑗 𝑖 / 𝑗 ! ≤ 𝑞 2 𝑖 / 2 𝑗 -1 for 𝑗 ≥ 2. Therefore,  which concludes the proof. (b). As ℓ = 1, H ber ( q , 1 ) = 1 -˛ 𝑛 𝑖 = 1 ( 1 -𝑞 𝑖 ) def == 1 -𝑒 -𝑠 , where 𝑠 = -˝ 𝑛 𝑖 = 1 ln ( 1 -𝑞 𝑖 ) . Let 𝜆 = ˝ 𝑛 𝑖 = 1 𝑞 𝑖 , then H pois ( q , 1 ) = 1 -𝑒 -𝜆 . Observe that 𝑞 𝑖 ≤ -ln ( 1 -𝑞 𝑖 ) ≤ 𝑞 𝑖 1 -𝑞 𝑖 ≤ 𝑞 𝑖 1 -𝛿 . Thus 𝜆 ≤ 𝑠 ≤ 𝜆 1 -𝛿 . The former inequality implies the desired lower bound H ber ( q , 1 ) -Hpois ( q , 1 ) ≥ 0. To prove the required upper bound, observe that H ber ( q , 1 ) = 𝑓 ( 𝑠 ) , Hpois ( q , 1 ) = 𝑓 ( 𝜆 ) for 𝑓 ( 𝑡 ) = 1 -𝑒 -𝑡 . As 𝑓 ( 𝑡 ) is a concave function with 𝑓 ( 0 ) = 0, we have 𝑓 ( 𝜆 ) ≥ 𝑓 ( 𝑠 ) · 𝜆 𝑠 ≥ 𝑓 ( 𝑠 ) · ( 1 -𝛿 ) . Thus H ber ( q , 1 ) -Hpois ( q , 1 ) = 𝑓 ( 𝑠 ) -𝑓 ( 𝜆 ) ≤ 𝛿 · 𝑓 ( 𝑠 ) = 𝛿 · Hber ( q , 1 ) , which concludes the proof. □ Algorithm for Small Tail Probabilities. Assume that each bidder's value 𝑣 𝑖 has at most 𝛿 probability to be greater than zero. Then Lemma A.2 and Claim 4.2 (Concavity of Poisson) suggest Algorithm 3.",
  "Algorithm 3: Approximation to Fractional BSP for Tail Probabilities ℓ -unit Auctions.": "Return the optimal solution e x ∗ to the concave program:  We can solve the above program efficiently via standard concave function maximization methods, as the objective g SW is concave in x . Indeed, from Claim 4.2 we know that H pois ( q , ℓ ) is concave in q and, since q ( x , 𝜏 ) is linear in x for every fixed 𝜏 , Hpois is also concave in x . As g SW ( x , ℓ ) is an integral (non-negative linear combination) of H pois ( q ( x , 𝜏 ) , ℓ ) , g SW is concave in x . From Lemma A.2, we obtain the following approximation guarantees of SW ( x , ℓ ) by g SW ( x , ℓ ) .  Let x ∗ be the best solution of the original problem (1). We have  Hence, Algorithm 3 is ( 1 -35 𝛿 ) -approximation. Chernoff Approximation Guarantees. We recall the following definitions  Our main algorithm needs the following approximation guarantee of H cher : WWW'24, May 13-17, 2024, Singapore, Singapore Nikolai Gravin, Yixuan Even Xu, and Renfei Zhou Lemma A.3. For all q ∈ [ 0 , 1 ] 𝑛 , ℓ ∈ N + , let 𝜆 = ˝ 𝑛 𝑖 = 1 𝑞 𝑖 , the following properties hold.    In order to prove Lemma A.3, we first prove the following two auxiliary lemmas. Lemma A.4. For all q ∈ [ 0 , 1 ] 𝑛 , ℓ ∈ N + , let 𝜆 = ˝ 𝑛 𝑖 = 1 𝑞 𝑖 , the following properties hold.       Proof of Lemma A.4. (a). Since ℓ ≥ 1, We have the following lower bound on H ber ( q , ℓ )   « ‹ (b). If 𝜆 ≥ 1, there exists q ′ ∈ [ 0 , 1 ] 𝑛 such that 𝑞 ′ 𝑖 ≤ 𝑞 𝑖 , ∀ 𝑖 ∈ { 1 , 2 , . . . , 𝑛 } and ˝ 𝑛 𝑖 = 1 𝑞 ′ 𝑖 = 1. Using Lemma A.4 (a), we can see that Hber ( q ′ , ℓ ) ≥ 0 . 5. Then H ber ( q , ℓ ) ≥ Hber ( q ′ , ℓ ) ≥ 0 . 5 . (c). As ℓ ≥ 𝜆 , we have H cher ( q , ℓ ) = 𝜆 . Then  We apply Chernoff bound to each tail probability 𝑍 ≥ 𝑖 under the sum. Thus  (d). By Lemma A.4 (c)  Note that inside the last summation, 𝛿 ( 𝑖 ) ≥ 𝛼 and 𝛿 ( 𝑖 ) 2 + 𝛿 ( 𝑖 ) ≥ 𝛼 2 + 𝛼 ≥ 𝛼 3 . Therefore,  As the summation in the right hand side becomes a geometric series, we get  The last inequality holds as 1 -𝑒 -𝑥 ≥ 𝑥 / 2 for 𝑥 ∈ [ 0 , 1 ] . Hence, Lemma A.4 (d) holds. (e). If ℓ ≤ 𝜆 , then H cher ( q , ℓ ) = ℓ . We have  Bidder Selection Problem in Position Auctions WWW'24, May 13-17, 2024, Singapore, Singapore We again apply Chernoff bound for each tail event 𝑍 ≤ 𝑖 under summation and get  (f). By Lemma A.4 (e), we have  The summation in the right hand side is again a geometric series, which allows us to get  Hence Lemma A.4 (f) holds.  Proof. When 𝛼, 𝑥 > 0, the function -𝑥 2 2 𝛼 + 𝑥 is decreasing in 𝑥 . Therefore,  Now we are ready to prove Lemma A.3. Lemma A.3. For all q ∈ [ 0 , 1 ] 𝑛 , ℓ ∈ N + , let 𝜆 = ˝ 𝑛 𝑖 = 1 𝑞 𝑖 , the following properties hold.    Proof of Lemma A.3. (a). As min { 𝑡, ℓ } is a concave function in 𝑡 , the Jensen inequality gives us  which gives the first inequality. To prove the second inequality we consider the following 4 cases: · If 𝜆 ≤ 1, we use Lemma A.4 (a) to get H ber ( q , ℓ ) ≥ 𝜆 GLYPH<16> 1 -1 2 𝜆 GLYPH<17> ≥ 1 2 𝜆 ≥ 1 2 · Hcher ( q , ℓ ) . · If 𝜆 > 1 and min ( 𝜆, ℓ ) ≤ 3 . 5, then Lemma A.4 (b) gives us H ber ( q , ℓ ) ≥ 1 2 ≥ 1 7 · min ( 𝜆, ℓ ) = 1 7 · Hcher ( q , ℓ ) . · If min ( 𝜆, ℓ ) > 3 . 5 and ℓ ≥ 𝜆 , then Lemma A.4 (c) gives us  We apply Claim A.5 for 𝛼 = 𝜆 and get H cher ( q , ℓ ) -Hber ( q , ℓ ) ≤ 0 . 85 𝜆, which implies that H ber ( q , ℓ ) ≥ 0 . 15 · Hcher ( q , ℓ ) for Hcher ( q , ℓ ) = 𝜆 ≤ ℓ . · If min ( 𝜆, ℓ ) > 3 . 5 and 𝜆 ≥ ℓ , then Lemma A.4 (e) gives us H cher ( q , ℓ ) -Hber ( q , ℓ ) ≤ ℓ -1 ˝ 𝑖 = 0 𝑒 -1 2 𝜆 ( 𝜆 -𝑖 ) 2 . Note that 1 2 𝜆 ( 𝜆 -𝑖 ) 2 ≥ 1 2 ℓ ( ℓ -𝑖 ) 2 , when 𝜆 ≥ ℓ ≥ 𝑖 . Thus  By applying Claim A.5 with 𝛼 = ℓ , we get H cher ( q , ℓ ) -Hber ( q , ℓ ) ≤ 0 . 85 ℓ, which implies that H ber ( q , ℓ ) ≥ 0 . 15 · Hcher ( q , ℓ ) , as Hcher ( q , ℓ ) = ℓ ≤ 𝜆 . In all 4 cases, 7H ber ( q , ℓ ) ≥ Hcher ( q , ℓ ) . (b). Let 𝜀 def == 1 √ 𝜆 . We consider three cases to show that H cher ( q , ℓ ) -Hber ( q , ℓ ) ≤ 3 𝜀 · Hcher ( q , ℓ ) , then combine it with the inequality 7H ber ( q , ℓ ) ≥ Hcher ( q , ℓ ) from Lemma A.3 (a) to conclude the proof. Without loss of generality, we may assume that 𝜀 < 1 / 3. · If ℓ ≥ 𝜆 , then Lemma A.4 (d) for 𝛼 = 1 . 8 𝜀 , gives us H cher ( q , ℓ ) -Hber ( q , ℓ ) ≤ 2 . 94 𝜀𝜆 = 2 . 94 𝜀 · Hcher ( q , ℓ ) . □ WWW'24, May 13-17, 2024, Singapore, Singapore Nikolai Gravin, Yixuan Even Xu, and Renfei Zhou · If ℓ ≤ 3 4 𝜆 , then by Lemma A.4 (e) we have  where the first inequality holds because 𝜆 -𝑖 ≥ 𝜆 / 4; the second inequality holds, as H cher ( q , ℓ ) = ℓ and 𝑒 -𝑥 / 𝑐 √ 𝑥 ≤ 𝑒 -1 / 2 √︁ 𝑐 / 2 for all 𝑥, 𝑐 > 0. · If ℓ ∈ GLYPH<16> 3 4 𝜆, 𝜆 GLYPH<17> , by Lemma A.4 (f) for 𝛼 = 1 . 8 𝜀 we have  (c). Let 𝜀 def == 1 √ ℓ . We first prove H cher ( q , ℓ ) -Hber ( q , ℓ ) ≤ 5 𝜀 · Hcher ( q , ℓ ) by considering the following four cases. It implies the second bound when combined with inequality 7H ber ( q , ℓ ) ≥ Hcher ( q , ℓ ) from Lemma A.3 (a). We may assume without loss of generality that 𝜀 < 1 / 5. · If 𝜆 < 1 √ ℓ , then H cher ( q , ℓ ) = 𝜆 and Lemma A.4 (a) gives us  · If 𝜆 ∈ [ 1 √ ℓ , ℓ 3 ) , then H cher ( q , ℓ ) = 𝜆 and by Lemma A.4 (c) we have  where the second inequality holds, as 𝛿 ( 𝑖 ) = 𝑖 -𝜆 𝜆 ≥ 2 for all 𝑖 ≥ ℓ + 1 and 𝜆 < ℓ / 3. Furthermore,  where to get the first inequality we simply use the formula for the sum of geometric progression and estimate 𝑒 -ℓ + 1 -𝜆 2 ≤ 𝑒 -ℓ / 3 ; the second inequality holds, because 𝑒 -𝑥 / 𝑐 ≤ 𝑐 · 𝑒 -1 / 𝑥 for any 𝑥, 𝑐 > 0; the last inequality holds, because H cher ( q , ℓ ) = 𝜆 ≥ 𝜀 = 1 / √ ℓ . · If 𝜆 ∈ [ ℓ 3 , ℓ ] , then H cher ( q , ℓ ) = 𝜆 and by Lemma A.4 (d) for 𝛼 = 4 𝜀 ( 𝛼 < 1, since 𝜀 ≤ 1 / 5) we get H cher ( q , ℓ ) -Hber ( q , ℓ ) ≤ 4 𝜀𝜆 + 6 4 𝜀 𝑒 -16 𝜀 2 · 𝜆 3 ≤ 4 . 77 𝜀𝜆 = 4 . 77 𝜀 · Hcher ( q , ℓ ) , where the second inequality holds, since ℓ ≤ 3 𝜆 and 6 4 𝜀 𝑒 -16 𝜀 2 · 𝜆 3 = 3 𝜀ℓ 2 𝑒 -16 · 𝜆 3 ℓ ≤ 9 𝜀𝜆 2 𝑒 -16 ℓ 9 ℓ ≤ 0 . 77 · 𝜀𝜆 . · If 𝜆 > ℓ , then by considering q ′ with 𝑞 ′ 𝑖 ≤ 𝑞 𝑖 and ˝ 𝑛 𝑖 = 1 𝑞 ′ 𝑖 = ℓ , we get H ber ( q ) ≥ Hber ( q ′ ) and H cher ( q ) = Hcher ( q ′ ) = ℓ . Then according to the previous case, H cher ( q , ℓ ) -Hber ( q , ℓ ) ≤ Hcher ( q ′ , ℓ ) -Hber ( q ′ , ℓ ) ≤ 4 . 77 𝜀 · Hcher ( q ′ , ℓ ) = 4 . 77 𝜀 · Hcher ( q , ℓ ) . These bounds combined with inequality 7H ber ( q , ℓ ) ≥ Hcher ( q , ℓ ) conclude the proof of (c). □",
  "B MISSING PROOFS": "",
  "B.1 Proof of Theorem 4.4": "Theorem 4.4. Algorithm 1 works in polynomial time and is a ( 1 -𝑂 ( 𝜀 )) -approximation, i.e., ( 1 -43 𝑘 -1 / 4 ) -approximation to the fractional BSP for any position auction. Proof of Theorem 4.4. We first show that Algorithm 1 is polynomial. Indeed, step (1) works in polynomial time by Claim 4.3. For each 𝜏 in the support of { 𝐷 𝑖 } 𝑖 ∈[ 𝑛 ] and x 𝑀 we can efficiently calculate H cher (( x 𝑀 , 1 𝑆 fix ) , 𝜏 ) and G pois ( x 𝑀 , 𝜏 ) , which allows us to compute g SW ( x 𝑀 ) in polynomial time. It is easy to see that g SW ( x 𝑀 ) is a concave function in x 𝑀 , as G pois is a non-negative linear combination of constant terms and concave functions H pois ( x 𝑀 , ℓ -𝑗, 𝜏 ) , and H cher is a non-negative linear combination of concave functions H cher ( q ( x , 𝜏 ) , ℓ ) in x . Furthermore, given the representation of g SW ( x 𝑀 ) as an integral of nice algebraic functions H cher and G pois , we can also compute all first and second order derivatives of g SW ( x 𝑀 ) in polynomial time. This allows us to find the optimal solution e x ∗ 𝑀 to (9) in polynomial time using standard concave (first or second order) maximization methods. To get the stated approximation guarantee we first compare the original objective SW ( x 𝑀 , 1 𝑆 fix ) in (4) with g SW ( x 𝑀 ) and get the following Lemma. Lemma B.1. For any x = ( x 𝑀 , 1 𝑆 fix ) with x 𝑀 ∈ [ 0 , 1 ] | 𝑀 | and any weights vector w ,  Bidder Selection Problem in Position Auctions WWW'24, May 13-17, 2024, Singapore, Singapore Proof. We rewrite SW ( x , w ) for x = ( x 𝑀 , 1 𝑆 fix ) in the same form as (8).   We first compare the corresponding adjusted Bernoulli and Poisson terms. Observe that 𝑞 𝑖 ( x , 𝜏 ) ≤ 𝛿 = 𝜀 for each bidder 𝑖 ∈ 𝑀 and threshold 𝜏 > 𝜂 according to condition (b) in Claim 4.3. Thus by Lemma A.2 (a),  Next, we compare Chernoff and Bernoulli objectives (H cher and H ber ) for low range thresholds 𝜏 ≤ 𝜂 . As both H cher ( q , w ) and H ber ( q , w ) are non-negative linear combinations of respective terms for ℓ -unit auctions with ˝ 𝑖 ∈[ 𝑛 ] 𝑞 𝑖 ( 𝑥 𝑖 , 𝜏 ) ≥ ℓ ∗ for 𝜏 ≤ 𝜂 , we get by Lemma A.3 (b) that  Thus after combining the two bounds for high and low ranges of thresholds 𝜏 we get  which concludes the proof of Lemma B.1. □ We proceed the proof of Theorem 4.4 by letting x ∗ be the optimal solution to fractional BSP in (4). Then, we consider x ∗ + ∈ R 𝑛 ≥ 0 defined as x ∗ + def == ( x ∗ 𝑀 , 1 𝑆 fix ) , so that x ∗ + ⪰ x ∗ . By Lemma B.1, for x = x ∗ + , we have  On the other hand, by Lemma B.1 for x = e x ∗ we have  where the second inequality holds, as e x ∗ 𝑀 is the optimal solution to (9) and 𝑘 -𝜀 · 𝑘 𝑘 · x ∗ 𝑀 is a feasible solution; the third inequality holds, as g SW ( x ) is a concave function in x ; the last inequality holds by the last lower bound on g SW ( x ∗ 𝑀 ) . Finally, as ( 1 -𝜀 ) ( 1 -21 𝜀 ) 1 + 21 𝜀 ≥ 1 - ( 1 + 2 · 21 ) · 𝜀 ,  which concludes the proof of the theorem. □",
  "B.2 Proof of Theorem 4.5": "Theorem 4.5. Algorithm 2 works in polynomial time and in expectation is a GLYPH<0> 1 -43 𝑘 -1 / 4 -𝑂 ( 𝑘 -1 / 2 ) GLYPH<1> -approximation to the integral BSP for any position auction. Proof of Theorem 4.5. Recall that the social welfare SW ( 𝑆 ) of a ℓ -unit or position auction is submodular as a function of the invited set of bidders 𝑆 . Claim B.2. The expected social welfare SW ( 𝑆 ) for a set of bidders 𝑆 ⊆ [ 𝑛 ] in any ℓ -unit or position auction is a submodular function of 𝑆 . WWW'24, May 13-17, 2024, Singapore, Singapore Nikolai Gravin, Yixuan Even Xu, and Renfei Zhou Analysis of Algorithm 2. Clearly, z is a feasible solution to the integral BSP. We will prove below that Algorithm 2 has almost the same approximation guarantee as Algorithm 1. Let us denote the optimal social welfare for integral BSP as OPT . Then the best solution x ∗ to the fractional BSP (4) may have only higher welfare SW ( x ∗ , w ) ≥ OPT . Furthermore, since (4) is a multi-linear extension of the integral BSP, we have  Our solution z suffers an additional loss when the sample vector y has more than 𝑘 elements | y | 1 > 𝑘 . On the other hand, for each given y with | y | 1 > 𝑘 we have E z ∼( y 𝑘 ) [ SW ( z , w )] ≥ 𝑘 | y | 1 SW ( y , w ) , due to submodularity of SW ( y , w ) (here we use a standard fact about monotone non-negative submodular function 𝑓 : a uniformly sampled subset 𝑇 ⊂ 𝑆 of given size | 𝑇 | = 𝑘 has E 𝑇 [ 𝑓 ( 𝑇 )] ≥ 𝑘 | 𝑆 | 𝑓 ( 𝑆 ) ). Thus  Furthermore, as OPT = max 𝑆 ⊆[ 𝑛 ] : | 𝑆 | = 𝑘 SW ( 𝑆, w ) we have OPT ≥ E z ∼( y 𝑘 ) [ SW ( z , w )] ≥ 𝑘 | y | 1 SW ( y , w ) for each y with | y | 1 > 𝑘 . Therefore,   Claim B.3. Let x ∈ [ 0 , 1 ] 𝑛 with | x | 1 = 𝑘 . Then ˝ 𝑖 ≥ 1 Pr y ∼ Ber ( x ) [| y | ≥ 𝑘 + 𝑖 ] = 𝑂 GLYPH<0> √ 𝑘 GLYPH<1> . Proof of Claim B.3. By Chernoff bound, we have  We further estimate this integral as  This concludes the proof of Claim B.3. □ Claim B.3 allows us to conclude that Ey ∼ Ber ( x ) [ SW ( y , w ) -SW ( z , w )] = 𝑂 GLYPH<0> 1 √ 𝑘 GLYPH<1> · OPT , i.e.,",
  "C BETTER ALGORITHM FOR SINGLE-ITEM AUCTION": "In Section 4, we studied the Bidder Selection Problem (BSP) for position auctions and obtained a GLYPH<0> 1 -𝑂 ( 𝑘 -1 / 4 ) GLYPH<1> -approximate algorithm. In this section, we study the special case of single-item auction (i.e., ℓ -unit auction with ℓ = 1) as it was extensively studied in previous work, and give a better approximation ratio GLYPH<0> 1 -𝑂 ( √︁ ln 𝑘 / 𝑘 ) GLYPH<1> . Similar to Section 4.1, we fix a small set 𝑆 fix of 𝜀 · 𝑘 bidders, which affects the final approximation by at most ( 1 -𝜀 ) factor due to the submodularity of BSP as a set function of the invited bidders. Formally, recall that for the single-item auction  We find the set of 𝜀 · 𝑘 bidders 𝑆 fix such that Prv ∼ D [∃ 𝑖 ∈ 𝑆 fix : 𝑣 𝑖 ≥ 𝜂 ] ≥ 1 -𝜀 for the largest possible threshold 𝜂 . This allows us to take care of thresholds 𝜏 in a low range 𝜏 ∈ [ 0 , 𝜂 ] by including 𝑆 fix in the solution (i.e., make 𝑥 𝑖 = 1 for all 𝑖 ∈ 𝑆 fix ). Naturally, we want to pick bidders with higher probabilities Pr [ 𝑣 𝑖 > 𝜂 ] into 𝑆 fix , which means that for the high range thresholds 𝜏 > 𝜂 we get the small probability property for each bidder 𝑖 ∉ 𝑆 fix . This allows us to reduce BSP to the case of small probabilities tail events (Appendix A) for 𝜏 > 𝜂 and bidders 𝑖 ∈ [ 𝑛 ] \\ 𝑆 fix , which can be effectively solved by the Poisson approximation. Formally, we can get the following guarantees for 𝑆 fix . Claim C.1 (Small Bidder Set). Let 𝜀 ≥ √︃ ln 𝑘 𝑘 be a multiple of 1 / 𝑘 . We can find in polynomial time a threshold 𝜂 ≥ 0 and a set 𝑆 fix ⊂ [ 𝑛 ] of size | 𝑆 fix | = 𝜀 · 𝑘 , such that  Bidder Selection Problem in Position Auctions WWW'24, May 13-17, 2024, Singapore, Singapore Proof. Recall that all distributions { 𝐷 𝑖 } 𝑖 ∈[ 𝑛 ] have finite support. Thus we can search through all thresholds 𝜏 in polynomial time. There must be two consecutive threshold values 𝜂 and 𝜂 + > 𝜂 such that the number of bidders |{ 𝑖 : Pr [ 𝑣 𝑖 ≥ 𝜂 ] ≥ 𝜀 }| ≥ 𝜀 · 𝑘 with large tail probabilities Pr [ 𝑣 𝑖 ≥ 𝜂 ] ≥ 𝜀 is at least 𝜀 · 𝑘 , but a similar number of bidders |{ 𝑖 : Pr [ 𝑣 𝑖 > 𝜂 ] = Pr [ 𝑣 𝑖 ≥ 𝜂 +] ≥ 𝜀 }| < 𝜀 · 𝑘 for the next threshold value 𝜂 + is strictly less than 𝜀 · 𝑘 . Let us place each bidder 𝑖 with Pr [ 𝑣 𝑖 > 𝜂 ] ≥ 𝜀 into 𝑆 fix and fill the remaining positions in 𝑆 fix up to size 𝜀 · 𝑘 (so that | 𝑆 fix | = 𝜀 · 𝑘 ) with bidders from { 𝑖 : Pr [ 𝑣 𝑖 ≥ 𝜂 ] ≥ 𝜀 > Pr [ 𝑣 𝑖 ≥ 𝜂 +]} . Then, every bidder 𝑖 ∉ 𝑆 fix has Pr [ 𝑣 𝑖 > 𝜂 ] = Pr [ 𝑣 𝑖 ≥ 𝜂 +] < 𝜀 as required by condition (b). On the other hand, | 𝑆 fix | = 𝜀 · 𝑘 and Pr [ 𝑣 𝑖 ≥ 𝜂 ] ≥ 𝜀 for every 𝑖 ∈ 𝑆 fix , i.e., condition (a) is satisfied since  where to get the second inequality, we used the fact that ( 1 -1 𝑥 ) 𝑥 < 𝑒 -1 for any 𝑥 ≥ 1. After selecting such set 𝑆 fix and threshold 𝜂 , we are ready to give the complete description of Algorithm 4.",
  "Algorithm 4: Fractional BSP for Single-Item Auction.": "(1) Find ( 𝜂, 𝑆 fix ) as in Claim C.1. Set 𝑥 𝑖 = 1 for ∀ 𝑖 ∈ 𝑆 fix . (2) For the remaining bidders 𝑀 def == [ 𝑛 ] \\ 𝑆 fix let the Poisson approximation g SW ( x 𝑀 ) be   x ∗ e x = ( 1 𝑆 fix ∗ ∗ 𝑀 e ) e x 𝑀 x 𝑀  In the algorithm, we ignore thresholds 𝜏 ∈ [ 0 , 𝜂 ] , as by taking 𝑆 fix we have already achieved high success probability of at least 1 -1 𝑘 by Claim C.1. For the high range thresholds 𝜏 > 𝜂 , we first observe that as the result of fixing set 𝑆 fix , the probability that there is a bidder with value greater than the threshold 𝜏 becomes  where 𝑟 𝜏 is a constant that we can easily compute. Hence, we respectively adjust the Poisson approximation term e Hpois ( q 𝑀 ) in the algorithm according to (13) (we slightly abuse notations by writing H pois ( q 𝑀 ) instead of H pois ( q ) : for the coordinates 𝑖 ∉ 𝑀 we let 𝑞 𝑖 = 0). Theorem C.2. Algorithm 4 for single-item auction works in polynomial time and is a ( 1 -2 𝜀 ) -approximation, i.e., a GLYPH<0> 1 -𝑂 GLYPH<0>√︁ ln 𝑘 / 𝑘 GLYPH<1> GLYPH<1> -approximation to the fractional BSP. Proof. We first verify that Algorithm 4 is polynomial. Note that the step (1) works in polynomial time by Claim C.1. For each 𝜏 in the support of 𝐷 𝑖 we calculate in polynomial time the constants 𝑟 𝜏 ∈ [ 0 , 1 ] . Both e Hpois ( q 𝑀 ) for each x 𝑀 and 𝜏 in the support and g SW ( x 𝑀 ) for each x 𝑀 can be computed in polynomial time. Moreover, all first and second order partial derivatives of g SW ( x 𝑀 ) can be computed in the same way as the integral of respective derivatives of e Hpois ( x 𝑀 ) . Furthermore, it is easy to see that g SW ( x 𝑀 ) is a concave function in x 𝑀 , since it is a positive linear combination of constant terms (such as ( 1 -1 / 𝑘 ) 𝜂 and 𝑟 𝜏 ) and concave functions H pois ( x 𝑀 ) according to Claim 4.2. Hence, we can find the optimal solution e x ∗ 𝑀 in polynomial time using standard concave (first or second order) maximization methods. To prove an approximation guarantee of 1 -2 𝜀 for Algorithm 4, we first derive the following approximations of SW ( x 𝑀 , 1 𝑆 fix ) by g SW ( x 𝑀 ) similar to (11) (but in a special case of ℓ = 1).  Proof. Recall that by (3) the Social Welfare SW ( x ) for x = ( x 𝑀 , 1 𝑆 fix ) and ℓ = 1 is  For the low range 𝜏 ∈ [ 0 , 𝜂 ] we have H ber ( q ( x , 𝜏 )) ∈ [ 1 -1 𝑘 , 1 ] due to the choice of 𝑆 fix in Claim C.1. It is well approximated by the respective term GLYPH<16> 1 -1 𝑘 GLYPH<17> 𝜂 in (12). , where is the solution to the concave program in : □ (3) Return , WWW'24, May 13-17, 2024, Singapore, Singapore Nikolai Gravin, Yixuan Even Xu, and Renfei Zhou For the high range 𝜏 > 𝜂 , we apply Lemma A.2 (b) with 𝛿 = 𝜀 and get the following bound:  On the other hand, H ber ( q ) -e Hpois ( q ) ≥ 0, as H ber ( q 𝑀 ) ≥ Hpois ( q 𝑀 ) by Lemma A.2 (b). Thus  where the last equality holds since 𝜀 ≥ √︃ ln 𝑘 𝑘 . □ Now we are ready to complete the proof of Theorem C.2. Let x ∗ be the optimal solution to fractional BSP. We consider x ∗ + ∈ R 𝑛 ≥ 0 defined as x ∗ + def == ( x ∗ 𝑀 , 1 𝑆 fix ) , so that x ∗ + ⪰ x ∗ . Then, by Lemma C.3 for x = x ∗ + we have  On the other hand, by Lemma C.3 for x = e x ∗ we have  where the second inequality holds, as e x ∗ 𝑀 is the optimal solution to (14) and 𝑘 -𝜀 · 𝑘 𝑘 · x ∗ 𝑀 is a feasible solution; the third inequality holds, as g SW ( x ) is a concave function in x by Claim 4.2; the last inequality holds, as g SW ( x ∗ 𝑀 ) ≥ ( 1 -𝜀 ) · SW ( x ∗ ) and ( 1 -𝜀 ) 2 ≥ 1 -2 𝜀 . This concludes the proof. □",
  "D ADDITIONAL ASPECTS OF THE NUMERICAL EXPERIMENTS": "",
  "D.1 Comparison between Our Theoretical and Modified Algorithms": "We compare the performance of the theoretical version and the modified version of our algorithm. Due to certain limitations on the convex objectives in Gurobi, we implemented the theoretical version of our algorithm in MATLAB with the help of another convex optimization library, Mosek [1], and ran it on the same set of test inputs as in Section 5. As the implementations are in different programming languages, we do not compare their running time and only compare their approximation efficiency. As shown in Table 2, we can see that the theoretical version of our algorithm performs slightly worse than the modified version. This is due to the potentially suboptimal decision of fixing a small bidder set 𝑆 fix . This step is helpful when we analyze our algorithm theoretically, but it may not be optimal in practice. Therefore, we choose to use the modified version of our algorithm in Section 5.",
  "D.2 Notes on the Discretization": "Recall that in Section 5, we discretized each generated distribution to a common, finite support { 0 } ∪ { 1 + 𝑖 50 | 𝑖 = 0 , 1 , . . . , 49 } by moving probability mass on each discretized interval inside [ 0 , 2 ] to its left point and by redistributing the mass on ( 2 , +∞) to the discrete points, proportional to their respective probabilities. We picked this unusual discretization to make instances more challenging for Greedy, as without it Greedy and other heuristics like our algorithm produce solutions with nearly optimal approximation efficiency (over 99% for both algorithms). Indeed, two distributions in Table 2: Experimental results of Local Search, Greedy, and both the modified version and the theoretical version of our algorithm. For each algorithm, we show the average relative quality of the produced solution to that of the best-performing algorithm that terminated in 1 week. Error bars denote the standard deviation. Bidder Selection Problem in Position Auctions WWW'24, May 13-17, 2024, Singapore, Singapore a well-structured family of log-normal distributions are likely to have strong dominance relation: a distribution 𝐷 1 = Lognormal ( 𝜇 1 , 𝜎 2 1 ) is always preferable to 𝐷 2 = Lognormal ( 𝜇 2 , 𝜎 2 2 ) , whenever 𝜇 1 ≥ 𝜇 2 and 𝜎 1 ≥ 𝜎 2 . Our choice of discretization was solely based on the comparison between Greedy and Local Search, i.e., after a few empirical trials of different discretizations we simply stopped once the average efficiency of Greedy was less than 99% that of the Local Search.",
  "keywords_parsed": [
    "Bidder Selection",
    " Submodular Maximization",
    " Position Auctions"
  ]
}