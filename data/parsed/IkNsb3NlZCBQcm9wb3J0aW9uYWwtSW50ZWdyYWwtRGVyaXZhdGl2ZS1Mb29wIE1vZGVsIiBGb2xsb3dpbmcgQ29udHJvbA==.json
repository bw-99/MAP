{"title": "\"Closed Proportional-Integral-Derivative-Loop Model\" Following Control", "authors": "Oluwasegun A Somefun; Kayode F Akingbade; Folasade M Dahunsi; K F Akingabde", "pub_date": "2020-06-10", "abstract": "The proportional-integral-derivative (PID) control law is often overlooked as a computational imitation of the critic control in human decision. This paper provides a formulation to remedy this problem. Further, based on the characteristic settling-behaviour of dynamical systems, the \"closed PID-loop model\" following control (CPLMFC) method is introduced for automatic PID design. Also, a method for closed-loop settlingtime identification is provided. The CPLMFC algorithm and some recommended guidelines are given for setting the critic weights of the PID. Finally, two representative case-studies are simulated. Both the theoretical results and simulation results (via performance indices) illustrate that the CPLMFC can guarantee both accurate and stable closed-loop adaptive PID control performance in real-time.", "sections": [{"heading": "I. INTRODUCTION", "text": "The need for guaranteed stable and accurate closed-loop performance, especially in motor-control tasks becomes much more evident in times of a threatening pandemic like COVID-19. For instance, a lot of dynamical systems such as the same models of mobile robots, manipulators, and aerial robots, need to be deployed to repetitively do the same tasks. There needs to be a guarantee that they will exhibit the same desired motor response. In this case, a well-designed feedback controller then becomes a real money-savings and life-savings investment against increased risk and spread of infections [1]. In practise, a lot of these automation tasks still fundamentally rely on a form of Proportional-Integral-Derivative (PID) control. PID control is a common, yet powerful representation of the universal feedback control law [2], [3]. Research on PID control design has therefore attracted widespread theoretical and practical interest [4]- [6]. However, the best control design approach to tuning a closed PID-loop in order to achieve its best performance in terms of stability and accuracy remains an open question [7]. Closed-loop performance in terms of accuracy and stability are therefore critical to the performance of a whole dynamical system setup [8], [9]. Accordingly, this paper introduces the \"Closed PID-Loop Model\" Following Control (CPLMFC) method for real-time adaptive computer control of stabilizable dynamical (physical) systems.\nConsequently, we argue, in this paper, that by its structure, the PID law implicitly has an ideal (model) closed-loop response that it tries to reference. Therefore, the PID can in realtime automatically tune itself using this reference model called the closed-PID loop model (CPLM). This model is implicit and is a model case of dominant eigenvalue assignment of complex-conjugate poles. We show that the key to designing this model is its natural-frequency. We make a connection between this frequency parameter and the identified closedloop settling-time. This is the closed-loop settling-time of the dynamical system under control inside a closed PID-loop. This settling-time identification is significant, because with a roughly accurate estimation, the dominant eigenvalues of the closed PID-loop system can be assigned to stably and accurately follow the CPLM.\nSpecifically, for practical physical systems with finite settling behaviour (FSB), an implication of this is that manufacturers can indicate the average estimated input-output settlingtime in data-sheets to further streamline PID control for endusers.\nSignificantly, the CPLMFC method does not use the knowledge of a representative model of the dynamical system. Also it does not explicitly minimize an objective (cost) function. This contrasts with mainstream control methods, that have been applied to automatic PID control design, such as the general model predictive control (MPC) [10], H-infinity [11], and quantitative feedback theory (QFT) [12], [13] methods.\nOn the whole, we show that: the CPLMFC method implicitly minimizes the perfect model following objective function of the CPLM. The CPLM is the ideal closed-PID loop response from the viewpoint of the PID control law. Therefore, emphasized next are the main contributions made in this paper.", "publication_ref": ["b0", "b1", "b2", "b3", "b5", "b6", "b7", "b8", "b9", "b10", "b11", "b12"], "figure_ref": [], "table_ref": []}, {"heading": "A. Main Contributions", "text": "To set this work in proper context, first a background of related literature is discussed in section II. In section III, we start by formulating the PID control problem. Given a PID law that predicts a bounded input value, the central problem is how to design the three PID parameters, so that the moving single output of a dynamic system in the closed PID-loop approaches the bounded desired value.\n1) Critic PID: An important aspect of intelligent decision or prediction is criticism [14], [15]. In section III-A, we consider the idea of the PID as a criticism-based two degreeof-freedom (2DOF) structure for the first-time in literature.\nA compact representation is also proved in section III-B. The PID formulation with critic weights imitates the basic critic functionality in the human approach to decision-making or learning. The introduced three critic weights are manual or automatic basis for criticising the three core PID control functions (that is the proportional, integral and derivative output terms).\n2) Closed PID-Loop Model Following Control: In section IV, we continue by considering a solution to the formulated problem from the view-point of model following (MF) and its connection to settling behaviour (SB). Note that the theoretical SB of physical systems may be classified as either finite (FSB) or infinite (ISB) [16]. Obviously, the idea of designing a control system to follow (or mimic) the output of a desired model (termed the reference model) is not new in control theory [17]. For example, modern model reference adaptive control concepts are special cases.\nMF through a reference model is attractive because it sidesteps the difficulty of matching design specifications to controller parameters. A central notion in MF is perfect model following (PMF). It is a condition that if achieved, defines whether the physical system can follow the reference model exactly. However, due to physical limitations and allowable complexity of dynamic compensation, it is not always clear how this appropriate reference model should be chosen to satisfy the PMF [18].\nWe argue that, if a closed-PID loop control system is stabilizable, this implies that the PID control law implicitly has a reference model that it follows. We start with some assumptions in section IV-A. In section IV-B, we then proceed to analyze the generic closed PID-loop transfer function. The main result is the identification of the nominal \"closed PID-loop model\" (CPLM) based on the loop-gain condition. The loop gain condition states that provided the loop-gain magnitude value of the closed-PID loop system can dominate one (1), the closed-loop system can be approximated as the nominal \"closed PID-loop model\". We interpret this as the PID's idealized behavioural response of a closed PID-loop system.\nThen, we continue, by showing that the PID is driven by this CPLM view to stabilize the closed loop system. Again, note that the nominal CPLM is independent of both the order and model parameters of its corresponding dynamical system (with model parameters assumed unknown under control). The PID (with one derivative term) attempts to have control over two desired pole locations and at most two desired zero locations in the s-plane. Hence, it tries to approximate the closed PIDloop system to a second-order dominant dynamic system. The implication of this is that, the problem is implicitly reduced to a case of dominant eigenvalue assignment through the natural frequency, and damping of the nominal CPLM. Therefore, it is shown in section IV-C that the CPLM automatically gives settings for both the integral and derivative time constants to minimize the MF error for stability.\nIn section IV-D, we continue by analyzing the normalized settling-behaviour of the nominal CPLM. The main results together with that in section IV-E show that provided the dynamical system has a FSB, then settling-time can be used as a design parameter to set the natural frequency of the CPLM. In finite time, we want to stabilize the moving output of the physical system before it disintegrates. These factors motivate design of the closed-loop settling-time identification process discussed in section IV-F.\nFurther, in section IV-G, we show using a state-space design methodology that the MF problem then reduces to that of finding a stabilizing proportional gain that minimises the MF error. We show the conditions under which PMF is possible. Then, we show that this optimal stabilizing proportional gain set can be asymptotically approached by an adaptive proportional gain update rule. However in cases, such as when delays become significant, the initial adaptive solution does not necessarily achieve PMF. The process of deriving settings for control parameters by correlating with representative processes is not new in controls. Since, a proportional gain in the stabilizing set may not be asymptotically reached with the initial adaptive solution, the study of a normalized first-order plus dead-time system approximation is used to show how the proportional gain set can be quickly reached. We use this approach to derive a rational function. This curve-fitted function is used as the bounding limit for a newly constructed nonlinear adaptive function that supports the initial adaptive proportional gain solution.\nFurthermore, the CPLMFC algorithm in compact form for computer control is presented in section IV-H. Also, we include some recommended guidelines based on simulations for manually setting the critic weights for PID control.\nThe results in this paper provide a method for automatic robust PID design in the model following sense based on the characteristic settling behaviour of stabilizable dynamical systems. We have appropriately termed this the \"Closed PID-Loop Model\" Following Control (CPLMFC) method. The main idea is that if we can appropriately identify a stabilizable proportional gain for the closed PID-loop model (CPLM), and appropriate critic weights, then both stable and accurate settling behaviour can be guaranteed for the actual closed PIDloop system.\n3) Applications: In section V, we show that with critic PID control, the CPLMFC method can in real-time guarantee stable and accurate adaptive control computations of the three main PID parameters. We carry out numerical control simulations (via MATLAB) on two representative cases. For the first case: a delay-free, stable system, the benchmark example of a normalized third-order linear dynamical system is used. For the second case: a time-delayed integrating, non-linear and uncertain system in form of a real-life permanent-magnet linear motor model is used. Illustratively, through common performance indices: closed-loop maximum overshoot, settling-time (1%) and integral error indices; we show that both accurate and stable closed-loop performance can be achieved using the CPLMFC method in such representative cases.\nFinally, some discussions in section VI, and then this paper is concluded in section VII.", "publication_ref": ["b13", "b14", "b15", "b16", "b17"], "figure_ref": [], "table_ref": []}, {"heading": "II. RELATED WORKS", "text": "In comparison with other formal control algorithms, the PID control law has been specially regarded as ubiquitous [19]. A recurring motivation for this is because, although an apparently simple control strategy, PID control has in application to many practical problems, consistently provided simple, least-cost, and satisfactory robust control performance [20]- [23].\nIn terms of representation, a straightforward and more general computational model of the PID control algorithm has a 2DOF control structure [24]- [27]. This is the integer-valued number of closed-loop transfer functions that are present in the controller's structure and can be adjusted independently [28]. An implicit model following is achieved in some sense using this form [27].\nOn the other hand, the design problem (tuning) of the optimum set of PID parameters have been categorized as an NP-hard problem in terms of complexity [29]. This implies there is no unique solution. It also means that tuning for guaranteed accurate and stable control performance can be burdensome even for very common servomechanism applications [30]- [32]. Consequently, in [5], two important problems were highlighted: One, the place of the PID algorithm as an active research in adaptive control. A concise review on adaptive control systems can be found in [33]. Two, the need for automatic PID tuning algorithms instead of simple rules.\nIt is known that mainstream PID control design methods available in the control literature, are highly dependent on the knowledge of derived or fitted mathematical model approximations (plant models) of the actual physical system [34]- [37]. The parameters of these plant models are then explicitly used as design constants to set the PID parameters [8], [22], [38], [39]. Also, corresponding adaptive designs, achieve parameter estimations using the derived plant model parameters [40], [41]. From a dynamical systems perspective, this modeling approach is useful and more so, reasonable in some sense [19], [42]- [45]. Notwithstanding, these models are imperfect representations of the physical systems, which although may operate in a linear sense, are actually both nonlinear and uncertain. Therefore, these approaches may not fully exploit the best quality of control accuracy using the PID. According to a ASEA Brown Boveri (ABB) survey in [46], after sometime these tuning methods, which are commercially available become unreliable.\nDeviating from model-based conventions are model-free and essentially data-driven control design methods. Among them, one popular technique is Relay Auto-tuning [5]. Relay Autotuning, uses modified Ziegler-Nichols (Z-N) tuning rules to automate the frequency response identification of a dynamical system. It relies on describing nonlinear function analysis, and so frequency limit cycles are common. The accuracy of its identified critical frequency point of oscillation is still a subject of active research [47], [48]. Also, notable in the model-free category, are design methods which explicitly minimize a cost function for real-time optimization, such as the unfalsified method, iterative feedback tuning (IFT) [49], iterative learning control (ILC) [50], and extremum-seeking method summarized in [32]. For the IFT, multiple closed loop experiments have to be carried out. The ILC approach leverages repitition. To generally achieve perfect tracking performance, it requires physical systems to satisfy an identical initialization condition, which is a restrictive condition [51]. Further, approaches that exploit the theory of fuzzy logic, neural network, and reinforcement learning for PID design exist [52], [53]. Fuzzylogic PID control techniques fuzzify the system error states. It is afflicted by time-consuming rule parameter optimization problems [43].\nAlso, there are methods that mix both model-based and mode-free paradigms for PID control design. Proposed in [41], and originating from fuzzy control study is a less known but promising mixed approach. The central argument in this approach is to simplify modeling by considering the physical meaningful performance specification of desired settling-time based on operator knowledge and system operating behaviour for tuning PIDs. Generally, in this mixed class, most approaches use either or both ideas of model following and adaptive control. Examples are direct (or indirect) model reference adaptive methods [33] and existing self-tuning methods [54], [55]. Most of these methods usually suffer from poor transient performance or (and) involve some complexity of online parameter estimations.\nMany recent works on PID control such as in [56]- [59] have employed metaheuristic (evolutionary) optimization algorithms as new PID tuning methods. These methods consider different objective functions and performance constraints such as stability, bandwidth, and robustness. They usually still often require the identification of a plant model for the physical system. At the basic level, they can be viewed as stochastic search methods. Although promising, they have not found scalable use in the industry, since any serious uncertainty in the parameters of the system can lead to instability, and, in some cases, the converged solutions are less than optimal [40], [60].\nDominant eigenvalue assignment, crudely known as poleplacement, is a class of general PID control design methods in the control theory literature, treated in works such as [11], [61]- [63]. Note that, this approach is attractive since performance specifications such as stability and dynamic performance directly correlate to the assignment and distribution of dominant closed-loop eigenvalues (poles).\nAs highlighted in [7], [30], [64], current understanding and rationale for the remarkable practical effectiveness and capability of PID control is still limited. Therefore further research needs to focus on dynamical systems as nonlinear and uncertain. As such, new unconventional approaches that automate tuning and streamline the model-free system identification approach for tuning in PID control would be of great advantage to control theory and practise, improve the PID's widespread adoption and contribute to better product quality [41], [64]. ", "publication_ref": ["b18", "b19", "b22", "b23", "b26", "b27", "b26", "b28", "b29", "b31", "b4", "b32", "b33", "b36", "b7", "b21", "b37", "b38", "b39", "b40", "b18", "b41", "b44", "b45", "b4", "b46", "b47", "b48", "b49", "b31", "b50", "b51", "b52", "b42", "b40", "b32", "b53", "b54", "b55", "b58", "b39", "b59", "b10", "b60", "b62", "b6", "b29", "b63", "b40", "b63"], "figure_ref": [], "table_ref": []}, {"heading": "PID(\u2022)", "text": "P (s)", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "III. PROBLEM FORMULATION", "text": "In this section, the control problem is formulated and a simple critic PID computational model is introduced.\nLet us consider a single-input single-ouput (SISO) dynamical system with assumed unknown dynamical model parameters, which can be written in reduced form as (1).\n\u1e8bp = f (x p , u) = A p x p + B p u y = y p = C p x p(1)\nwhere A p = A + \u03a6. The vector x p \u2208 R nx \u00d7 1 represents n x states of the system, u \u2208 R 1 is the bounded and single control input to the system, y \u2208 R 1 is the bounded and single output state of the system, A p \u2208 R nx \u00d7 nx is the unknown and uncertain stabilizable system state matrix,\nB p \u2208 R nx \u00d7 1 is its unknown control input matrix, C p \u2208 R 1 \u00d7 nx is its unknown output matrix and \u03a6 \u2208 R nx \u00d7 1\nis the unknown uncertainty (noise, and disturbance) vector affecting the system matrix A. Assume that this system can be represented as an inputoutput transfer function with unknown structure denoted as P (s), where\nP (s) = N p (s) D p (s) = n i=0 b i s n-i n i=0 a i s n-i(2)\nFig. 1 shows a high-level diagram of this system connected in closed-loop to a PID controller (in software).", "publication_ref": ["b0"], "figure_ref": ["fig_0"], "table_ref": []}, {"heading": "A. Critic PID Control Form", "text": "The control aim is to force the moving measured output y of a dynamical system P (s) to reach a desired and reachable output reference r (setpoint). To do this, we need a computational algorithm that functions as a predictor of the control input u to P (s), that will asymptotically move y close to r in magnitude. Let us consider a simple critic computational form for the PID, which is defined in (3). (Note, the bracketed complex laplace operator notation s will sometimes be removed from transfer functions and signals for simplicity.)\nu = f (r, y) = \u03bb p u p + \u03bb i u i + \u03bb d u d(3)\nwhere\nu p = K p e 1 , u i = K i e 2 , u d = K d e 3 (4) e 1 = b r -y \u2261 b r (s) -y (s)(5)\ne 2 = \u03c4 0 (r -y) dt = \u03c4 0 e dt \u2261 e (s) s(6)\ne 3 = c \u1e59 -\u1e8f \u2261 s [c r (s) -y (s)](7)\nThe introduced terms \u03bb p , \u03bb i , \u03bb d \u2208 R + are termed the \"critic\" weights for each of the three PID contributing terms (or kernels) u p , u i , u d \u2208 R which are also related to the error terms e 1 , e 2 , e 3 \u2208 R respectively.\nwhere that its three contributing terms equally dominate the output decision of the PID function, that is \u03bb p , \u03bb i , \u03bb d \u2248 1. As noted in [65], these are simplistic formulations of the natural error-based feedback control principle. Next, for the purpose of analysis, a compact system representation for the PID controller will be shown.\nK p \u2208 R is the proportional gain, K i \u2208 R is the integral gain, K d \u2208 R is the derivative gain, e \u2208 R", "publication_ref": ["b2", "b64"], "figure_ref": [], "table_ref": []}, {"heading": "B. Compact 2-DOF PID Representation", "text": "Theorem 1. The two degree-of-freedom PID control law can be compactly represented as\nu = B r + A e -D y (8\n)\nwhere B is the feedforward partition, A is the integral errorfeedback partition, and D is the output-feedback partition of the PID control law.\nProof. Without any loss of generality, assume that \u03bb p , \u03bb i , \u03bb d = 1. Expanding (3), then the expression ( 9) is obtained. After further rearrangements, the result is the compact PID expression given by (13). Observe that the signal u has a distinct path to r and y as illustrated in the block diagram Fig. 2.\nu = T r r -T y y(9)\nwhere\nT r = K p b + K i s + K d sc(10)\nT y = K p + K i s + K d s (11) u = (K p b + K d sc) r + K i s e -(K p + K d s) y (12) u = B (s) r (s) + A (s) e (s) -D (s) y (s) (13) u = B r + A e -D y\nThe proof ends here. The PID control system design problem is then to use (8) to appropriately regulate the moving output of the assumed unknown and uncertain dynamical system P (s). This means forcing the dynamical system's output to closely follow and approach a desired and reachable output (set-point). In the next section, we will introduce the \"Closed PID-Loop Model\" Following Control (CPLMFC) design method and show that the PID's three main control parameters K p , K i , K d can be designed such that the output y automatically follows and converges to the desired output r.", "publication_ref": ["b12", "b7"], "figure_ref": ["fig_1"], "table_ref": []}, {"heading": "IV. CPLMFC DESIGN METHOD", "text": "In this section, we show the main results for the CPLMFC, a method to automatically configure the main PID parameters. To start, first, we explicitly state some assumptions.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "A. Assumptions", "text": "As regards the open-loop dynamic system P (s), we make the following assumptions that are true for most known stabilizable dynamical systems in practise.\nAssumption 1. Although all physical systems are nonlinear, P (s) is designed to operate in a linear or an approximately linear input-output range.\nAssumption 2. P (s) satisfies the bounded-input boundedoutput (BIBO) definition of stability, which states that: a system is stable if every bounded input produces a bounded output.\nAssumption 3. If the dynamics of P (s) is BIBO stable, according to Assumption 2, then the unknown characteristic equation of P (s) is Hurwitz (all its eigenvalues lie in the open left-half of the complex s-plane).", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "B. Closed PID-Loop Analysis", "text": "To achieve the PID design goal, we start by obtaining the transfer function T (s) of the overall closed loop system illustrated in Fig. 2. Simplifying by block reduction, we have,\nC = P (s) 1 + D P (s)(14)\nAgain, by further block reduction operations using (14), and then a signal-flow analysis using the Mason's Gain Formula (15), where G (s), H (s), and G (s) H (s) respectively represent the overall forward path gain, the overall feedback path gain, and the loop gain or transfer function of the PID loop in Fig. 2. Finally, the closed PID-loop transfer function expression ( 16) is obtained.\nT (s) = y (s) r (s) = G (s) 1 + G (s) H (s) = N i=1 P i \u2206 i \u2206(15)\nIn this case, the number of forward paths from the input to output N = 2. The i-th forward path gains P i are: P 1 = AC and P 2 = BC, with a loop gain, L 1 = -AC. Therefore, the signal flow determinant \u2206 = 1 -L 1 = 1 + AC; its co-factors (non-touching loops) along the i th forward path are:\n\u2206 1 = 1 and \u2206 2 = 1. T = C (A + B) 1 + AC = (A + B) P 1 + (D + A) P(16)\nThe analysis of the generic closed PID-loop transfer function (16) progresses to a proposition of Theorem 2, the unity dominating loop-gain magnitude condition theorem.\nTheorem 2. The closed PID-loop system ( 16) can be approximated by the nominal \"closed PID-loop model\" (CPLM) (18), provided the unity dominating loop-gain magnitude condition ( 17) is satisfied.\n| (A + D) N p D p | 1(17)\nT m = A + B D + A(18)\nProof. To prove Theorem 2, we start by referring to the assumptions given in section IV-A which restricts the closed PID-loop characteristic equation 1 + (D + A) P (s) given by the denominator of ( 16). Also, recall that P = Np Dp . Therefore, given that the Assumptions 1-3 are satisfied, as s \u2192 0, if the loop gain magnitude\n| (A+D) Np Dp\n| of the closed PID-loop system becomes far greater than the value of one, then it is straightforward to see that\nlim s\u21920 T = (A + B) N p D p + (A + D) N p \u2248 A + B D + A(19)\nThis completes the proof.\nRemark 1. Note that, when the magnitude of the loop gain is very much larger than unity under all conditions of interest. Then, the closed PID-loop output response is dominated by the PID parameters, hence can be regulated. This is similar in some sense, with H.S. Black's idea [36], [66], [67] of the negative feedback amplifier system. For the closed PID-loop system ( 16), the approximated transfer function ( 18) is interpreted as the nominal \"closed PID-loop model\". Consequently, this suggests an inherent implicit model following by the closed PID-loop system. Also, a further analysis of (18), the nominal \"closed PIDloop model\" approximation of ( 16), shows that the control problem indirectly reduces the closed PID-loop system to follow the response of a second-order dominant closed-loop system. Accordingly, the design of (18) can be viewed as a dominant eigenvalue assignment problem. This can be posed as Theorem 3.\nTheorem 3. For the PID (with one derivative) control law, the closed PID-loop stabilizing objective implicitly defined by the \"closed PID-loop model\" can be approximately reduced to the dominant eigenvalue assignment of two complex poles on the left-hand side of the complex s-plane.\nProof. From (18), T (s) can be approximated to (20). Also, the form of ( 20) is equivalent to (21).\nlim s\u21920 T \u2192 T m = A + B D + A = cs 2 + b Kp K d s + Ki K d s 2 + Kp K d s + Ki K d (20) y r \u2248 y m r \u2261 cs 2 + b2\u03b6\u03c9 n s + \u03c9 2 n s 2 + 2\u03b6\u03c9 n s + \u03c9 2 n (21\n)\nwhere \u03c9 n is the natural frequency, \u03b6 is the damping factor and y m is the desired model output response designed to be followed with respect to r, by the actual closed PID-loop system output y. For an explicit model-following, the model output can be synthesized, without any loss of generality by setting both b and c to zero in the realization of (20).\nSince at steady state, we assume T (s) is approximated by T m (s). If we fix the damping design parameter \u03b6 = 1 \u221a 2 for a near optimal and robust output response of the uncertain dynamical system P (s) [68], [69]. Then the dominant actual closed PID-loop eigenvalues of D p + (A + D) N p will approximately converge to the nominal CPLM eigenvalues (23).\ns 1,2 = -\u03b6\u03c9 n \u00b1 j\u03c9 n 1 -\u03b6 2(22)\nThen:\ns 1,2 \u2248 - \u221a 2 2 \u03c9 n (1 \u00b1 j)(23)\nThis completes the proof.\nIn the next section, we will use the CPLM design parameters, namely \u03b6, \u03c9 n to set a stabilizing K d and K i value of the PID controller.", "publication_ref": ["b13", "b14", "b15", "b17", "b35", "b65", "b66", "b19", "b20", "b19", "b67", "b68", "b22"], "figure_ref": ["fig_1", "fig_1"], "table_ref": []}, {"heading": "C. Setting the Integral and Derivative Gains", "text": "The main result for setting the integral and derivative gains is posed as Theorem 4\nTheorem 4. The dominant eigenvalues of a closed PID-loop system can be approximated to the dominant eigenvalues of the CPLM, by setting both the integral and derivative time constants as ( 25) and ( 24) respectively.\nT i = 2\u03b6 \u03c9 n = \u221a 2 \u03c9 n(24)\nT d = 1 2\u03b6\u03c9 n = 1 \u221a 2\u03c9 n(25)\nProof. We start by assuming Theorem 2 is satisfied. This implies Theorem 3 is true. Comparing (20) with (21), it can easily be deduced that the results are (26) and (27) for the respective derivative and integral gain parameters of the PID.\nK d = f d (K p , \u03c9 n , \u03b6) = K p T d(26)\nK i = f i (K p , \u03c9 n , \u03b6) = K p 1 T i(27)\nThe PID parameters (25) and ( 24) are set using the natural frequency and damping factor, which is connected to the eigenvalue assignment and therefore stability of the nominal CPLM. Also the settings can be viewed as implicitly minimizing a quadratic cost function [70]. This completes the proof.\nIn the next two sub-sections, the question of how to design the \u03c9 n parameter of the CPLM will be addressed.", "publication_ref": ["b19", "b20", "b25", "b26", "b24", "b69"], "figure_ref": [], "table_ref": []}, {"heading": "D. CPLM: Normalized Response", "text": "In the previous section, the expressions (24) and (25) depends on \u03c9 n . To design \u03c9 n , we start by analyzing the finite settling behaviour of the normalized nominal CPLM response (\u03c9 n = 1) given by ( 21) for a constant or slowly varying unitstep input r(s) = 1 s . In observable canonical state-space form (28), the CPLM response T m (s) can be re-expressed as (29). where,\n\u1e8bm = A m x m + B m r y m = C m x m + D m r x m = x m1 x m2 , \u1e8bm = \u1e8bm1 \u1e8bm2(28)\nA m = 0 -\u03c9 2 n 1 -2\u03b6\u03c9 n B m = \u03c9 2 n (1 -c) 2\u03b6\u03c9 n (b -c)(29)\nC m = 0 1 D m = [c] y m (t) = 1 + e -\u03b6\u03c9nt (c -1) cos (\u03c9 d t) + (2b -c -1) \u03b6 \u03c9n \u03c9 d sin (\u03c9 d t)(30)\nIt is obvious that the CPLM response is affected by the choice of parameters b and c. Changing the values of b and c will lead to variations in the normalized peak times and settling times of the CPLM. From, the analytic output response (30), let the normalized time be\nx = \u03b6\u03c9 n t(31)\nAssume the normalized CPLM settling-time occurs at x = x s and its corresponding peak-time at x = x pk . The simulated model response T m (s) is illustrated for two common forms: industrial form (b = 0, c = 0) in Fig. 3 and a general form (b = 1, c = 0) in Fig. 4 respectively. The average of the first undershoot area of the normalized CPLM output response y m is considered to obtain x s . For x pk , the first point at which the time-derivative \u1e8fm = 0 is considered. The resulting normalized values for x pk and x s for standard finite values in the set b and c are shown in Table I. The FSB of the nominal CPLM is quantified by its normalized settling-time x s . With the aid of Table I, two approaches can be used in algorithm form to automatically compute the appropriate x s and x pk with respect to the scalar weights b and c respectively. One, is to use a finite state machine (FSM) such as if-then rules or switch-case rules to encode the varying normalized values x s or x pk . This approach is of low complexity and will work well for constrained processors. When processing requirements is not a concern, another approach is to use a fuzzy inference system (FIS) of fuzzy basis functions (FBF) [53] as is defined in Appendix A to encode the knowledge of varying values of x s and x pk with respect to changing b and c. This FIS design choice is outlined in Table IV, and the input-output nonlinear mapping surface of the FIS is shown in Fig. 13.\nNext, we will show with respect to expression (31), how the normalized CPLM settling-time can be used to design the CPLM's \u03c9 n .", "publication_ref": ["b23", "b24", "b28", "b29", "b52", "b30"], "figure_ref": ["fig_13"], "table_ref": []}, {"heading": "E. CPLM: Natural Frequency Setting", "text": "It is straightforward to see from the normalized-time relationship (31) that the CPLM's natural frequency can be designed by a rearrangement of variables. Changing x = x s , we have:\n\u03c9 n = f \u03c9n (\u03b6, x s , t s ) = x s \u03b6t s(32)\nwhere the CPLM natural frequency \u03c9 n is matched to the dynamical system P (s) by fixing t as an identified closedloop settling time t = t s of the physical system P (s). This agrees with Assumption 2. Also, since for every bounded input applied to P (s), the resulting output does not instantly settle to a steady value (due to the concept of inherent input energy dissipation [71]). Therefore, through a quantifiable choice of the dynamical system's identified settling-time when in closedloop, there is a natural FSB connection between the CPLM and the dynamical system. Next, we show how to identify this closed-loop settling-time.", "publication_ref": ["b70"], "figure_ref": [], "table_ref": []}, {"heading": "F. CPLM: Settling-Time Identification", "text": "In the previous sub-sections, it was shown that in order to achieve closed-loop stability, the design of \u03c9 n is system specific. The connection to settling-time was used to design the natural frequency of the CPLM. In this section, a procedure to identify this closed-loop settling-time of the system P (s) is discussed.\nWe want to quantify the FSB of P (s) that will be controlled in a closed PID-loop. To do this, identification of the closedloop transient response is one appealing approach. It is known that a lot of engineering has gone into building physical systems that operate in an approximately linear range with a maximum input u max and output y max . Therefore, the uncontrolled operation of such a system will be BIBO stable. To probe its FSB, this motivates the use of the inverse steadystate constant k -1 ss of the system to safely excite the system. An illustration for this identification is shown in Figure 5.\nk -1 ss = u max y max ; u = k -1 ss e -k s \u1e8f(33)\nThe closed-loop settling-time identification process is described by the following steps: 1) Select an appropriate sampling time \u03c4 .\n2) Connect the closed-loop as defined by (33) and shown in Figure 5 with a output-derivative state estimator. 3) Set the state estimator's logic as k s = 0 4) At initial time sequence, n = 0, define the measured output as y(0) = k y max 5) Set the input error as e(n) = k y max -y(n), where 0.5 \u2264 k \u2264 1. 6) Start the test and observe (and log) the output response y(n). 7) Stop the identification test when an average steady state is reached (that is, when the difference in successive output samples consistently remains around a fixed point). 8) If oscillatory, set k s = 1. Restart from Step 6. 9) Else, use the logged output data to estimate the n-th sample N \u03c4 l at which the system starts to respond from rest, and the n-th sample N ts at which the system settles to an average stable value. The FSB of P (s) can be quantified using N ts , which is the system's nominal settling horizon in closed-loop. The identified settling-time can now be computed using,\nt s = T (N ts -N \u03c4 l ) (34) \u03c4 l = T N \u03c4 l + \u03c4 c + \u03c4 y (35\n)\nwhere N ts is the average number of sampled sequences it takes for the y of a dynamical system P (s) to settle to a steady value, while in a closed-loop. Also, N \u03c4 l is the delay horizon, the number of sampled sequences at which y does not respond to the input u. Then the total delay-time, \u03c4 l is computed as (35). For an ideal sampled-data closed-loop system, without processing delays, \u03c4 c and \u03c4 y can be negligible. The delaytime \u03c4 c can be obtained by timing the start to end of the PID computation. Also, the delay-time \u03c4 y can be obtained by timing the end of the PID computation to the start of the next closed-loop sampled sequence. The settling-time identification is important, as it determines the natural frequency of the CPLM, hence the closed PIDloop response stability of P (s). To ensure the closed PIDloop response accuracy, the perfect model following error of the CPLM needs to be minimised for the closed PID-loop, while still maintaining stability. In the next section, a way to design the proportional gain K p to attempt to achieve this for the assumed unknown P (s) is shown.", "publication_ref": ["b32", "b34"], "figure_ref": ["fig_3", "fig_3"], "table_ref": []}, {"heading": "G. CPLM: Adaptive Proportional Gain Settings", "text": "In this section, the goal is to determine a proportional gain K p in the unknown stabilizing and optimal set K of proportional gains K p . This is central to achieving a PMF of the CPLM. Note that, since P (s) is assumed unknown and uncertain, this approach can only be an approximate method. It will be shown that a K p \u2208 K can be asymptotically approached by an adaptive manner, and therefore minimize the PMF error. Recall, the state-space equation for the system P (s) is defined in (1). The desired model (implicit by default) is the CPLM. It's state-space equation is defined by (29). The main results are presented by the following Theorems.\nTheorem 5. The sufficient conditions for the closed PID-loop to achieve PMF of the CPLM are:\n1) B m = B p K p e c 2) A m = A p -B p C p K p e c\nProof. First, we introduce some notations: The critic-PID law can be rearranged as u = u p = K p e t , where\ne t = e \u03bb p + \u03bb i T -1 i s -1 + \u03bb d T d s = e e c (36\n) e = r -y p = r -C p x p(37)\nThe tracking error dynamics is \u0117 = \u1e8bm -\u1e8bp . The system state-equation can be rewritten as\n\u1e8bp = (A p -B p C p K p e c ) x p + B p K p e c r(38)\nTherefore the tracking error dynamics is\n\u0117 = A m x m + B m r- (A p -B p C p K p e c ) x p -B p K p e c r(39)\nAt PMF, K p \u2192 K p , and therefore, x p \u2192 x m , and \u0117 = 0. Then (39) can be rearranged as\nA m x m + B m r = A p -B p C p K p e c x m + B p K p e c r(40)\nComparing both sides, we have:\nB m = B p K p e c (41\n) A m = A p -B p C p K p e c (42\n)\nThis concludes the proof.\nTheorem 6. The closed PID-loop system will be asymptotically stable and accurately follow the CPLM, if and only if the condition ( 43) is satisfied.\nlim t\u2192\u221e \u0100pc \u2192 A m (43\n)\nwhere \u0100pc represents the dominating eigenvalue matrix in the closed PID-loop eigenvalue matrix\nA pc = A p -B p C p K p e c .\nProof. First, recall that the CPLM matrix A m is hurwitz, so its eigenvalues strictly lie in the left-half of the complex splane. The closed PID-loop system can be represented as:\n\u1e8bm \u1e8bp = A m 0 0 A pc x m x p + B m B pc r(44)\nwhere B pc = B p K p e c . Hence, the closed PID-loop system (44) will be asymptotically stable and accurately follow the CPLM ( 29), if and only if A pc the dominating eigenvalues in the closed PID-loop matrix approach the eigenvalues of A m . This completes the proof.\nTheorem 7. The proportional gain K p can be chosen through an adaptive rule\nKp = \u03b1 \u03b3 ee t (45\n)\nin order to minimise the L 2 norm of the PMF error defined by\n\u0117 -A m e 2 = B p K p -K p e t 2(46)\nProof. Note that x m = e+x p , so the tracking error dynamics (39) can be rearranged as:\n\u0117 = A m e + (B m -B p K p e c ) r + (A m -A p + B p C p K p e c ) x p(47)\nAt PMF, Theorem 5 is satisfied, so (39) becomes\n\u0117 = A m e + B p e K e t(48)\nwhere,\ne K = K p -K p(49)\nNow, a candidate positive definite lyapunov function V of e and e K can be constructed such that\nV (e, e K ) = \u03b1 2 e 2 + B p 2 \u03b3 e 2 K (50\n)\nand its first derivative and second derivative with respect to time are: \nV = \u03b1A m e 2 + B p e K \u03b1\nNote that, if Kp = \u03b1 \u03b3 ee t is selected to cancel out the secondterm of V , then V becomes negative semi-definite. By virtue of V \u2264 0, then e K ,e and e t will be bounded. Also, this choice makes V bounded, meaning that V is uniformly continuous in time. Therefore, it follows from the application of Babarlat's Lemma [72] that V \u2192 0, e \u2192 0 as t \u2192 \u221e. This implies that the tracking error is asymptotically stable.\nSince K p is only shown to be bounded according to e K , this choice does not guarantee the accuracy of the adaptive system. It follows that Theorem 6 is a sufficient condition for asymptotic stability and accuracy. Consequently, it is straightforward to see that if K p K p , then the adaptive update (45) will at least minimize the L 2 norm of the PMF error, that is: \u0117 -A m e 2 = B p e K e t 2 . This completes the proof. Therefore, at every sampling instance, the adaptive update rule for K p can be re-expressed as:\nK p = K p + Kp (53) Kp = \u03b1 \u03b3 e min (u max , |e t |)(54)\nwhere \u03b1 \u2208 R + and \u03b3 \u2208 R. \u03b1 is a tunable constant that tries to achieve e K \u2192 0, while \u03b3 = 0.001 is a small weighting constant.\nThe adaptation given by ( 53) does not consider the presence of delay-time present in the closed PID-loop. When the magnitude of the total delay-time gets larger, the control input u becomes evidently delayed, and the solution obtained from Theorem 7 above cannot alone guarantee that the closed PIDloop will follow the CPLM. Therefore, a faster way to initialize and reach K p is needed. But the optimal stabilizing set K is unknown. To solve this problem, a fictitious upper limit for K p such that 0 < K p < k plim is constructed. We define k plim as:\nk plim = \u03b1 (\u03ba g ) \u03c4 l + t s t s(55)\nIn this test case, k plim \u03ba g . That is \u03ba g becomes a free tunable parameter. The aim is to obtain a stabilizing and accurate k plim such that an initial guess value K p0 can be obtained from a nonlinear function of the current error e and current predicted control-input u. This function is defined by using nlsig -the forward form of the n-logistic sigmoid function, with at least n = 1, defined in Appendix B.\nK p0 = nlsig -(e, x(e), -x(e), k plim , -k plim , 1, 0.1, 0) + nlsig -(u, x(u), -x(u), k plim , -k plim , 1, 0.1, 0)(56)\nwhere, x(\n) = k plim +(57)\nThis value is then further penalised to be within bounds using\nK p = nlsig -(K p0 , x(K p0 ), 0, k plim , 0, n, 0.1, 0)(58)\nThen, an experimental closed PID-loop response of a normalized first-order dynamics with increasing normalized real-valued delay-time \u03c4 l in the normalized set [0, 0.01, 0.1, 0.5, \u2022 \u2022 \u2022 , 20, 30) was simulated. Through curvefitting, the experimental data was then used to correlate the values of \u03c4 l and the resulting k plim = [2, 2, 1.5, 0.8, \u2022 \u2022 \u2022 , 0.12, 0.1) that led to a stabilizing K p value within the constrained limiting interval. The final result is a rational function (59) expressed below.\n\u03ba g = p 1 \u03c4 2 l + p 2 \u03c4l + p 3 \u03c4 2 l + q 1 \u03c4l + q 2(59)\nsuch that, \nwhere the coefficients are p 1 = 0.05132, p 2 = 0.2041, p 3 = 0.1214, q 1 = 1.538, q 2 = 0.5864. Finally, we have:\nK p = f p (e, u, e t , \u03b1, \u03c4 l , t s )(61)\nThe ordered arrangement inside the proportional gain function ( 61) is such that: (59) ( 55), ( 56), ( 58) are executed, and then ( 53) is not executed until the current time is greater than the estimated delay-time from (35). Now the three main PID parameters have been systematically configured. An overview of the CPLMFC method is illustrated in Fig. 6. In the next section, an automatic tuning algorithm based on this method will be presented.", "publication_ref": ["b0", "b28", "b38", "b71", "b34"], "figure_ref": ["fig_5"], "table_ref": []}, {"heading": "H. CPLMFC: Algorithm Implementation", "text": "The implementation of the CPLMFC algorithm inside the sampled closed PID-loop is illustrated in Algorithm 1 with the main gains set using the formulas derived in the previous subsections of this section. On the other hand, since the aim of criticism is to fine-tune decisions, the critic weights can be viewed as fine-tuning knobs. They are set manually using some recommended conditions given in Algorithm 2.\nThe proportional critic weight \u03bb p should be fixed to unity. It represents how much belief is placed on current experience of error. \u03b1 controls the response speed, how fast or slow, y \u2192 y m . A default starting value is \u03b1 = 1. \u03bb i represents how much belief is placed on accumulated error experience, and controls the accuracy of y \u2192 y m . In normal cases of regulation or tracking, 0 \u2264 \u03bb i \u2264 1. The value can then be increased or decreased in this range depending on simulations. The lower the value the lower the overshoot. On the other hand, \u03bb d represents how much belief is placed on future error estimations or projections. It can dampen or increase the oscillations in y. In normal cases of regulation or tracking, 0 \u2264 \u03bb d \u2264 0.5. For stable systems, the only value that may need to be increased or decreased is \u03b1.\nIn the next section, the CPLMFC method will be applied first to the numerical simulation of a normalized third-order dynamical system and then a more challenging case in form of a second-order (uncertain, non-linear and integrating) dynamical system is considered as a representative case-study.\nAlgorithm 1 CPLMFC Tuning Algorithm Require: \u03c4, \u03c4 l , t s , e, u, b, c, \u03b6 1: [x s , x pk ] \u2190 f x (b, c) 2: \u03c9 n \u2190 f \u03c9n (\u03b6,\nx s , t s ) Ensure: \u03b1 > 0 and at t = 0 : K p = 0.01, \nK i = K d = 0 3: K p \u2190 f p (e (t) , u (t) , \u03b1, \u03c4 l , t s ) 4: K i \u2190 f i (K p , \u03c9 n , \u03b6) 5: K d \u2190 f d (K p , \u03c9 n , \u03b6) Algorithm 2 Critic Settings 1: \u03bb p \u2190 1 Ensure: 1 \u2265 \u03bb 2 i \u2265 \u03bb 1 i > 0; 2: if \u03c4 l > \u03c4 then 3: \u03bb i \u2190 \u03bb 1 i 4: else 5: \u03bb i \u2190 \u03bb 2 i 6: end if Ensure: 1 \u2265 \u03bb 2 d \u2265 \u03bb 1 d \u2265 0; 7: if \u03c4 l > \u03c4 then 8: \u03bb d \u2190 \u03bb 1\n\u03bb d \u2190 \u03bb 2 d 11: end if V. SIMULATIONS\nIn the previous section, using the settling-time identification of a dynamical system, a CPLMFC algorithm was designed for real-time robust optimization of the response of a closed PID-loop system consisting of a critic 2DOF PID control law and the dynamical system assumed to be unknown. Further, in this section, some simulation results will be presented and discussed.\nIn this section, for standard measure of closed-loop performance, the integral absolute error index J iae , and (or) the integral absolute error index J iae are used to measure the error regulation.\nJ iae = \u221e 0 |e (t)| , J ise = \u221e 0 e 2 (t)(62)\nAlso, other common and intuitive indicators of the quality of a closed-loop control system, is the performance in terms of the resulting maximum overshoot and settling time (1%) [6], [21], [25], [41].", "publication_ref": ["b5", "b20", "b24", "b40"], "figure_ref": [], "table_ref": []}, {"heading": "A. Stable, Delay-Free System", "text": "The normalized third-order plant transfer function model is widely considered as a benchmark plant for evaluating PID control design methods. It is a representative plant for some stable physical dynamical systems employed in the industry [73].\nP (s) = 1 (s + 1) 3   Selecting b = 1, c = 0, maximum control input u max = 10, and \u03c4 = 1  10 secs. The closed PID-loop settling-time identification of P (s) is first carried out, the settling horizon is selected as N ts = 100 and in the case N \u03c4 l = \u03c4 c = \u03c4 y = 0.  The performance of the CPLMFC method is compared against two relatively recent methods in the literature, namely: the Convex-Concave (CC-IAE) optimization method [74] for load disturbance regulation performance and Jantzen-Jakobsen's Settling Time (JJST) method [41] for set-point regulation performance. Shown in Fig. 7, Fig. 8 and Fig. 9 are the controlled output responses to a unit step input load disturbance, a unit-step setpoint command, and a unit-step setpoint command with unit-step disturbance respectively. The adaptive evolution of the PID gains during the closed loop operation is shown in Fig. 10. It can be concluded from the performance measures in Table II that the CPLMFC method exhibits comparable performance with the other methods. On average, it results in a very good compromise between the transient properties of maximum overshoot, final settling-time (1%) and the J iae index.", "publication_ref": ["b72", "b73", "b40"], "figure_ref": ["fig_7", "fig_8", "fig_9", "fig_0"], "table_ref": []}, {"heading": "B. Delayed Integrating, Nonlinear and Uncertain System", "text": "One commonly used dynamical system for precise repetitive positioning applications is the permanent-magnet linear motor (PMLM) model. This system was used as a benchmark case in [75] and a similar model in [76]. The PMLM can be modeled as an integrating, nonlinear and uncertain system with delay dynamics. The nonlinear model is expressed in a compact transfer-function form (63) relating position y to   \n2 (s) = y v = 1 s (m s + b) (63) v = (8.1 u) e -\u03c4 l s -f F -f R(64)\nwhere\nf R = 3 sin 2\u03c0 y 0.0712 f F = (3 + 10 | \u1e8f|) sgn ( \u1e8f)\nThe sampling-time was taken as \u03c4 = 1 1000 seconds. Applying the identification procedure in section IV-F, the estimated The tuning settings in Case 1 start with safe values of \u03bb i and \u03bb d . The proportional gain is tuned with \u03b1. Recall, that the stabilizing k p set is unknown. In this simulation, \u03b1, starting from a smaller value is increased to \u03b1 = 500. This value is not unique, a lower or higher value may be chosen. However, too high a value may excite the closed PID-loop to instability. In Case 2, since it is a more difficult scenario, the value of \u03b1 is reduced by half. Also, the belief on the derivative is slightly increased by a factor of 10. The belief on the integral action may be left unchanged, but here, it is increased to 0.8 to reduce (f) Fig. 10. CPLMFC Adaptive Gains Evolution: Top Three (\u03b1 = 2) Bottom Three (\u03b1 = 16); unit-step with no disturbance (dash-dotted blue), unit-step with unit-step load disturbance (solid brown), unit-step input load disturbance (dashed green). the tracking error. Further, in Case 3, \u03b1 was increased back to 500, as a lower or too high value may further destabilize the already unstable system. A more robust value applicable to all instances in Table III is \u03b1 = 500, \u03bb i = 0.5, \u03bb d = 0.1.\nFigure 11 shows the response for a non-minimum phase double-integrating scenario where b = 0, \u03c4 l = 10\u03c4 , and m = 5.4. Also, Figure 12 shows the response for a non- ", "publication_ref": ["b74", "b75", "b62"], "figure_ref": ["fig_0", "fig_11", "fig_12"], "table_ref": []}, {"heading": "VI. DISCUSSIONS", "text": "It is straightforward to see that the only parameters to manually adjust are the hyper-parameter \u03b1 and the critic weights \u03bb i , \u03bb d . If properly set, therefore abstracting the setting of the PID gains, they automatically determine the appropriate PID settings.\nIn terms of representation, the critic-PID control form in section II, although in simple form can be viewed as computational intelligence. It reflects the presence of criticism using critic weights to fault each of the three PID contributing terms. Using knobs, the critic weights may also represent the belief of a control-loop operator in order to give room for manual oversight. If the critic weights are set such that \u03bb d 0, \u03bb i = 0, the PID form reduces to PI-only control, while \u03bb i 0, \u03bb d = 0, will reduce the form to PD-only control.\nHowever, since a limitation in this work, is that the critic gains were manually chosen. An important question going forward then is how \u03bb i , \u03bb d , the two adjustable critic weights of the PID output terms can be automatically set to improve PID control performance. This could be a future basis for fusing an internal concept of learning through critic weights into PID formulations. Therefore the design of a stable real-time learning or optimization framework for criticizing the three contributing PID terms will be a challenging but interesting problem for future research.\nAlso, results of the simulations have further shown that this CPLMFC approach to PID tuning can not only guarantee but also streamline the search for accurate and stable PID control gains for controlling dynamical systems. However, it is useful to note that this method cannot stabilize: One, systems that cannot approach a finite settling time behaviour; Two, systems that the CPLM poles cannot dominate in closed-loop.\nFor many dynamical systems that are not difficult to control with respect to stability and dead time, for example: electric motor drives, then regulating such systems around their operating regions can become less complex and more automatic by using an input-output approach to identifying their settling time behaviour in a closed PID-loop. We note that, we have successfully applied the CPLMFC method to control the speed of two electric dc-motors in a differential drive mobile robot. The whole process involved will be detailed in a future paper. One insight that the CPLMFC method has demonstrated again, is that PID control is highly dependent on the knowledge of time [77]. This can be referred to as time-fitting.\nThe settling-time identification procedure described in this paper is not automatic. Therefore, it will be of practical interest to fully automate and develop this aspect. Since automatic adaptive real-time parameter settings brings up the question of safety, consequently, there is a further need to fully investigate the safety guarantees of the CPLMFC approach.\nAlso, another limitation in this paper is that the adaptive rule for the determination of the proportional gain in the unknown stabilizing and optimal set, was augmented for delay-dynamics in the closed-loop system. Therefore, extension of the PMF theorems in section IV-G to consider the presence of delaydynamics will be a significant improvement.", "publication_ref": ["b76"], "figure_ref": [], "table_ref": []}, {"heading": "VII. CONCLUSIONS", "text": "The CPLMFC results in this paper provide a method for automatic robust PID design in the model following sense based on the characteristic settling behaviour of stabilizable dynamical systems. The main idea is that if we can appropriately identify a stabilizable proportional gain for the closed PID-loop model (CPLM), and appropriate critic weights, then both stable and accurate settling behaviour can be guaranteed for the actual closed PID-loop system.\nThe main contributions in this paper have been highlighted in section I-A. Continuous improvement of the CPLMFC theory will be of interest. Also, for further investigations, the application of this method to a wide range of practical dynamical systems will be useful.  \n= \u03ba y,1 + n i=1 \u03ba y,i+1 -\u03ba y,i 1 + e \u00b1\u03b1(x-\u03b4i)\nwhere: \u03be = 0; nlsig - 1; nlsig + (68)\n\u2206 x = x max -x min n , \u2206 y = y max -y min n(69)\n\u03b1 = \u03bb 2 \u03ba x,i+1 -\u03ba x,i = \u03bb 2 \u03ba x,2 -\u03ba x,1(70)\n\u03ba x,i+1 = \u03ba x,i + \u2206 x , \u03ba y,i+1 = \u03ba y,i + \u2206 y (71)\n\u03b4 i = \u03ba x,i+1 + \u03ba x,i 2 , i = 1,...,n(72)\nsuch that \u03ba x = [\u03ba x,i , ..., \u03ba x,i+1 ] , \u03ba x,1 = x min , \u03ba x,n+1 = x max and \u03ba y = [\u03ba y,i , ..., \u03ba y,i+1 ] , \u03ba y,1 = y min , \u03ba y,n+1 = y max . ", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "", "text": "This research was not funded. O.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "", "text": "T , the Type-1 FIS that maps to y = [x s x pk ] T is represented as the fuzzy basis function expansion:\nFor nlsig -, the following constrains hold x - min = cL -dL , x - max = cL , cL > x min and for nlsig + , the constrains are x + min = cR , x + max = cR + dR , cR < x max . Also, y max = 1, y min = 0.", "publication_ref": [], "figure_ref": [], "table_ref": []}, {"heading": "APPENDIX B N-LOGISTIC SIGMOID FUNCTION [78]", "text": "Definition 2. The n-logistic sigmoid function, where \u03b4 \u2208 R n\u00d71 and \u03ba x , \u03ba y \u2208 R (n+1)\u00d71 with \u03bb = 6 as a standard default value", "publication_ref": [], "figure_ref": [], "table_ref": []}], "references": [{"ref_id": "b0", "title": "Coronavirus Pandemic: A Call to Action for the Robotics Community", "journal": "", "year": "2020-03", "authors": "Guang-Zhong Yang"}, {"ref_id": "b1", "title": "PID Controller Design Approaches-Theory, Tuning and Application to Frontier Areas", "journal": "", "year": "2012", "authors": "Marialena Vagia"}, {"ref_id": "b2", "title": "PID Controllers for Time-Delay Systems", "journal": "Birkh\u00e4user", "year": "2005", "authors": "Guillermo J Silva; Aniruddha Datta; P Shankar;  Bhattacharyya"}, {"ref_id": "b3", "title": "PID Control in the Third Millennium: Lessons Learned and New Approaches", "journal": "Springer Science & Business Media", "year": "2012-02", "authors": "Ramon Vilanova; Antonio Visioli"}, {"ref_id": "b4", "title": "Advanced PID control", "journal": "", "year": "2018", "authors": "Karl Johan; \u00c5 Str\u00f6m; Tore H\u00e4gglund"}, {"ref_id": "b5", "title": "An Approach for Setting Parameters for Two-Degree-of-Freedom PID Controllers", "journal": "Algorithms", "year": "2018-04", "authors": "Xinxin Wang; Xiaoqiang Yan; Donghai Li; Li Sun"}, {"ref_id": "b6", "title": "Feedback and Uncertainty: Some Basic Problems and Theorems", "journal": "", "year": "2019-12", "authors": "Guo Lei"}, {"ref_id": "b7", "title": "Process Identification and PID Control", "journal": "John Wiley & Sons, Ltd", "year": "2009", "authors": "Sung Su Whan; Jietae Lee; Lee In-Beum Lee"}, {"ref_id": "b8", "title": "PID control system analysis, design, and technology", "journal": "IEEE Transactions on Control Systems Technology", "year": "2005-07", "authors": "Kiam Heong Ang; G Chong; Yun Li"}, {"ref_id": "b9", "title": "MPC-Based Reference Governors: Theory and Case Studies", "journal": "Springer International Publishing", "year": "2019", "authors": "Martin Klau\u010do; Michal Kvasnica"}, {"ref_id": "b10", "title": "Analytical Design of PID Controllers", "journal": "Springer International Publishing", "year": "2019", "authors": "D Ivan; Sangjin Diaz-Rodriguez;  Han; P Shankar;  Bhattacharyya"}, {"ref_id": "b11", "title": "Automatic design of robust PID controllers based on QFT specifications", "journal": "IFAC Proceedings Volumes", "year": "2012-01", "authors": "R Comas\u00f2livas; T Escobet; J Quevedo"}, {"ref_id": "b12", "title": "Robust PID Design Based on QFT and Convex-Concave Optimization", "journal": "IEEE Transactions on Control Systems Technology", "year": "2017-03", "authors": "Pedro Mercader; Karl Johan \u00c5 Str\u00f6m; Alfonso Ba\u00f1os; Tore H\u00e4gglund"}, {"ref_id": "b13", "title": "PID Tuning with Neural Networks", "journal": "Springer", "year": "2019-04", "authors": "Antonio Marino; Filippo Neri"}, {"ref_id": "b14", "title": "Adaptive Critic Control with Robust Stabilization for Uncertain Nonlinear Systems", "journal": "Springer", "year": "2019", "authors": "Ding Wang; Chaoxu Mu"}, {"ref_id": "b15", "title": "Naive control of the double integrator", "journal": "IEEE Control Systems Magazine", "year": "2001-10", "authors": "V G Rao; D S Bernstein"}, {"ref_id": "b16", "title": "Discrete Control Systems", "journal": "Springer", "year": "2014", "authors": "Yoshifumi Okuyama"}, {"ref_id": "b17", "title": "Techniques in Reconfigurable Control System Design", "journal": "Academic Press", "year": "1996", "authors": "Zhiqiang Gao"}, {"ref_id": "b18", "title": "A Survey on Industry Impact and Challenges Thereof [Technical Activities", "journal": "IEEE Control Systems Magazine", "year": "2017-02", "authors": "T Samad"}, {"ref_id": "b19", "title": "A Randomized Algorithm for Optimal PID Controllers", "journal": "Algorithms", "year": "2018-06", "authors": "Yossi Peretz"}, {"ref_id": "b20", "title": "Advanced Methods of PID Controller Tuning for Specified Performance", "journal": "PID Control for Industrial Processes", "year": "2018-09", "authors": "\u0160tefan Bucz; Alena Koz\u00e1kov\u00e1"}, {"ref_id": "b21", "title": "Research on Engineering Tuning Methods of PID Controller Parameters and Its Application", "journal": "Springer International Publishing", "year": "2016", "authors": "Shuxia Li; Jiesheng Wang"}, {"ref_id": "b22", "title": "Chapter 8 -PID Admittance Control in Task Space", "journal": "Academic Press", "year": "2018-01", "authors": "Wen Yu"}, {"ref_id": "b23", "title": "Fixed Set Point Weighting 2DOF PID Controller for Control Processes", "journal": "Engineering Mathematics", "year": "2018-07", "authors": "Bahaaeldin Gamal; Abdelaty ; Ahmed Hassan Ahmed; Ahmed Nasr; Ouda "}, {"ref_id": "b24", "title": "Miluse Viteckova and Antonin Vitecek. 2DOF Controller Tuning", "journal": "International Journal of Engineering Research in Africa", "year": "2015", "authors": ""}, {"ref_id": "b25", "title": "The New Design Strategy on PID Controllers", "journal": "InTech", "year": "2012-03", "authors": "Wei Wang"}, {"ref_id": "b26", "title": "PID Controllers -Theory, Design, and Tuning", "journal": "ISA", "year": "1995", "authors": "Karl J ; Tore H\u00e4gglund"}, {"ref_id": "b27", "title": "Two-degree-of-freedom PID controllers", "journal": "International Journal of Control, Automation, and Systems", "year": "2003", "authors": "Mituhiko Araki; Hidefumi Taguchi"}, {"ref_id": "b28", "title": "An Idea of Using Reinforcement Learning in Adaptive Control Systems", "journal": "", "year": "2006-04", "authors": "L Koszaka; R Rudek; I Pozniak-Koszalka"}, {"ref_id": "b29", "title": "Extremum Seeking-based Adaptive PID Control applied to Neuromuscular Electrical Stimulation", "journal": "Anais da Academia Brasileira de Ci\u00eancias", "year": "2019-01", "authors": "Tiago Roux-Oliveira; Luiz R Costa; Alexandre V Pino; Paulo Paz; Tiago Roux-Oliveira; Luiz R Costa; Alexandre V Pino; Paulo Paz"}, {"ref_id": "b30", "title": "Optimal PI and PID control of first-order plus delay processes and evaluation of the original and improved SIMC rules", "journal": "Journal of Process Control", "year": "2018", "authors": "Chriss Grimholt; Sigurd Skogestad"}, {"ref_id": "b31", "title": "PID tuning using extremum seeking: Online, model-free performance optimization", "journal": "IEEE Control Systems Magazine", "year": "2006-02", "authors": "N J Killingsworth; M Krstic"}, {"ref_id": "b32", "title": "Adaptive Systems: History, Techniques, Problems, and Perspectives", "journal": "Systems", "year": "2014-12", "authors": "William S Black; Poorya Haghi; Kartik B Ariyur"}, {"ref_id": "b33", "title": "Design methods: PID Control", "journal": "", "year": "2017", "authors": "Karl Johan; \u00c5 Str\u00f6m; Tore H\u00e4gglund"}, {"ref_id": "b34", "title": "Handbook of PI and PID Controller Tuning Rules", "journal": "Imperial College Press", "year": "2009", "authors": "Aidan O' Dwyer"}, {"ref_id": "b35", "title": "Advanced PID Control", "journal": "ISA Instrumentation, Systems and Automation Society", "year": "2006", "authors": "K J Astrom; T Hagglund"}, {"ref_id": "b36", "title": "Control System Design Guide", "journal": "Butterworth-Heinemann", "year": "2012-01", "authors": "George Ellis"}, {"ref_id": "b37", "title": "The Control Systems Handbook: Control System Advanced Methods, Second Edition (Electrical Engineering Handbook)", "journal": "CRC Press", "year": "2011", "authors": "William S Levine"}, {"ref_id": "b38", "title": "Practical PID Control", "journal": "Springer Science & Business Media", "year": "2006-11", "authors": "Antonio Visioli"}, {"ref_id": "b39", "title": "Tuning guidelines for fractional order PID controllers: Rules of thumb", "journal": "Mechatronics", "year": "2018-12", "authors": "Ali Ahmadi Dastjerdi; Niranjan Saikumar; S Hassan Hosseinnia"}, {"ref_id": "b40", "title": "Turning PID controller tuning into a simple consideration of settling time", "journal": "", "year": "2016-06", "authors": "J Jantzen; C Jakobsen"}, {"ref_id": "b41", "title": "New Edition of CSS's \"The Impact of Control Technology", "journal": "IEEE Control Systems Magazine", "year": "2013-04", "authors": "T Samad; A Annaswamy"}, {"ref_id": "b42", "title": "Classical and Modern Controls with Microcontrollers: Design, Implementation and Applications", "journal": "Springer International Publishing", "year": "2019", "authors": "Ying Bai; Zvi S Roth"}, {"ref_id": "b43", "title": "PID Feedback Control", "journal": "Elsevier", "year": "2016", "authors": "Kevin M Lynch; Nicholas Marchuk; Matthew L Elwin"}, {"ref_id": "b44", "title": "Embedded Control System Design: A Model Based Approach", "journal": "Springer", "year": "2013", "authors": "Alexandru Forrai"}, {"ref_id": "b45", "title": "Tuning Tools Maintain Harmony in PID Loops", "journal": "Automation World", "year": "2014-02", "authors": "James Koelsch"}, {"ref_id": "b46", "title": "Research on Improved Auto-Tuning of a PID Controller Based on Phase Angle Margin", "journal": "Energies", "year": "2019-01", "authors": "Deliang Zeng; Yanqiu Zheng; Wei Luo; Yong Hu; Qingru Cui; Qing Li; Chen Peng"}, {"ref_id": "b47", "title": "A Review of Relay Auto-tuning Methods for the Tuning of PID-type Controllers", "journal": "Reinvention: an International Journal of Undergraduate Research", "year": "2012", "authors": " Hornsey"}, {"ref_id": "b48", "title": "Relay auto-tuning of PID controllers using iterative feedback tuning", "journal": "Automatica", "year": "2003-01", "authors": "W K Ho; Y Hong; A Hansson; H Hjalmarsson; J W Deng"}, {"ref_id": "b49", "title": "Editorial: Special issue on iterative learning control", "journal": "International Journal of Control", "year": "2000-01", "authors": "Kevin L Moore; Jian-Xin Xu"}, {"ref_id": "b50", "title": "Iterative Learning Control Design and Application for Linear Continuous Systems with Variable Initial States Based on 2-D System Theory", "journal": "Mathematical Problems in Engineering", "year": "2014", "authors": "Wei Guan; Qiao Zhu; Xu-Dong Wang; Xu-Hui Liu"}, {"ref_id": "b51", "title": "Reinforcement Learning and Deep Neural Networks for PI Controller Tuning", "journal": "IFAC-PapersOnLine", "year": "2019-01", "authors": "William J Shipman; Loutjie C Coetzee"}, {"ref_id": "b52", "title": "Uncertain Rule-Based Fuzzy Systems: Introduction and New Directions", "journal": "Springer International Publishing", "year": "2017", "authors": "Jerry M Mendel"}, {"ref_id": "b53", "title": "Digital Self-Tuning Controllers: Algorithms, Implementation and Applications", "journal": "Springer-Verlag", "year": "2005", "authors": "Vladim\u00edr Bob\u00e1l; Joseph B\u00f6hm; Jarom\u00edr Fessl; Jir\u00ed Mach\u00e1cek"}, {"ref_id": "b54", "title": "A Self-Tuning Analog Proportional-Integral-Derivative (PID) Controller", "journal": "", "year": "2006-06", "authors": "V Aggarwal; U O'reilly"}, {"ref_id": "b55", "title": "Improved Kidney-Inspired Algorithm Approach for Tuning of PID Controller in AVR System", "journal": "IEEE Access", "year": "2019", "authors": "S Ekinci; B Hek\u0131"}, {"ref_id": "b56", "title": "Optimal Tuning of Fractional Order PID Controller for DC Motor Speed Control via Chaotic Atom Search Optimization Algorithm", "journal": "IEEE Access", "year": "2019", "authors": "B Hekimoglu"}, {"ref_id": "b57", "title": "An optimal PID controller for a biped robot walking on flat terrain using MCIWO algorithms", "journal": "Evolutionary Intelligence", "year": "2019-03", "authors": "Ravi Kumar Mandava; Pandu R Vundavilli"}, {"ref_id": "b58", "title": "Fast Tuning of the PID Controller in An HVAC System Using the Big Bang-Big Crunch Algorithm and FPGA Technology", "journal": "Algorithms", "year": "2018-10", "authors": "Abdoalnasir Almabrok; Mihalis Psarakis; Anastasios Dounis"}, {"ref_id": "b59", "title": "On the Crossroad of Artificial Intelligence: A Revisit to Alan Turing and Norbert Wiener", "journal": "IEEE Transactions on Cybernetics", "year": "2019-10", "authors": "L Li; N Zheng; F Wang"}, {"ref_id": "b60", "title": "Structure and Synthesis of PID Controllers", "journal": "Springer Science & Business Media", "year": "2013-03", "authors": "Aniruddha Datta; Ming-Tzu Ho; P Shankar;  Bhattacharyya"}, {"ref_id": "b61", "title": "PID Controller Synthesis Using a\u03c3-Hurwitz Stability Criterion", "journal": "IEEE Control Systems Letters", "year": "2018-07", "authors": "S Han; S P Bhattacharyya"}, {"ref_id": "b62", "title": "Robustness and fragility of high order controllers: A tutorial", "journal": "", "year": "2016-09", "authors": "L H Keel; S P Bhattacharyya"}, {"ref_id": "b63", "title": "Controller parameter optimization for complex industrial system with uncertainties", "journal": "Measurement and Control", "year": "2019-09", "authors": "Heping Chen; Seth Bowels; Biao Zhang; Thomas Fuhlbrigge"}, {"ref_id": "b64", "title": "From PID to Active Disturbance Rejection Control", "journal": "IEEE Transactions on Industrial Electronics", "year": "2009-03", "authors": "Jingqing Han"}, {"ref_id": "b65", "title": "Analog Automation and Digital Feedback Control Techniques", "journal": "Systems and Industrial Engineering", "year": "2018", "authors": "Jean Mbihi"}, {"ref_id": "b66", "title": "Intuitive Analog Circuit Design", "journal": "Newnes", "year": "2013", "authors": "Marc Thompson"}, {"ref_id": "b67", "title": "Correcting the minimum ITAE standard forms of zerodisplaceemnt-error systems", "journal": "Journal of Zhejiang University (Natural Science)", "year": "1989", "authors": "Cao Yi"}, {"ref_id": "b68", "title": "Control Systems Engineering", "journal": "New Age International", "year": "2006", "authors": "I J Nagrath; M "}, {"ref_id": "b69", "title": "Parameter-Adaptive Control Based on Continuous-Time Process Models", "journal": "IFAC Proceedings Volumes", "year": "1990-08", "authors": "K Peter; R Isermann"}, {"ref_id": "b70", "title": "Modern Control Design: With MATLAB and SIMULINK", "journal": "Wiley", "year": "2002-04", "authors": "Ashish Tewari"}, {"ref_id": "b71", "title": "Advanced Stability Theory", "journal": "", "year": "2002", "authors": "Tien Nguyen Tan"}, {"ref_id": "b72", "title": "Benchmark Systems for PID Control", "journal": "IFAC Proceedings Volumes", "year": "2000-04", "authors": "K J ; T H\u00e4gglund"}, {"ref_id": "b73", "title": "PID design by convex-concave optimization", "journal": "", "year": "2013-07", "authors": "M Hast; K J ; B Bernhardsson; S Boyd"}, {"ref_id": "b74", "title": "Online automatic tuning of a proportional integral derivative controller based on an iterative learning control approach", "journal": "IET Control Theory & Applications", "year": "2007-01", "authors": "K K Tan; S Zhao; J.-X Xu"}, {"ref_id": "b75", "title": "Theory and Design of PID Controller for Nonlinear Uncertain Systems", "journal": "IEEE Control Systems Letters", "year": "2019-07", "authors": "Jinke Zhang; Lei Guo"}, {"ref_id": "b76", "title": "Controller Tuning and Control Loop Performance", "journal": "Straight-Line Control Company", "year": "1993", "authors": "David W St; Clair "}, {"ref_id": "b77", "title": "somefunAgba/n-logistic-sigmoid: N-logistic sigmoid version-1.0. Zenodo", "journal": "", "year": "2020-05", "authors": "Oluwasegun Somefun"}], "figures": [{"figure_label": "1", "figure_type": "figure", "figure_id": "fig_0", "figure_caption": "Fig. 1 .1Fig.1. Overview of a closed-PID control software loop.", "figure_data": ""}, {"figure_label": "2", "figure_type": "figure", "figure_id": "fig_1", "figure_caption": "Fig. 2 .2Fig. 2. Block diagram for the Closed-Loop PID Control System.", "figure_data": ""}, {"figure_label": "34", "figure_type": "figure", "figure_id": "fig_2", "figure_caption": "Fig. 3 .Fig. 4 .34Fig. 3. Closed PID-loop model's state space response analysis, when b = 1, c = 0; (3a) output ym and error em, (3b) output rate \u1e8fm and error rate \u0117m, (3c) error phase plot, and (3d) control output surface map.", "figure_data": ""}, {"figure_label": "5", "figure_type": "figure", "figure_id": "fig_3", "figure_caption": "Fig. 5 .5Fig. 5. Finite Settling-Time Identification Process.", "figure_data": ""}, {"figure_label": "51", "figure_type": "figure", "figure_id": "fig_4", "figure_caption": "e e t - Kp \u03b3 ( 51 )51V = \u0117 (2 \u03b1A m e + B p \u03b1 e K e e t ) -B p Kp \u03b1 e e t -Kp \u03b3", "figure_data": ""}, {"figure_label": "6", "figure_type": "figure", "figure_id": "fig_5", "figure_caption": "Fig. 6 .6Fig. 6. Overview of the Closed PID-Loop Model Following Control (CPLMFC) Method.", "figure_data": ""}, {"figure_label": "7", "figure_type": "figure", "figure_id": "fig_7", "figure_caption": "Fig. 7 .7Fig. 7. Responses to a unit step load disturbance for P (s): (convex-concave IAE optimization (solid purple), CPLMFC ((\u03b1 = 2, solid blue), (\u03b1 = 16, solid red), (\u03b1 = 16, \u03bb i = 0.25, solid green) closed PID-loop model response (dash-dotted black)).", "figure_data": ""}, {"figure_label": "8", "figure_type": "figure", "figure_id": "fig_8", "figure_caption": "Fig. 8 .8Fig. 8. Responses to a unit step set-point command, no disturbance for P (s): (JJST (solid purple), CPLMFC ((\u03b1 = 2, solid blue), (\u03b1 = 16, solid red), (\u03b1 = 16, \u03bb i = 0.25, solid green) closed PID-loop model response (dashdotted black)).", "figure_data": ""}, {"figure_label": "9", "figure_type": "figure", "figure_id": "fig_9", "figure_caption": "Fig. 9 .9Fig. 9. Responses to a unit step set-point command, with unit-step input load disturbance for P (s): (JJST (solid purple), CPLMFC ((\u03b1 = 2, solid blue), (\u03b1 = 16, solid red), (\u03b1 = 16, \u03bb i = 0.25, solid green) closed PID-loop model response (dash-dotted black)).", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_10", "figure_caption": "P", "figure_data": ""}, {"figure_label": "11", "figure_type": "figure", "figure_id": "fig_11", "figure_caption": "Fig. 11 .11Fig. 11. Non-minimum phase (double-integrating) scenario for P 2 (s) (b = 0, \u03c4 l = 10\u03c4 , m = 5.4): Desired Trajectory (dash-dotted, black), Position Response (solid blue), Tracking Error Response (solid green).", "figure_data": ""}, {"figure_label": "12", "figure_type": "figure", "figure_id": "fig_12", "figure_caption": "Fig. 12 .12Fig. 12. Non-minimum phase (single right-half plane pole) scenario for P 2 (s) (b = -35.1, \u03c4 l = 10\u03c4 , m = 5.4): Desired Trajectory (dash-dotted, black), Position Response (solid blue), Tracking Error Response (solid green).", "figure_data": ""}, {"figure_label": "13", "figure_type": "figure", "figure_id": "fig_13", "figure_caption": "Fig. 13 .13Fig. 13. FIS output surface defined in Appendix A for the normalized model settling and peak times.", "figure_data": ""}, {"figure_label": "", "figure_type": "figure", "figure_id": "fig_14", "figure_caption": "lim x\u2192xmin nlsig -(x) = y min , lim x\u2192xmax nlsig -(x) = y max , lim x\u2192xmin nlsig + (x) = y max , lim x\u2192xmax nlsig + (x) = y min", "figure_data": ""}, {"figure_label": "", "figure_type": "table", "figure_id": "tab_2", "figure_caption": "settling-time for the system is 1.8 seconds. As illustrated in TableIII, here we use three cases to cover future variations in the system parameters, namely: mass-variation m \u2208 [1, 5.4], damping variation b \u2208 [35.1, 0, -35.1], and delay variation \u03c4 L \u2208 [0, 10\u03c4 ]. This amounts to eight scenarios. We proceed in Case 1 with the normal integrating scenario with mass and delay variations. Considered next in Case 2 is the doubleintegrating scenario with mass variations. Then in Case 3, the integrating scenario with a pole in the right-half s-plane and delay variations is considered.", "figure_data": "TABLE IIISYSTEM PARAMETERS, PERFORMANCE MEASURES AND CONTROLLERSETTINGS FOR PLANT P 2 =1 s(ms+b) .Casemb\u03c4 lJ iaeJ ise\u03b1\u03bb i\u03bb d15.435.100.680.06500 0.5 0.011135.100.650.05500 0.5 0.0115.435.110\u03c41.120.16500 0.5 0.011135.110\u03c41.090.15500 0.5 0.0125.4010\u03c41.020.13250 0.80.121010\u03c40.940.11250 0.80.13 30 5.4 -35.1 10\u03c4 5.4 -35.10.49 0.520.03 0.04500 0.8 500 0.80.1 0.1"}], "formulas": [{"formula_id": "formula_0", "formula_text": "P (s)", "formula_coordinates": [3.0, 427.44, 700.26, 16.65, 6.81]}, {"formula_id": "formula_1", "formula_text": "\u1e8bp = f (x p , u) = A p x p + B p u y = y p = C p x p(1)", "formula_coordinates": [4.0, 105.42, 141.5, 194.61, 24.03]}, {"formula_id": "formula_2", "formula_text": "B p \u2208 R nx \u00d7 1 is its unknown control input matrix, C p \u2208 R 1 \u00d7 nx is its unknown output matrix and \u03a6 \u2208 R nx \u00d7 1", "formula_coordinates": [4.0, 48.96, 222.42, 251.06, 34.78]}, {"formula_id": "formula_3", "formula_text": "P (s) = N p (s) D p (s) = n i=0 b i s n-i n i=0 a i s n-i(2)", "formula_coordinates": [4.0, 107.77, 310.9, 192.25, 27.9]}, {"formula_id": "formula_4", "formula_text": "u = f (r, y) = \u03bb p u p + \u03bb i u i + \u03bb d u d(3)", "formula_coordinates": [4.0, 100.06, 515.84, 199.96, 9.65]}, {"formula_id": "formula_5", "formula_text": "u p = K p e 1 , u i = K i e 2 , u d = K d e 3 (4) e 1 = b r -y \u2261 b r (s) -y (s)(5)", "formula_coordinates": [4.0, 90.21, 545.85, 209.81, 24.6]}, {"formula_id": "formula_6", "formula_text": "e 2 = \u03c4 0 (r -y) dt = \u03c4 0 e dt \u2261 e (s) s(6)", "formula_coordinates": [4.0, 95.13, 571.43, 204.9, 26.29]}, {"formula_id": "formula_7", "formula_text": "e 3 = c \u1e59 -\u1e8f \u2261 s [c r (s) -y (s)](7)", "formula_coordinates": [4.0, 108.48, 600.03, 191.54, 9.65]}, {"formula_id": "formula_8", "formula_text": "K p \u2208 R is the proportional gain, K i \u2208 R is the integral gain, K d \u2208 R is the derivative gain, e \u2208 R", "formula_coordinates": [4.0, 48.96, 667.22, 251.05, 21.61]}, {"formula_id": "formula_9", "formula_text": "u = B r + A e -D y (8", "formula_coordinates": [4.0, 392.33, 325.57, 166.83, 8.96]}, {"formula_id": "formula_10", "formula_text": ")", "formula_coordinates": [4.0, 559.16, 325.89, 3.87, 8.64]}, {"formula_id": "formula_11", "formula_text": "u = T r r -T y y(9)", "formula_coordinates": [4.0, 404.84, 470.0, 158.2, 9.65]}, {"formula_id": "formula_12", "formula_text": "T r = K p b + K i s + K d sc(10)", "formula_coordinates": [4.0, 377.78, 496.33, 185.26, 22.31]}, {"formula_id": "formula_13", "formula_text": "T y = K p + K i s + K d s (11) u = (K p b + K d sc) r + K i s e -(K p + K d s) y (12) u = B (s) r (s) + A (s) e (s) -D (s) y (s) (13) u = B r + A e -D y", "formula_coordinates": [4.0, 339.72, 523.22, 223.31, 73.72]}, {"formula_id": "formula_14", "formula_text": "C = P (s) 1 + D P (s)(14)", "formula_coordinates": [5.0, 138.14, 413.78, 161.88, 22.31]}, {"formula_id": "formula_15", "formula_text": "T (s) = y (s) r (s) = G (s) 1 + G (s) H (s) = N i=1 P i \u2206 i \u2206(15)", "formula_coordinates": [5.0, 66.97, 537.2, 233.05, 25.41]}, {"formula_id": "formula_16", "formula_text": "\u2206 1 = 1 and \u2206 2 = 1. T = C (A + B) 1 + AC = (A + B) P 1 + (D + A) P(16)", "formula_coordinates": [5.0, 48.96, 620.91, 251.06, 53.16]}, {"formula_id": "formula_17", "formula_text": "| (A + D) N p D p | 1(17)", "formula_coordinates": [5.0, 395.72, 85.2, 167.32, 23.22]}, {"formula_id": "formula_18", "formula_text": "T m = A + B D + A(18)", "formula_coordinates": [5.0, 408.89, 111.42, 154.15, 22.31]}, {"formula_id": "formula_19", "formula_text": "| (A+D) Np Dp", "formula_coordinates": [5.0, 415.23, 196.43, 43.26, 14.6]}, {"formula_id": "formula_20", "formula_text": "lim s\u21920 T = (A + B) N p D p + (A + D) N p \u2248 A + B D + A(19)", "formula_coordinates": [5.0, 357.87, 239.31, 205.17, 23.22]}, {"formula_id": "formula_21", "formula_text": "lim s\u21920 T \u2192 T m = A + B D + A = cs 2 + b Kp K d s + Ki K d s 2 + Kp K d s + Ki K d (20) y r \u2248 y m r \u2261 cs 2 + b2\u03b6\u03c9 n s + \u03c9 2 n s 2 + 2\u03b6\u03c9 n s + \u03c9 2 n (21", "formula_coordinates": [5.0, 345.22, 590.79, 217.82, 59.9]}, {"formula_id": "formula_22", "formula_text": ")", "formula_coordinates": [5.0, 558.89, 633.55, 4.15, 8.64]}, {"formula_id": "formula_23", "formula_text": "s 1,2 = -\u03b6\u03c9 n \u00b1 j\u03c9 n 1 -\u03b6 2(22)", "formula_coordinates": [6.0, 115.3, 113.76, 184.72, 10.49]}, {"formula_id": "formula_24", "formula_text": "s 1,2 \u2248 - \u221a 2 2 \u03c9 n (1 \u00b1 j)(23)", "formula_coordinates": [6.0, 140.33, 121.23, 159.69, 30.55]}, {"formula_id": "formula_25", "formula_text": "T i = 2\u03b6 \u03c9 n = \u221a 2 \u03c9 n(24)", "formula_coordinates": [6.0, 141.8, 331.04, 158.23, 31.47]}, {"formula_id": "formula_26", "formula_text": "T d = 1 2\u03b6\u03c9 n = 1 \u221a 2\u03c9 n(25)", "formula_coordinates": [6.0, 130.28, 363.75, 169.74, 24.33]}, {"formula_id": "formula_27", "formula_text": "K d = f d (K p , \u03c9 n , \u03b6) = K p T d(26)", "formula_coordinates": [6.0, 113.27, 452.89, 186.75, 9.65]}, {"formula_id": "formula_28", "formula_text": "K i = f i (K p , \u03c9 n , \u03b6) = K p 1 T i(27)", "formula_coordinates": [6.0, 114.9, 465.15, 185.12, 23.22]}, {"formula_id": "formula_29", "formula_text": "\u1e8bm = A m x m + B m r y m = C m x m + D m r x m = x m1 x m2 , \u1e8bm = \u1e8bm1 \u1e8bm2(28)", "formula_coordinates": [6.0, 105.18, 705.57, 194.85, 45.55]}, {"formula_id": "formula_30", "formula_text": "A m = 0 -\u03c9 2 n 1 -2\u03b6\u03c9 n B m = \u03c9 2 n (1 -c) 2\u03b6\u03c9 n (b -c)(29)", "formula_coordinates": [6.0, 341.57, 497.98, 221.46, 23.18]}, {"formula_id": "formula_31", "formula_text": "C m = 0 1 D m = [c] y m (t) = 1 + e -\u03b6\u03c9nt (c -1) cos (\u03c9 d t) + (2b -c -1) \u03b6 \u03c9n \u03c9 d sin (\u03c9 d t)(30)", "formula_coordinates": [6.0, 330.59, 526.46, 232.45, 49.76]}, {"formula_id": "formula_32", "formula_text": "x = \u03b6\u03c9 n t(31)", "formula_coordinates": [6.0, 417.86, 648.6, 145.18, 9.65]}, {"formula_id": "formula_33", "formula_text": "\u03c9 n = f \u03c9n (\u03b6, x s , t s ) = x s \u03b6t s(32)", "formula_coordinates": [7.0, 119.5, 520.76, 180.52, 23.22]}, {"formula_id": "formula_34", "formula_text": "k -1 ss = u max y max ; u = k -1 ss e -k s \u1e8f(33)", "formula_coordinates": [7.0, 369.15, 213.68, 193.89, 23.22]}, {"formula_id": "formula_35", "formula_text": "t s = T (N ts -N \u03c4 l ) (34) \u03c4 l = T N \u03c4 l + \u03c4 c + \u03c4 y (35", "formula_coordinates": [7.0, 394.24, 526.72, 168.8, 25.27]}, {"formula_id": "formula_36", "formula_text": ")", "formula_coordinates": [7.0, 558.89, 541.98, 4.15, 8.64]}, {"formula_id": "formula_37", "formula_text": "1) B m = B p K p e c 2) A m = A p -B p C p K p e c", "formula_coordinates": [8.0, 58.93, 426.62, 127.66, 22.6]}, {"formula_id": "formula_38", "formula_text": "e t = e \u03bb p + \u03bb i T -1 i s -1 + \u03bb d T d s = e e c (36", "formula_coordinates": [8.0, 90.54, 484.97, 205.33, 13.15]}, {"formula_id": "formula_39", "formula_text": ") e = r -y p = r -C p x p(37)", "formula_coordinates": [8.0, 123.73, 487.51, 176.29, 24.28]}, {"formula_id": "formula_40", "formula_text": "\u1e8bp = (A p -B p C p K p e c ) x p + B p K p e c r(38)", "formula_coordinates": [8.0, 82.98, 551.44, 217.04, 9.68]}, {"formula_id": "formula_41", "formula_text": "\u0117 = A m x m + B m r- (A p -B p C p K p e c ) x p -B p K p e c r(39)", "formula_coordinates": [8.0, 85.94, 588.81, 214.08, 24.63]}, {"formula_id": "formula_42", "formula_text": "A m x m + B m r = A p -B p C p K p e c x m + B p K p e c r(40)", "formula_coordinates": [8.0, 90.45, 653.09, 209.58, 25.59]}, {"formula_id": "formula_43", "formula_text": "B m = B p K p e c (41", "formula_coordinates": [8.0, 138.75, 705.42, 157.12, 10.65]}, {"formula_id": "formula_44", "formula_text": ") A m = A p -B p C p K p e c (42", "formula_coordinates": [8.0, 117.55, 705.76, 182.47, 25.25]}, {"formula_id": "formula_45", "formula_text": ")", "formula_coordinates": [8.0, 295.87, 720.71, 4.15, 8.64]}, {"formula_id": "formula_46", "formula_text": "lim t\u2192\u221e \u0100pc \u2192 A m (43", "formula_coordinates": [8.0, 401.78, 97.51, 157.11, 16.57]}, {"formula_id": "formula_47", "formula_text": ")", "formula_coordinates": [8.0, 558.89, 100.27, 4.15, 8.64]}, {"formula_id": "formula_48", "formula_text": "A pc = A p -B p C p K p e c .", "formula_coordinates": [8.0, 453.45, 133.64, 109.59, 9.68]}, {"formula_id": "formula_49", "formula_text": "\u1e8bm \u1e8bp = A m 0 0 A pc x m x p + B m B pc r(44)", "formula_coordinates": [8.0, 350.05, 192.4, 212.99, 21.64]}, {"formula_id": "formula_50", "formula_text": "Kp = \u03b1 \u03b3 ee t (45", "formula_coordinates": [8.0, 413.98, 314.79, 144.91, 12.17]}, {"formula_id": "formula_51", "formula_text": ")", "formula_coordinates": [8.0, 558.89, 317.63, 4.15, 8.64]}, {"formula_id": "formula_52", "formula_text": "\u0117 -A m e 2 = B p K p -K p e t 2(46)", "formula_coordinates": [8.0, 365.34, 366.04, 197.7, 12.5]}, {"formula_id": "formula_53", "formula_text": "\u0117 = A m e + (B m -B p K p e c ) r + (A m -A p + B p C p K p e c ) x p(47)", "formula_coordinates": [8.0, 358.83, 414.74, 204.2, 24.63]}, {"formula_id": "formula_54", "formula_text": "\u0117 = A m e + B p e K e t(48)", "formula_coordinates": [8.0, 402.72, 466.5, 160.32, 9.68]}, {"formula_id": "formula_55", "formula_text": "e K = K p -K p(49)", "formula_coordinates": [8.0, 418.75, 481.47, 144.28, 10.62]}, {"formula_id": "formula_56", "formula_text": "V (e, e K ) = \u03b1 2 e 2 + B p 2 \u03b3 e 2 K (50", "formula_coordinates": [8.0, 383.19, 526.58, 175.69, 22.34]}, {"formula_id": "formula_57", "formula_text": ")", "formula_coordinates": [8.0, 558.89, 533.67, 4.15, 8.64]}, {"formula_id": "formula_58", "formula_text": "V = \u03b1A m e 2 + B p e K \u03b1", "formula_coordinates": [8.0, 358.92, 588.8, 106.47, 12.17]}, {"formula_id": "formula_60", "formula_text": "K p = K p + Kp (53) Kp = \u03b1 \u03b3 e min (u max , |e t |)(54)", "formula_coordinates": [9.0, 119.43, 185.64, 180.6, 27.18]}, {"formula_id": "formula_61", "formula_text": "k plim = \u03b1 (\u03ba g ) \u03c4 l + t s t s(55)", "formula_coordinates": [9.0, 127.89, 386.98, 172.14, 23.22]}, {"formula_id": "formula_62", "formula_text": "K p0 = nlsig -(e, x(e), -x(e), k plim , -k plim , 1, 0.1, 0) + nlsig -(u, x(u), -x(u), k plim , -k plim , 1, 0.1, 0)(56)", "formula_coordinates": [9.0, 84.73, 502.98, 215.29, 41.95]}, {"formula_id": "formula_63", "formula_text": ") = k plim +(57)", "formula_coordinates": [9.0, 207.7, 550.23, 92.32, 9.65]}, {"formula_id": "formula_64", "formula_text": "K p = nlsig -(K p0 , x(K p0 ), 0, k plim , 0, n, 0.1, 0)(58)", "formula_coordinates": [9.0, 76.82, 582.24, 223.2, 12.07]}, {"formula_id": "formula_65", "formula_text": "\u03ba g = p 1 \u03c4 2 l + p 2 \u03c4l + p 3 \u03c4 2 l + q 1 \u03c4l + q 2(59)", "formula_coordinates": [9.0, 126.39, 711.47, 173.64, 26.31]}, {"formula_id": "formula_67", "formula_text": "K p = f p (e, u, e t , \u03b1, \u03c4 l , t s )(61)", "formula_coordinates": [9.0, 382.9, 287.4, 180.13, 9.65]}, {"formula_id": "formula_68", "formula_text": "Algorithm 1 CPLMFC Tuning Algorithm Require: \u03c4, \u03c4 l , t s , e, u, b, c, \u03b6 1: [x s , x pk ] \u2190 f x (b, c) 2: \u03c9 n \u2190 f \u03c9n (\u03b6,", "formula_coordinates": [10.0, 48.96, 55.26, 172.61, 47.09]}, {"formula_id": "formula_69", "formula_text": "K i = K d = 0 3: K p \u2190 f p (e (t) , u (t) , \u03b1, \u03c4 l , t s ) 4: K i \u2190 f i (K p , \u03c9 n , \u03b6) 5: K d \u2190 f d (K p , \u03c9 n , \u03b6) Algorithm 2 Critic Settings 1: \u03bb p \u2190 1 Ensure: 1 \u2265 \u03bb 2 i \u2265 \u03bb 1 i > 0; 2: if \u03c4 l > \u03c4 then 3: \u03bb i \u2190 \u03bb 1 i 4: else 5: \u03bb i \u2190 \u03bb 2 i 6: end if Ensure: 1 \u2265 \u03bb 2 d \u2265 \u03bb 1 d \u2265 0; 7: if \u03c4 l > \u03c4 then 8: \u03bb d \u2190 \u03bb 1", "formula_coordinates": [10.0, 48.96, 104.66, 230.37, 193.55]}, {"formula_id": "formula_70", "formula_text": "\u03bb d \u2190 \u03bb 2 d 11: end if V. SIMULATIONS", "formula_coordinates": [10.0, 50.73, 310.9, 160.54, 57.36]}, {"formula_id": "formula_71", "formula_text": "J iae = \u221e 0 |e (t)| , J ise = \u221e 0 e 2 (t)(62)", "formula_coordinates": [10.0, 89.66, 507.78, 210.36, 26.29]}, {"formula_id": "formula_72", "formula_text": "2 (s) = y v = 1 s (m s + b) (63) v = (8.1 u) e -\u03c4 l s -f F -f R(64)", "formula_coordinates": [11.0, 116.03, 626.28, 183.99, 37.14]}, {"formula_id": "formula_73", "formula_text": "f R = 3 sin 2\u03c0 y 0.0712 f F = (3 + 10 | \u1e8f|) sgn ( \u1e8f)", "formula_coordinates": [11.0, 123.07, 679.95, 102.85, 36.32]}, {"formula_id": "formula_75", "formula_text": "\u2206 x = x max -x min n , \u2206 y = y max -y min n(69)", "formula_coordinates": [15.0, 86.77, 504.53, 213.26, 22.31]}, {"formula_id": "formula_76", "formula_text": "\u03b1 = \u03bb 2 \u03ba x,i+1 -\u03ba x,i = \u03bb 2 \u03ba x,2 -\u03ba x,1(70)", "formula_coordinates": [15.0, 99.55, 527.51, 200.47, 23.22]}, {"formula_id": "formula_77", "formula_text": "\u03b4 i = \u03ba x,i+1 + \u03ba x,i 2 , i = 1,...,n(72)", "formula_coordinates": [15.0, 108.45, 565.38, 191.57, 22.31]}], "doi": ""}
