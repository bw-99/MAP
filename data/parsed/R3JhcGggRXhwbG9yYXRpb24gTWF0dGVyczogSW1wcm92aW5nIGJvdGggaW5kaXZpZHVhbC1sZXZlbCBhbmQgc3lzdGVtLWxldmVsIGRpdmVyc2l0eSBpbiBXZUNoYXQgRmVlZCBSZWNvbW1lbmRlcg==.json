{"Graph Exploration Matters: Improving both individual-level and system-level diversity in WeChat Feed Recommender": "Shuai Yang WeChat Search Department, Tencent Shenzhen, China ariesyang@tencent.com Lixin Zhang WeChat Search Department, Tencent Shenzhen, China lixinzhangzhang@tencent.com", "Feng Xia": "WeChat Search Department, Tencent Beijing, China xiafengxia@tencent.com", "ABSTRACT": "There are roughly three stages in real industrial recommendation systems, candidates generation (retrieval), ranking and reranking. Individual-level diversity and system-level diversity are both important for industrial recommender systems. The former focus on each single user's experience, while the latter focus on the difference among users. Graph-based retrieval strategies are inevitably hijacked by heavy users and popular items, leading to the convergence of candidates for users and the lack of system-level diversity. Meanwhile, in the reranking phase, Determinantal Point Process (DPP) is deployed to increase individual-level diverisity. Heavily relying on the semantic information of items, DPP suffers from clickbait and inaccurate attributes. Besides, most studies only focus on one of the two levels of diversity, and ignore the mutual influence among different stages in real recommender systems. We argue that individual-level diversity and system-level diversity should be viewed as an integrated problem, and we provide an efficient and deployable solution for web-scale recommenders. Generally, we propose to employ the retrieval graph information in diversitybased reranking, by which to weaken the hidden similarity of items exposed to users, and consequently gain more graph explorations to improve the system-level diveristy. Besides, we argue that users' propensity for diversity changes over time in content feed recommendation. Therefore, with the explored graph, we also propose to capture the user's real-time personalized propensity to the diversity. We implement and deploy the combined system in WeChat App's Top Stories used by hundreds of millions of users. Offline simulations and online A/B tests show our solution can effectively improve both user engagement and system revenue.", "CCS CONCEPTS": "\u00b7 Computer systems organization \u2192 Embedded systems ; Redundancy ; Robotics; \u00b7 Networks \u2192 Network reliability. Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. Conference acronym 'XX, June 03-05, 2018, Woodstock, NY \u00a9 2018 Association for Computing Machinery. ACM ISBN 978-1-4503-XXXX-X/18/06...$15.00 https://doi.org/XXXXXXX.XXXXXXX", "Leyu Lin": "WeChat Search Department, Tencent Beijing, China leyulin@tencent.com", "KEYWORDS": "Diversified Recommendation, Graph-based Retrieval, Determinantal Point Process", "ACMReference Format:": "Shuai Yang, Lixin Zhang, Feng Xia, and Leyu Lin. 2018. Graph Exploration Matters: Improving both individual-level and system-level diversity in WeChat Feed Recommender. In Proceedings of Make sure to enter the correct conference title from your rights confirmation emai (Conference acronym 'XX). ACM, New York, NY, USA, 8 pages. https://doi.org/XXXXXXX.XXXXXXX items pool millions retrieval ranking thousands reranking hundreds dozens Breaking News\u2026\u2026 Trip to Beijing \u2026\u2026 Cute dogs play\u2026\u2026 \u2026 Content Feed where system-level diversity is important where individual-level diversity is important", "1 INTRODUCTION": "Industrial recommender systems are widely deployed in many online services [2, 9, 21, 22, 28]. WeChat, as the largest social instant messaging platform in China, also provides content feed recommendation services named Top Stories. Videos and articles are organized as a feed to be presented. Generally, most real-world recommender systems follow a standard pipeline that can by divided into three modules, namely retrieval, ranking and reranking [8, 31]. The main objective of the systems is to select top k items most relevant to the users. However, the output list usually contains repeated similar items, which makes users reluctant to explore the system especially in content feed scenario. Besides, those highly ranked items usually enjoy high popularity, and the diversity of each user's behavior is reduced as well. Consequently, it's less possible for new items or those with lower popularity to be exposed, and this eventually leads to the system-level convergence. Since the it influences both the user-level experience and the system-level diversity, many approaches are proposed to improve the diversity of recommender systems. An intuitive method is to optimize the diversity in reranking layer, where ranked items are formed as the final feed exposed high individual-level diversity high system-level diversity low individual-level diversity low system-level diversity 8 to users. Many algorithms, such as Maximal Marginal Relevance (MMR) [3] and Determinantal Point Process (DPP) [1, 6, 30, 32], are widely studied and deployed in real-world recommenders. DPPbased model construct a kernel matrix that contains pair-wise similarity and relevance, and shows more effectiveness and efficiency than MMR. In real-world data, different users have different diversity needs. Studies show that personalizing the diversity preference could obtain online user engagement. Recent work [30] adopts behavior entropy to quantify user's propensity to diversity, and provides a fine-grained method to assign a personalized diversity factor to each user. However, we observe that those approaches [6, 30, 32] usually rely on the semantic information of items, which cannot fully reveal the relevance of items, and it may fail when the category information is not accurate. The entropy-based personalization also views pair-wise distance of category as the same. While in real-world classification, \"fashion\" and \"music\" are much more close than \"fashion\" and \"technology\". Besides, by analizing the users behavior in WeChat Top Stories, we observe that users' preference to diversity changes over time. An example is in Figure 3. This may caused by individual interest shift or the distribution change of item pool, which are common cases in real-world recommenders. Another school of thought is to improve the diversity in the retrieval stage. These methods focus on the user-wise diversity for long-term benefits. Unlike DNN-based methods [21, 39] focusing on training dissimilar user representations, GNN-based methods [15, 29, 35, 36, 38] are devoted to learn the connections between users and items. However, without a end-to-end view of the whole system, those diversified retrieval methods could be very weak to the final diversity to the users, because the top-ranked items in the following stages are usually flooded by those with high popularity. In this paper, we aim to improve both individual-level diversity and system-level diversity in a personalized solution. In order to overcome the limitations of existing methods, we propose a end-to-end diversification framework by making full use of graph exploration. Generally, we first adopt graph-based embedding retrieval model to match thousands of items from item pool. Then the retrieved items are sifted to dozens by the ranking stage. Based on the real-time recorded user behaviors and the graph embeddings of items, a designed function is applied to capture user's real-time propensity to the degree of diversity. In reranking stage, we view the ranked items as part of the huge graph in retrieval stage. We employ the graph embedding again to describe the similarity of ranked items. The diversified reranking problem is then converted to selecting a sub-graph with the best trade-off between relevance and diversity. With the real-time personalized diversity factor, the ranked scores and the graph-based similarity matrix, a kernel matrix can be generated for DPP to improve individual-level diversity. The selected sub-graph, is then formed as a feed for users to explore edges between diversified items. These graph exploration, in return, are merged to the huge graph to improve the system-level diversity. Since the graph-based embeddings are trained once and used multiple times in this system, our solution is very practical to be deployed in homogeneous feed recommenders. We conduct both offline simulations and online evaluations on WeChat Topstories, which widely serves hundreds of millions of users everyday. The main contributions are concluded as follows: \u00b7 We observe and analysis that user's preference for diversity is not immutable but keep changing. We propose a function to quantify user's real-time propensity to diversity. \u00b7 We highlight the importance of both individual-level diversity and the system-level diversity, and argue the effectiveness of end-to-end graph exploration to improve the diversity in two levels. \u00b7 We summarize our work as a framework and implement it in a frugal manner, which has been deployed on a real-world recommendation system used by millions of users. Our work is reusable and efficient to be transplanted.", "2 RELATED WORK": "Throughout the evolution of recommender systems, it went through shallow stage [20, 26, 27], neural network stage [7, 13, 16], and the GNNstage [15, 29, 38] to achieve higher accuracy. Recommendation diversity is another essential factor that impacts user experience, which is widely studied in real-world recommenders. For better comparison with our work, we summarize the use of GNN in different phases of recommendation [11], and then we elaborate on diversified solutions for recommendation.", "2.1 GNN in Recommender Systems": "In real-world recommenders, GNN is adopted in different stages to act different roles. In retrieval phase, GNN is usually employed as the embedding trainer. The graphs can be roughly divided into user-item [15, 29] and item-item [14, 37] graphs. The graph architecture is usually constructed by analysing user's historical behaviors. These GNN-based models can capture similarity among users and items by multiple times of information propagation. Specifically, GraphSage [14] has shown its capability to be deployed in webscale recommenders [37]. Combined with random walk, GraphSage conducts an inductive representation learning on large item-item graphs. It samples neighbors of the target node, aggregates and merges their embeddings with the target node to update the representations. Recent works also apply GNN in ranking stage, where accuracy is of first importance. GNN is employed to produce dense embeddings 0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 1 2 3 4 5 6 7 8 9 10 user 1 user 2 user 3 the value of \ud835\udc53 $ % of the input features, and then the predictor use those embeddings to achieve ranked scores. These methods [23, 33] focus on the interaction among features, which is hard to capture. Compared with DNN-based methods, GNN-based ranking methods are seldom adopted in real-world feed recommendation due to the constrained accuracy and the difficulty to be deployed. Few works adopt GNN in reranking stage, where multiple goals other than accuracy should be considered. IRGPR [24] considers both item relationships and user preferences, incorporating one item relation graph to capture item relationships with another useritem scoring graph to embed personalized user intents into the propagation. However, it ignores the diversity in reranking, which is one of the most important goal in reranking stage.", "2.2 Diversified Recommendation": "Recommendation diversity should be measured in two typical dimensions: individual-level diversity and system-level diversity [11, 12, 17]. Individual-level diversity measures the dissimilarity of the recommended items for each user, whereas system-level diversity measures the dissimilarity of recommendation results of different users. Both levels of diversity are important and should be considered as an integrated problem. In order to improve individual-level diversity, diversified reranking has been widely studied. Maximal Marginal Relevance (MMR) [3] method considers both the relevance and the pair-wise similarity of ranked items by point-wise rerank. DPP is an elegant probabilistic model with the ability to express negative interactions. DPP-based models [1, 6, 19, 30, 32] construct a kernel matrix that contains pair-wise similarity and relevance, and shows more effectiveness and efficiency than MMR. Fast greedy maximum a posteriori inference for DPP (Fast-DPP) [6] makes it easy to be deployed in web-scale recommender systems. In real-world data, different users have different diversity needs [5, 34]. Studies [10, 25] show that personalizing the diversity preference could obtain online user engagement. Based on DPP, [30] adopts behavior entropy to quantify user's propensity to diversity, and provides a fine-grained method to assign a personalized diversity factor to each user. It relies heavily on the pre-defined semantic information, which cannot reveal the interaction similarity. In our work, we observe that users' preference to diversity changes over time. This may caused by individual interest shifting or the distribution change of item pool, which are common cases in real-world recommenders. Our approach provides a function to capture both the user interests shifting and the item pool change, and simply adopts Fast-DPP in reranking stage to improve individual-level diversity. However, as the last strategy before exposure, diversified reranking methods focus on improving item-wise diversity showed to users but overlook the system-level diversity, which is much more important for long-term gain. In fact, retrieval should take more responsibility for diversity, since it emphasizes the coverage of user-interested items rather than their specific item ranks. Luckily, some works have been studied to improve the retrieval diversity. For example, DNN-based method MIND [21] adopts a multi-interest extractor layer with a variant dynamic routing in neural network to extract user's diverse interests. GNN-based methods are also modified to capture long-tail items in graph. GraphDR [35] builds a huge heterogeneous preference network to record different types of user preferences, and conduct a fieldlevel heterogeneous graph attention network for node aggregation. Both DGCN [40] and DGRec [36] focus on rebalancing the categories of retrieved items, which also relies heavily on the pre-defined semantic information. As mentioned previously, these graph-based models are hard to be deployed in ranking or reranking stage, so in real-world web-scale recommeders they can just serve in retrieval stage. These methods focuses on either individual-level diversity or system-level diversity separately. Our approach views the individuallevel diversity and the system-level diversity as an integrated problem, and attempts to solve it in a simple yet effective solution. We make full use of the item-item graph embedding in retrieval stage to capture use's real-time preference to diversity, reveal the interactive similarity of ranked items in reranking stage. A sub-graph with the best trade-off between relevance and diversity is generated by real-time personalized DPP, and the path is explored by real-world users. Those graph exploration are then merged in the huge item-item graph to increase the system-level diversity.", "3 METHOD": "", "3.1 GNN-based Retrieval": "GraphSage [37] allows embeddings to be efficiently generated for unseen nodes by leveraging node feature information. It has been successfully applied to web-scale recommender systems to compute embedddings for billions nodes. It samples neighbors of one node, aggregates neighbourhood embeddings to update node representations. where The embedding of graph node \ud835\udc56 in the \ud835\udc59 -th propagation layer, N \ud835\udc56 is the neighborhood set of node \ud835\udc56 , \ud835\udeff is the activation function, W is trainable matrix , \u2225 is the concatenation operation. In our work, we view the items as nodes in the graph, and the edge is connected if two items are positively interacted in one user's behavior session. Item attributes are used as node features. Random walk is adopted to sample neighbours of each node. Then we use the unsupervised GraphSage to generate the embeddings of all the items. Based on user's historical positive interacted items, we can easily match Retrieval Merge \u00b7\u00b7\u00b7 Pre-rank Rank add exploration unsupervised train graph update user history update personalized diversity factor \ud835\udc53 ! \" \ud835\udc93 ! graph kernel \ud835\udc73 graph similarity \ud835\udc7a ranked items \ud835\udc7a diversified list DPP user real-time behaviors \ud835\udc53 ! \" \u2026 temporal sliding window the potential items by computing the cosine similarity of item embeddings.", "3.2 Real-time Personalization": "With the observation of the temporal change of user's preference to individual-level diversity, we propose a scheme to capture user's real-time propensity to the degree of diversity, which is personalized as well. First, a simple yet effective temporal sliding window is applied to filter user's recent positively interacted items I \ud835\udc61 \ud835\udc62 . With the help of the huge graph in retrieval stage, the similarity matrix S I \ud835\udc61 \ud835\udc62 of these selected items from user \ud835\udc62 can be computed with normalized embeddings e \ud835\udc61 \ud835\udc62 , and we use \ud835\udc60 \ud835\udc61 u as the mean item similarity of user in time \ud835\udc61 : Then \ud835\udc60 \ud835\udc61 u is updated in a vector s \ud835\udc61 , which records all users' realtime item similarity. We adopt z-score to standardize all users' \ud835\udc60 \ud835\udc61 u , then sigmoid function is used to return a value \ud835\udc53 \ud835\udc61 u in the range 0 to 1. According to [4], user characteristics are correlated with their historical behaviors in recommenders. We can simply make the assumption that the conclusion that user \ud835\udc62 with a large \ud835\udc53 \ud835\udc61 \ud835\udc62 at time \ud835\udc61 tends to view more similar items. Thus this value can be viewed as user's real-time propensity to the degree of diversity. It will be more explainable when combined with fast DPP in the next subsection.", "Algorithm 1: Reranking Stage.": "Input: : Ranked items set: \ud835\udc4d ; Real-time personalized preference for diversity of user \ud835\udc62 : \ud835\udc53 \ud835\udc61 \ud835\udc62 ; Graph-based similarity matrix of ranked items: S ; Ranked scores of items: r ; Output size \ud835\udc58 . Output: Reranked top-k items set \ud835\udc4c . Compute intermediate scores r \u2217 by equation (7). Compute kernel matrix L by equation (6) using r \u2217 and S . Initialize \ud835\udc4c = {} . while | \ud835\udc4d | > 0 and | \ud835\udc4c | < \ud835\udc58 do Select item \ud835\udc57 by equation (8). \ud835\udc4c \u222a { \ud835\udc57 } . Return: \ud835\udc4c .", "3.3 Reranking": "It's natural to adopt fast-DPP [11] in large sale recommendation systems for efficiency. Positive semi-definite kernel matrix L can be generated by using relevance scores r (usually the ranked score) and normalized item embeddings f by where S is the similarity matrix of the ranked items. The logprobability of selected item subset \ud835\udc4c can be written as where \ud835\udc51\ud835\udc52\ud835\udc61 is the determinant of matrix, \ud835\udf03 is the trade-off parameter between relevance and diversity. A larger \ud835\udf03 means more relevance of results. When \ud835\udf03 = 0 . 5, users obtain a equal importance between relevance and diversity. The corresponding kernel with trade-off can be written as: Study in [4] has shown that the historical behavior can reflect user's preference for diveristy. \ud835\udc53 \ud835\udc61 \ud835\udc62 mentioned in section 3.2 forces the user similarity in a distribution ranging in 0 to 1, which follows the fact that less users prefer either extremely more diversity or relevance . Thus we use \ud835\udc53 \ud835\udc61 \ud835\udc62 as the real-time trade-off parameter \ud835\udf03 between relevance and diveristy. In practice, the trade-off can be considered by rewriting each ranked score as: Instead of using category-like semantic embedding of items as the input of similarity computation, we again employ the embeddings from the huge item-item graph to generate the similarity matrix S of ranked items. The embeddings contain both item features information and their interacted information. The former focuses on individual-level diversity, whereas the latter is more important for system-level diversity. Given the similarity matrix S , the ranked scores r and the realtime personalized diversity preference \ud835\udc53 \ud835\udc61 \ud835\udc62 , the kernel matrix L can be generated. Fast-DPP converts problem of selecting subset \ud835\udc4c from whole set \ud835\udc4d to greedily selecting item \ud835\udc57 with the most promotion items in item-item graph selected item after ranking stage items not in graph clicked items graph edges in t predicted list reranked list new added edges in t+1 retrieval & ranking diversified reranking graph update \ud835\udc53 ! \" to the determinants of the updated submatrix iteratively, since P( \ud835\udc4c ) \u221d \ud835\udc51\ud835\udc52\ud835\udc61 ( L \ud835\udc4c ) : We formalize the deployed reranking stage in Algorithm 1. item-item graph. The recommender now completes one round of graph exploration, and the graph is continuously iterated after each recommendation lifecycle. In the next round, with the added edges and nodes, the graph-based retrieval matches more diversified items, which indicates a higher coverage of items and exactly improves the system-level diversity Graph exploration can improve both levels of diversity by leveraging the \"learning effect\" mentioned in [18].", "3.4 Graph Exploration": "With the components deconstructed above, we now explain how our framework improve the individual-level diversity and systemlevel diversity in an integrated manner. An example of top-5 items recommendation task is illustrated in Figure 5. Retrieval and ranking . The graph embeddings are online trained by using real-time feedback from users. The graph embeddings are first used as a retrieval strategy. After ranking, hundreds of selected items can be viewed as nodes in the large graph. The ranked scores predict top-k items as the most relevant items and usually very similar to user's strong interest. Thus a higher coverage of items in retrieval stage is needed. Real-time personalized trade-off between relevance and diversity . As expounded in section 3.2, combined with user's history, \ud835\udc53 \ud835\udc61 \ud835\udc62 is also generated by the graph embeddings. This parameter contains user's diversity information based on the graph. It determines the degree of graph exploration. Explore unseen items . The ranked items are not necessarily in the graph, because in real-world recommenders there are dozens of retrieval strategies other than graph-based retrieval. Luckily GraphSage can predict the unseen items' embedding by using the node features. In practice, the feature space is usually the same as the existed graph nodes. Then the embedding can be predicted without edges connected. Thus the unseen items can also be viewed as part of the huge graph. Explore unconnected edges . The graph is again used to generate the similarity matrix of ranked items, which contains node features similarity and interaction-level similarity. With the help of fast-DPP, top-k items are re-selected. Since node features contain semantic and category-like information, the diversified reranked items involve more semantic diversity, which improves the individuallevel diversity. Also, since the graph embedding contain interactionlevel similarity, items, usually together positively interacted by the same user, are dispersed after DPP. The latter aims to improve the system-level diversity by attempting to add new edges in the graph. Graph update . The reranked items are then exposed to user as a feed. Items with positive interaction in the same session are defined as correlated pairs, and the edges are then added in the huge", "3.5 Real-world Deployment": "The graph-based retrieval model is implemented in C++ as an incremental learning version to be easily updated. User's behavior history are also updated in a real-time manner. \ud835\udc60 \ud835\udc61 u , which records all users' real-time item similarity based on behavior history applied with a temporal sliding window, is also updated in a real-time way. The size of the sliding window can be defined as the space limit or the time limit. We find the latter works better, because hot events often intensively change the data distribution in content feed recommendation task. These real-time updated parameters, together with the ranking models, are stored in online dict severs to ensure the accuracy and diversity of the recommender system. The whole framework reuse the graph embedding 3 times respectively in retrieval stage, \ud835\udc53 \ud835\udc61 \ud835\udc62 generation, and the similarity matrix generation in reranking stage, which doesn't rely on extra pre-trained embeddings or semantic information. This is a saving solution, and it prevents the reranking DPP suffering from clickbait or inaccurate categories, which is the common case in content feed recommendation.", "4 EXPERIMENTAL RESULTS": "Two stages of experiment are conducted in WeChat Top Stories videos recommendation. We first conduct a 7-days online experiment to compare methods with each other, and then the best method is launched for a long-term observation. This is a frequently-used method in industrial recommenders. In this section, we first prove the effectiveness of our work compared with others, and then show the long-term gain since launched. Baselines . Three baselines are compared in the 7 days online experiment. We refer the existed rule-based diversified reranking as \"Base\", which limits the number of items with the same categort or tags. Simply adopting fast-DPP [6] based on the category-like similarity is referred as \"fast-DPP\". The solution proposed in [30] is p-DPP, which considers the personal difference of propensity to diversity. Metrics . We adopt intra-list average distance (ILAD) [6] to measure the individual-level diversity, which is the average of all users' -1 0 1 2 3 4 5 6 7 1 6 11 16 21 26 31 36 41 increase (%) VV Playtime CTR Completion (a) short-term metrics -1 0 1 2 3 4 5 6 7 1 6 11 16 21 26 31 36 41 increase (%) Staytime Retention RD (b) long-term metrics 0 0.5 1 1.5 2 2.5 1 6 11 16 21 26 31 36 41 increase (%) AD (c) commercial metric mean distance of interacted items: where \ud835\udc45 \ud835\udc62 denotes the item lists exposed to user \ud835\udc62 . And we propose to measure the system-level diversity by computing the average distance of retrieval results (RD), which is similar to ILAD in computation. In our experiment, IDL is computed based on the item-item graph embeddings. We adopt a series of important metrics in feed recommendation. To measure short-term performance, per capita video views (VV), per capita playtime (Playtime), per capita click through rate (CTR), and play completion rate (Completion) are adopted. For long-term evaluation, per capita staytime (Staytime) and weekly retention rate (Retention) are adopted. Besides, we also evaluate the commercial revenue by per capita advertisements exposure (AD). The p-value is set as 0.05. Online A/B experiments are conducted on buckets of users, and the results are daily collected. improve the click-through rate, which reveals that diversified top-k items are more likely to be positively interacted than those similar items. The observed growth in VV, Playtime, and Completion also confirms this conclusion. We can observe the learning effect in long-term gains. Users tend to spend more time in our feed, and the retention rate also increase in a growing manner. The RD is also significantly improved especially in the first few days, because the graph in trained in an incremental way. With more graph exploration, the retrieval diversity is continuously growing and it consequently affects the diversity in reranking stage. This verifies that graph exploration can obtain a long-term gain in system-level diversity. Besides, the commercial metric AD also increases, because advertisements are regularly inserted in our feed. This proves that our work can bring business growth. Compared with baselines . The results of a 7-days online experiment are showed in Table 1. A \"*\" means null hypothesis and can be viewed the same as the baseline. Compared with the rule-based diversification, DPP-based methods can significantly improve the individual-level diversity. Meanwhile, the diversified items can improve users' consumption in feed, which directly demonstrates the effectiveness of DPP-based reranking. Compared with other DPPbased methods, our work improves the retrieval diversity, which reveals the effectiveness of graph exploration. This verifies that our framework can simultaneously improve both individual-level diversity and system-level diversity without reducing the accuracy. Our method gains the most online increase, and is then launched for long-term observation. Long-term experiment . As is shown in Figure 6, our method obtains consistent increase in several aspects compared with the \"Base\" method. For short-term metrics, our method can significantly Both of the experiments demonstrate that individual-level diversity and system-level diversity can affect mutually when it comes to industrial feed recommenders. Thus these two levels of diversity should be viewed as an integrated problem. Graph exploration can efficiently and significantly improve both of them without losing the online performance. Besides, compared with methods training and loading another semantic embedding table, the reuse of graph embedding saves storage and computing resources.", "5 CONCLUSIONS": "Researchers focus on either individual-level diversity or systemlevel diversity in one local stage of the recommendation systems, which ignores the mutual influence with other stages. This makes it hard to achieve improvement in standard three-stage industrial recommenders. In this paper, we treat proving two levels of diversity as an integrated task from a systematic and dynamic perspective. We discuss the importance of graph exploration in both retrieval and reranking stage. The proposed framework reuses the graph in different phases of recommender in an efficient way. With the natural iteration of the system, our work obtains consistent improvement of short-term, long-term, and commercial benefits in WeChat Top Stories. Besides, we address that users' propensity to the degree of diversity changes over time, and a real-time personalization strategy is adopted to achieve a better trade-off between relevance and diversity. Our work focuses on the practical issues of industrial recommenders, and provide an efficient and deployable solution. Improving both individual-level and system-level diversity in WeChat Feed Recommender", "REFERENCES": "[1] Azin Ashkan, Branislav Kveton, Shlomo Berkovsky, and Zheng Wen. 2015. Optimal Greedy Diversity for Recommendation. In Proceedings of the Twenty-Fourth International Joint Conference on Artificial Intelligence, IJCAI 2015, Buenos Aires, Argentina, July 25-31, 2015 , Qiang Yang and Michael J. Wooldridge (Eds.). AAAI Press, 1742-1748. http://ijcai.org/Abstract/15/248 [2] Ian Baracskay, Donald J. Baracskay III, Mehtab Iqbal, and Bart Piet Knijnenburg. 2022. The Diversity of Music Recommender Systems. In IUI 2022: 27th International Conference on Intelligent User Interfaces, Helsinki, Finland, March 22 - 25, 2022 - Companion Volume , Giulio Jacucci, Samuel Kaski, Cristina Conati, Simone Stumpf, Tuukka Ruotsalo, and Krzysztof Gajos (Eds.). ACM, 97-100. https://doi.org/10.1145/3490100.3516474 [3] Jaime G. Carbonell and Jade Goldstein. 1998. The Use of MMR, Diversity-Based Reranking for Reordering Documents and Producing Summaries. In SIGIR '98: Proceedings of the 21st Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, August 24-28 1998, Melbourne, Australia , W. Bruce Croft, Alistair Moffat, C. J. van Rijsbergen, Ross Wilkinson, and Justin Zobel (Eds.). ACM, 335-336. https://doi.org/10.1145/290941.291025 [4] Li Chen, Wen Wu, and Liang He. 2013. How personality influences users' needs for recommendation diversity?. In 2013 ACM SIGCHI Conference on Human Factors in Computing Systems, CHI '13, Paris, France, April 27 - May 2, 2013, Extended Abstracts , Wendy E. Mackay, Stephen A. Brewster, and Susanne B\u00f8dker (Eds.). ACM, 829-834. https://doi.org/10.1145/2468356.2468505 [5] Li Chen, Wen Wu, and Liang He. 2017. Personality and Recommendation Diversity. In Emotions and Personality in Personalized Services - Models, Evaluation and Applications , Marko Tkalcic, Berardina De Carolis, Marco de Gemmis, Ante Odic, and Andrej Kosir (Eds.). Springer, 201-225. https://doi.org/10.1007/978-3-31931413-6_11 [6] Laming Chen, Guoxin Zhang, and Eric Zhou. 2018. Fast Greedy MAP Inference for Determinantal Point Process to Improve Recommendation Diversity. In Advances in Neural Information Processing Systems 31: Annual Conference on Neural Information Processing Systems 2018, NeurIPS 2018, December 3-8, 2018, Montr\u00e9al, Canada , Samy Bengio, Hanna M. Wallach, Hugo Larochelle, Kristen Grauman, Nicol\u00f2 Cesa-Bianchi, and Roman Garnett (Eds.). 5627-5638. https://proceedings. neurips.cc/paper/2018/hash/dbbf603ff0e99629dda5d75b6f75f966-Abstract.html [7] Heng-Tze Cheng, Levent Koc, Jeremiah Harmsen, Tal Shaked, Tushar Chandra, Hrishi Aradhye, Glen Anderson, Greg Corrado, Wei Chai, Mustafa Ispir, Rohan Anil, Zakaria Haque, Lichan Hong, Vihan Jain, Xiaobing Liu, and Hemal Shah. 2016. Wide & Deep Learning for Recommender Systems. In Proceedings of the 1st Workshop on Deep Learning for Recommender Systems, DLRS@RecSys 2016, Boston, MA, USA, September 15, 2016 , Alexandros Karatzoglou, Bal\u00e1zs Hidasi, Domonkos Tikk, Oren Sar Shalom, Haggai Roitman, Bracha Shapira, and Lior Rokach (Eds.). ACM, 7-10. https://doi.org/10.1145/2988450.2988454 [8] Paul Covington, Jay Adams, and Emre Sargin. 2016. Deep Neural Networks for YouTube Recommendations. In Proceedings of the 10th ACM Conference on Recommender Systems, Boston, MA, USA, September 15-19, 2016 , Shilad Sen, Werner Geyer, Jill Freyne, and Pablo Castells (Eds.). ACM, 191-198. https://doi.org/10. 1145/2959100.2959190 [9] James Davidson, Benjamin Liebald, Junning Liu, Palash Nandy, Taylor Van Vleet, Ullas Gargi, Sujoy Gupta, Yu He, Mike Lambert, Blake Livingston, and Dasarathi Sampath. 2010. The YouTube video recommendation system. In Proceedings of the 2010 ACM Conference on Recommender Systems, RecSys 2010, Barcelona, Spain, September 26-30, 2010 , Xavier Amatriain, Marc Torrens, Paul Resnick, and Markus Zanker (Eds.). ACM, 293-296. https://doi.org/10.1145/1864708.1864770 [10] Farzad Eskandanian, Bamshad Mobasher, and Robin Burke. 2017. A Clustering Approach for Personalizing Diversity in Collaborative Recommender Systems. In Proceedings of the 25th Conference on User Modeling, Adaptation and Personalization, UMAP 2017, Bratislava, Slovakia, July 09 - 12, 2017 , M\u00e1ria Bielikov\u00e1, Eelco Herder, Federica Cena, and Michel C. Desmarais (Eds.). ACM, 280-284. https://doi.org/10.1145/3079628.3079699 [11] Chen Gao, Yu Zheng, Nian Li, Yinfeng Li, Yingrong Qin, Jinghua Piao, Yuhan Quan, Jianxin Chang, Depeng Jin, Xiangnan He, and Yong Li. 2023. A Survey of Graph Neural Networks for Recommender Systems: Challenges, Methods, and Directions. ACM Trans. Recomm. Syst. 1, 1, Article 3 (mar 2023), 51 pages. https://doi.org/10.1145/3568022 [12] Mouzhi Ge, Carla Delgado-Battenfeld, and Dietmar Jannach. 2010. Beyond accuracy: evaluating recommender systems by coverage and serendipity. In Proceedings of the 2010 ACM Conference on Recommender Systems, RecSys 2010, Barcelona, Spain, September 26-30, 2010 , Xavier Amatriain, Marc Torrens, Paul Resnick, and Markus Zanker (Eds.). ACM, 257-260. https://doi.org/10.1145/ 1864708.1864761 [13] Huifeng Guo, Ruiming Tang, Yunming Ye, Zhenguo Li, and Xiuqiang He. 2017. DeepFM: A Factorization-Machine based Neural Network for CTR Prediction. In Proceedings of the Twenty-Sixth International Joint Conference on Artificial Intelligence, IJCAI 2017, Melbourne, Australia, August 19-25, 2017 , Carles Sierra (Ed.). ijcai.org, 1725-1731. https://doi.org/10.24963/ijcai.2017/239 Conference acronym 'XX, June 03-05, 2018, Woodstock, NY [28] Badrul Munir Sarwar, George Karypis, Joseph A. Konstan, and John Riedl. 2001. Item-based collaborative filtering recommendation algorithms. In Proceedings of the Tenth International World Wide Web Conference, WWW 10, Hong Kong, China, May 1-5, 2001 , Vincent Y. Shen, Nobuo Saito, Michael R. Lyu, and Mary Ellen Zurko (Eds.). ACM, 285-295. https://doi.org/10.1145/371920.372071 [29] Xiang Wang, Xiangnan He, Meng Wang, Fuli Feng, and Tat-Seng Chua. 2019. Neural Graph Collaborative Filtering. In Proceedings of the 42nd International ACM SIGIR Conference on Research and Development in Information Retrieval, SIGIR 2019, Paris, France, July 21-25, 2019 , Benjamin Piwowarski, Max Chevalier, \u00c9ric Gaussier, Yoelle Maarek, Jian-Yun Nie, and Falk Scholer (Eds.). ACM, 165-174. https://doi.org/10.1145/3331184.3331267 [30] Yichao Wang, Xiangyu Zhang, Zhirong Liu, Zhenhua Dong, Xinhua Feng, Ruiming Tang, and Xiuqiang He. 2020. Personalized Re-ranking for Improving Diversity in Live Recommender Systems. CoRR abs/2004.06390 (2020). arXiv:2004.06390 https://arxiv.org/abs/2004.06390 [31] Zhe Wang, Liqin Zhao, Biye Jiang, Guorui Zhou, Xiaoqiang Zhu, and Kun Gai. 2020. COLD: Towards the Next Generation of Pre-Ranking System. CoRR abs/2007.16122 (2020). arXiv:2007.16122 https://arxiv.org/abs/2007.16122 [32] Mark Wilhelm, Ajith Ramanathan, Alexander Bonomo, Sagar Jain, Ed H. Chi, and Jennifer Gillenwater. 2018. Practical Diversified Recommendations on YouTube with Determinantal Point Processes. In Proceedings of the 27th ACM International Conference on Information and Knowledge Management, CIKM 2018, Torino, Italy, October 22-26, 2018 , Alfredo Cuzzocrea, James Allan, Norman W. Paton, Divesh Srivastava, Rakesh Agrawal, Andrei Z. Broder, Mohammed J. Zaki, K. Sel\u00e7uk Candan, Alexandros Labrinidis, Assaf Schuster, and Haixun Wang (Eds.). ACM, 2165-2173. https://doi.org/10.1145/3269206.3272018 [33] Jiancan Wu, Xiangnan He, Xiang Wang, Qifan Wang, Weijian Chen, Jianxun Lian, and Xing Xie. 2022. Graph convolution machine for context-aware recommender system. Frontiers Comput. Sci. 16, 6 (2022), 166614. https://doi.org/10.1007/s11704021-0261-8 [34] Wen Wu, Li Chen, and Yu Zhao. 2018. Personalizing recommendation diversity based on user personality. User Model. User Adapt. Interact. 28, 3 (2018), 237-276. https://doi.org/10.1007/s11257-018-9205-x [35] Ruobing Xie, Qi Liu, Shukai Liu, Ziwei Zhang, Peng Cui, Bo Zhang, and Leyu Lin. 2022. Improving Accuracy and Diversity in Matching of Recommendation With Diversified Preference Network. IEEE Trans. Big Data 8, 4 (2022), 955-967. https://doi.org/10.1109/TBDATA.2021.3103263 [36] Liangwei Yang, Shengjie Wang, Yunzhe Tao, Jiankai Sun, Xiaolong Liu, Philip S. Yu, and Taiqing Wang. 2023. DGRec: Graph Neural Network for Recommendation with Diversified Embedding Generation. In Proceedings of the Sixteenth ACM International Conference on Web Search and Data Mining, WSDM 2023, Singapore, 27 February 2023 - 3 March 2023 , Tat-Seng Chua, Hady W. Lauw, Luo Si, Evimaria Terzi, and Panayiotis Tsaparas (Eds.). ACM, 661-669. https://doi.org/10.1145/ 3539597.3570472 [37] Rex Ying, Ruining He, Kaifeng Chen, Pong Eksombatchai, William L. Hamilton, and Jure Leskovec. 2018. Graph Convolutional Neural Networks for Web-Scale Recommender Systems. In Proceedings of the 24th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining, KDD 2018, London, UK, August 19-23, 2018 , Yike Guo and Faisal Farooq (Eds.). ACM, 974-983. https://doi.org/10. 1145/3219819.3219890 [38] Wenhui Yu, Zixin Zhang, and Zheng Qin. 2022. Low-Pass Graph Convolutional Network for Recommendation. In Thirty-Sixth AAAI Conference on Artificial Intelligence, AAAI 2022, Thirty-Fourth Conference on Innovative Applications of Artificial Intelligence, IAAI 2022, The Twelveth Symposium on Educational Advances in Artificial Intelligence, EAAI 2022 Virtual Event, February 22 - March 1, 2022 . AAAI Press, 8954-8961. https://ojs.aaai.org/index.php/AAAI/article/view/20878 [39] Shengyu Zhang, Lingxiao Yang, Dong Yao, Yujie Lu, Fuli Feng, Zhou Zhao, Tat-Seng Chua, and Fei Wu. 2022. Re4: Learning to Re-contrast, Re-attend, Re-construct for Multi-interest Recommendation. In WWW'22: The ACM Web Conference 2022, Virtual Event, Lyon, France, April 25 - 29, 2022 , Fr\u00e9d\u00e9rique Laforest, Rapha\u00ebl Troncy, Elena Simperl, Deepak Agarwal, Aristides Gionis, Ivan Herman, and Lionel M\u00e9dini (Eds.). ACM, 2216-2226. https://doi.org/10.1145/3485447. 3512094 [40] Yu Zheng, Chen Gao, Liang Chen, Depeng Jin, and Yong Li. 2021. DGCN: Diversified Recommendation with Graph Convolutional Networks. In WWW'21: The Web Conference 2021, Virtual Event / Ljubljana, Slovenia, April 19-23, 2021 , Jure Leskovec, Marko Grobelnik, Marc Najork, Jie Tang, and Leila Zia (Eds.). ACM / IW3C2, 401-412. https://doi.org/10.1145/3442381.3449835"}
