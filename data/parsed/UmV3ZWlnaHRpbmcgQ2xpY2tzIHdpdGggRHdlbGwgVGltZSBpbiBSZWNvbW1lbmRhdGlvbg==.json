{
  "Reweighting Clicks with Dwell Time in Recommendation": "Ruobing Xie ∗ WeChat, Tencent Beijing, China ruobingxie@tencent.com Lin Ma ∗ WeChat, Tencent Beijing, China carrotma@tencent.com Shaoliang Zhang WeChat, Tencent Beijing, China modriczhang@tencent.com Feng Xia WeChat, Tencent Beijing, China xiafengxia@tencent.com Leyu Lin WeChat, Tencent Beijing, China goshawklin@tencent.com",
  "ABSTRACT": "The click behavior is the most widely-used user positive feedback in recommendation. However, simply considering each click equally in training may suffer from clickbaits and title-content mismatching, and thus fail to precisely capture users' real satisfaction on items. Dwell time could be viewed as a high-quality quantitative indicator of user preferences on each click, while existing recommendation models do not fully explore the modeling of dwell time. In this work, we focus on reweighting clicks with dwell time in recommendation. Precisely, we first define a new behavior named valid read, which helps to select high-quality click instances for different users and items via dwell time. Next, we propose a normalized dwell time function to reweight click signals in training for recommendation. The Click reweighting model achieves significant improvements on both offline and online evaluations in real-world systems.",
  "CCS CONCEPTS": "· Information systems → Recommender systems .",
  "KEYWORDS": "recommendation, valid read, dwell time, click reweighting",
  "ACMReference Format:": "Ruobing Xie, Lin Ma, Shaoliang Zhang, Feng Xia, and Leyu Lin. 2023. Reweighting Clicks with Dwell Time in Recommendation. In Companion Proceedings of the ACM Web Conference 2023 (WWW '23 Companion), April 30-May 4, 2023, Austin, TX, USA. ACM, New York, NY, USA, 5 pages. https://doi.org/10.1145/3543873.3584624",
  "1 INTRODUCTION": "Real-world personalized recommendation attempts to provide appropriate items based on user preferences. User feedback on items is natural and essential information to discover user interests. Click , which is a high-quality and widely-existed implicit feedback, is the ∗ Both authors have equal contributions. Ruobing Xie is the corresponding author. Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. WWW'23 Companion, April 30-May 4, 2023, Austin, TX, USA © 2023 Copyright held by the owner/author(s). Publication rights licensed to ACM. ACM ISBN 978-1-4503-9419-2/23/04...$15.00 https://doi.org/10.1145/3543873.3584624 dominating user behavior used in recommendation. Click-through rate (CTR) prediction is also the central objective [4, 19, 26]. Despite the ubiquitous usage of clicks, simply relying on clicks as the only supervised training signals may not accurately and comprehensively capture users' real satisfaction, since the implicit click feedback often struggles with clickbaits or title-content mismatching in practice [17]. Moreover, most existing recommendation models intuitively regard all clicks equally as training labels [4, 8, 14], failing to dig out the different intensities of user preferences in each click. To address these issues, an intuitive idea is to enhance the binary clicks with more quantified weights. Dwell time (DT) , which indicates the duration of a user on a clicked item (after clicking and before exiting), is easy-to-collect in real-world systems and perfectly suitable to quantify clicks and discover users' preferences [7, 24]. More dwell time indicates that users are more willing to pay time costs on items, reflecting higher user interests beyond clicks. Dwell time is also a widely-used online metric to measure users' real satisfaction in practical systems [21, 23]. Figure 1: Dwell time as the natural weights of clicks. Article feed Ten things you do not know about cats The language behind flowers Kitty`s house FlowerPedia Content page Ten things you do not know about cats Kitty`s house The cat is a domestic species of small carnivorous mammal, which is widely loved by our human. Cats are always active at dawn and dusk. It is a lonely click and spend time reading items Click: low-cost, binary, may have noises caused by clickbaits Dwell time: high-cost, quantified, could better reflect user real satisfaction There are a few works that jointly consider clicks and dwell time as objectives or features in practical recommendation [2, 18, 22, 27]. However, most of them simply use the original/log dwell time as another training label besides clicks, ignoring further explorations on quantifying relations between dwell time and user satisfaction. Two questions need to be answered in dwell time modeling: (1) What a good recommender system should be? Webelieve that a good recommender system should help users to get useful information more efficiently (rather than pursuing more clicks or dwell time). The central goal is to provide more valid readings for users. Dwell time is intuitively used to define valid reading, while different users and items have different sensitivities on dwell time. For example, some users tend to spend less time reading (i.e., light users). An item's dwell time is also related to its type and total WWW'23 Companion, April 30-May 4, 2023, Austin, TX, USA Ruobing Xie et al. length (e.g., short news V.S. long videos). The valid readings of different users and items should be fairly considered in training. (2) How to accurately quantify user satisfaction with dwell time? Longer dwell time does imply higher satisfaction, while the same dwell time improvement does not always indicate the same user satisfaction improvement. For example, the positive impact of a dwell time improvement from 1s to 15s is much larger than that from 601s to 615s. Intuitively, we hope users to have fewer invalid clicks with too-short dwell time, while we should also avoid overemphasizing clicks with too-long dwell time, since the information gain will get lower and the seesaw effect may harm the learning of long-tail light users and short items. How to design a dwell time function to properly reweight clicks remains to be explored. In this work, we aim to reweight clicks with dwell time to build a good recommender system, where users should have more highquality and efficient readings . Precisely, we propose a simple, effective, and model-agnostic Click reweighting framework to improve the training objectives. First, we define a new behavior named valid read as a dwell time enhanced high-quality click behavior. The valid read selects three types of good clicks as the training signals, considering different demands of (a) the common-sense dwell time threshold learned from the global DT distribution, (b) light users, and (c) short items. Second, we design a novel normalized dwell time function to quantify the posterior user satisfaction from dwell time on each valid read. We discover two characteristics a good normalized DT function should have to guild users to have more valid reads without much negative impact caused by behaviors having too-long dwell time. Finally, we conduct a multi-task learning (MTL) framework containing a valid read prediction tower and a reweighted valid read prediction tower. As a first small step of click reweighting with dwell time, we intentionally select a rather straightforward industry-style model to enable facile expansions. In experiments, we evaluate the Click reweighting framework on a real-world recommender system of WeChat Top Stories. Our model achieves significant improvements in both offline and online evaluations. The contributions of this work are as follows: 1 0.025473 2 0.051393 3 0.077723 4 0.10444 5 0.131517 6 0.158928 7 0.186643 · We highlight the significance of valid read, rethink the quantification of user satisfaction with dwell time modeling, and propose our Click reweighting framework. To the best of our knowledge, we are the first to adopt the valid read behavior with dwell time based click reweighting in real-world recommender systems. 8 0.214634 9 0.242868 10 0.271313 11 0.299935 12 0.3287 13 0.357573 14 0.386519 15 0.4155 16 0.444481 · Wedefine the valid read to collect high-quality clicks considering the demands of different users and items. We also design a simple yet effective normalized dwell time function to model the intrinsic relationships between dwell time and user satisfaction. 17 0.473427 18 0.5023 19 0.531065 20 0.559687 21 0.588132 22 0.616366 23 0.644357 33 · Weevaluate our Click reweighting framework on both offline and online evaluations in a real-world recommender system, achieving significant improvements on various metrics. Currently, the proposed Click reweighting has been deployed on WeChat Top Stories for more than 4 months, affecting millions of users. 24 0.672072 25 0.699483 26 0.72656 27 0.753277 28 0.779607 29 0.805527 30 0.831015 31 0.856051 32 0.880615 0.904692 34 0.928266",
  "2 MODEL DESIGNS AND ANALYSES 35 36": "0.951325 0.973857",
  "2.1 Discussions on Dwell Time Modeling 37 0.995853 38 1.017306 39 1.038209": "Researchers have devoted themselves to exploring the core problem of recommendation: what kind of recommendation do users really need . Recent efforts have shown the advantages of dwell time in 40 1.058558 41 1.078351 42 1.097587 43 1.116264 44 1.134386 45 1.151955 46 1.168975 47 48 49 50 51 52 53 54 55 56 57 1.185451 1.201388 1.216795 1.231679 1.246047 1.259911 1.273278 1.286161 1.298568 1.310513 1.322004 reflecting users' real satisfaction compared to CTR [2, 25, 27]. However, directly optimizing raw dwell time will inevitably guide the model to over-emphasize items with long total durations, making heavy users and long items dominate the model training [16, 22]. We believe that the central demand of users using recommender systems is to get information. Hence, we return to the essence of the relations among dwell time, information gain, and user preference, and conclude the following assumptions: (A1) the positive signals given by the same dwell time are relatively equivalent for different items and users, since they often imply the same valuable time cost that is fair to everyone. (A2) Users need a minimum dwell time to begin to get information from items. Too-short dwell time implies very few (or no) benefits. (A3) The information gain will gradually decrease with the increase of the dwell time when the current dwell time is long enough. Based on these, we define the valid read with a normalized dwell time function in our click reweighting as a better supervised signal for more informative recommendations.",
  "2.2 Valid Read Selection": "Valid reads are high-quality click behaviors that could better reflect users' real preferences, which are naturally selected via dwell time in this work. For a deeper understanding of dwell time, we draw the trends of click numbers with different log dwell time. From Fig. 2 (left) we find that: (1) in general, we could roughly assume that the log dwell time has an approximate Gaussian distribution, i.e., ln 𝑇 = 𝜇 + 𝜎𝜖 , where 𝑇 is a random dwell time and 𝜖 ∼ 𝑁 ( 0 , 1 ) . (2) We regard [ 𝜇 -𝜎, 𝜇 + 𝜎 ] as the mainstream dwell time range. Nearly 19% click behaviors have shorter than 15s dwell time, and nearly 15% click behaviors have longer than 200s dwell time. According to the above assumptions A2 and A3, click behaviors with either too-short or too-long dwell time should be degraded in click reweighting. 0 0.2 0.4 0.6 0.8 1 1.1 1.5 1.9 2.3 2.7 3.1 3.5 3.9 4.3 4.7 5.1 5.5 5.9 6.3 normalized click count log dwell time μ + σ μ - σ μ Figure 2: The trend of log dwell time in our system (left) and the trend of our proposed normalized dwell time (right). 0 0.3 0.6 0.9 1.2 1.5 1.8 1 15 29 43 57 71 85 99 113 127 141 155 169 183 197 211 225 239 normalized dwell time T_N dwell time offset=exp( μ - σ ), where T_N has the largest gradient, making T_N sensitive to valid read exp( μ + σ ), where Δ T_N is less than the minimum precision, avoiding biased negative impacts of too-long items 2.631889 3.94739 5.266827 It is straightforward to roughly set a shared dwell time threshold to collect valid reads. However, simply relying on the threshold to define valid reads will inevitably ignore the significant behavioral information of light users and short items. Hence, we define three types of user-item clicks as our valid read behaviors: · T1: the dwell time is longer than 𝑥 𝑙 seconds. · T2: the user has clicked less than 7 items in the recent week. · T3: the dwell time is longer than 10% of this item's historical dwell time records (i.e., longer than quantile P10). (1) The first type builds the fundamental rule of valid read according to a common-sense threshold 𝑥 𝑙 . We regard 𝑥 𝑙 = exp ( 𝜇 -𝜎 ) of ln 𝑇 as the shared dwell time threshold of valid read, which is adaptive to Reweighting Clicks with Dwell Time in Recommendation WWW'23 Companion, April 30-May 4, 2023, Austin, TX, USA different recommender systems. In our system, exp ( 𝜇 -𝜎 ) is nearly 15s. 19% click behaviors are filtered by T1. For simplicity, we directly adopt a shared DT threshold for all users and items in respect of the absolute value of time costs, while it is also convenient to set customized dwell time thresholds for different user or item groups. (2) The second type puts a patch on light users, considering all light users' click behaviors as supervised signals in training, for their behaviors are rare. We want to avoid critical information loss of long-tail light users that prefer scanning rather than deep reading. (3) The third type considers the relative dwell time on a specific item, retrieving clicks that have a relatively qualified dwell time (top 90%) among all historical clicks on the same item. By this, our valid read shows respect to items with naturally short lengths and less dwell time (e.g., news or short videos). To avoid noises, we further wipe out all clicks having less than 5s dwell time to ensure the minimum availability of valid reads. In our practical system, the T1, T2, T3 types account for 89 . 9%, 2 . 9%, 7 . 2% of the overall valid reads. Only valid reads are used as supervised signals in training.",
  "2.3 Normalized Dwell Time Function": "The valid read selection works as a pre-filter. However, we still face the challenge of precisely defining the goodness of different dwell time values in click reweighting. It is intuitive that the same dwell time improvement has a larger contribution to the quality of a click when the current dwell time is shorter (e.g., [1s → 15s] is larger than [601s → 615s]). Too long dwell time may bring in fatigue that harms user experience [20]. Hence, lots of works adopt MSE with log dwell time as training losses for dwell time prediction [2, 16, 27]. Different from conventional models, we define the valid reads as our high-quality supervised labels and hope to improve the numbers and proportion of valid reads in online systems. Therefore, our dwell time function should possess the following two characteristics C1 and C2 respect to the above assumptions A2 and A3 in Sec. 2.1: · C1: the designed dwell time function curve should be steep with large gradients in the early stage (especially near the valid read threshold exp ( 𝜇 -𝜎 ) ), guiding models to efficiently distinguish valid reads from invalid clicks. · C2: the dwell time function curve should be flat when the dwell time is too long, avoiding too many rewards over longduration items that harms light users and short items. Following these rules, we design our normalized dwell time 𝑇 𝑁 based on the original dwell time 𝑇 with a sigmoid function as:  Fig. 2 (right) shows the trends of 𝑇 𝑁 . 𝑇 𝑁 is monotonically increasing with designed rates compared to log dwell time, where 𝑜𝑓 𝑓 𝑠𝑒𝑡 and 𝜏 are essential parameters to satisfy C1 and C2. 𝑜𝑓 𝑓 𝑠𝑒𝑡 determines the dwell time point with the largest gradient. For C1, we set 𝑜𝑓 𝑓 𝑠𝑒𝑡 = exp ( 𝜇 -𝜎 ) to make the normalized dwell time have the largest gradient on the borderline of valid/invalid reads, which cooperates well with the valid read based supervised training. 𝜏 defines the sharpness of the dwell time curve. For C2, we define an upper threshold 𝑥 ℎ as exp ( 𝜇 + 𝜎 ) , assuming that the dwell time 𝑇 larger than 𝑥 ℎ has no contribution on 𝑇 𝑁 (i.e., the 𝑇 𝑁 improvement of 𝑥 ℎ → 𝑇 is smaller than the minimum precision, e.g., 1 𝑒 -5 in our system). 𝜏 is set to fit the above assumption of 𝑥 ℎ . 𝐴 and 𝐵 are hyper-parameters that scale 𝑇 𝑁 to [ 0 , 𝑇 𝑚𝑎𝑥 ] , where 𝑇 𝑚𝑎𝑥 is the maximum dwell time value of our current online dwell time models. We remain the normalized dwell time range unchanged to reduce possible mismatching issues cooperating with other modules in online. Finally, based on the above discussions, we set 𝑜𝑓 𝑓 𝑠𝑒𝑡 = 15, 𝜏 = 20, 𝐴 = 2 . 319, 𝐵 = 0 . 744 to satisfy C1 and C2. We have also conducted a grid search on these parameters, and find that the current setting does achieve the best online performance.",
  "2.4 Click Reweighting": "The valid read and normalized dwell time settings are designed to filter noises and quantify the qualities of clicks for better user preference learning. In Click reweighting, we adopt a multi-task learning (MTL) framework for both valid read prediction and weighted valid read prediction tasks. Specifically, we conduct a shared bottom to share raw user/item features across two tasks. For the valid read tower, without losing generality, we adopt a 3-layer MLP, which takes raw user/item features 𝑓 𝑢 , 𝑓 𝑑 𝑖 as inputs, and outputs the predicted click probability 𝑃 𝑢,𝑑 𝑖 of user 𝑢 on item 𝑑 𝑖 . Next, the valid read loss 𝐿 𝑣 is defined as:  𝑆 𝑝 and 𝑆 𝑛 indicate the positive (i.e., valid read) set and negative (i.e., invalid click and unclick) set, respectively. Similarly, for the weighted valid read tower, we directly use the normalized dwell time 𝑇 𝑢,𝑑 𝑖 𝑁 as the weight of each ( 𝑢,𝑑 𝑖 ) . Another 3-layer MLP is adopted to output the predicted click probability 𝑃 ′ 𝑢,𝑑 𝑖 . The weighted valid read tower is then trained under the loss 𝐿 𝑤 as follows:  𝐿 𝑣 and 𝐿 𝑤 are linearly combined as the final loss 𝐿 = 𝐿 𝑣 + 𝐿 𝑤 . In online deployment, the sum of two towers' predicted scores is used for online ranking in our system. Jointly considering the original and DT weighted valid read prediction tasks via MTL is beneficial for the overall online performance. Moreover, we have explored enhanced neural networks and MTL methods such as MMoE [10] and PLE [15], while the online improvement is not significant. It may be because the dwell time is highly correlated with clicks. For simplicity, we directly use MLP with shared bottom in our model.",
  "3 EXPERIMENTS": "",
  "3.1 Dataset and Settings": "We conduct both offline and online evaluations on an article recommender system of WeChat Top Stories. The offline dataset contains nearly 29 . 7 𝑀 users, 5 . 3 𝑀 items, and 751 𝑀 instances (including 104 𝑀 clicks and 89 . 6 𝑀 valid reads). All instances are chronologically split into the train set and the test set (571 𝑀 / 180 𝑀 instances). All data are pre-processed via data masking to protect user privacy.",
  "3.2 Offline Evaluation and Ablation Study": "We build four models with different objectives for offline evaluation and ablation study: (a) Single CTR , which only uses CTR as the training objective. (b) CTR+logDT , which is an MTL model WWW'23 Companion, April 30-May 4, 2023, Austin, TX, USA Ruobing Xie et al. 户类型p_10 l1 l2 l3 l4 l5 l6 l7 l8 LL l1 l2 l3 l4 l5 l6 l7 l8 LL 层级 1 2 3 4 5 6 7 P10 7.64 9.35 8.99 9.58 8.77 9.48 10.05 9.83 8.45 7.23 8.09 9.53 8.98 10.34 10.26 10.55 10.20 8.72 5.94% -6.27% 17.85% 8.22% 4.97% 3.82% 3.24% with both CTR and log dwell time as objectives following classical CTR+DT optimization [2, 16]. (c) VR+logDT , an MTL model with valid read (VR) and logDT objectives. (d) VR+NDT (i.e., the final Click reweighting model), which further replaces logDT with our normalized dwell time (NDT). We evaluate them on the valid read prediction task with AUC and RelaImpr as metrics following [4, 13]. All baselines share the same neural network for single/MTL towers, with the same raw features and settings for fair comparisons. Table 1: Offline evaluation on valid read prediction. p_20 p_30 p_40 p_50 p_60 p_70 p_80 p_90 19.10 33.89 53.47 80.56 113.77 165.20 245.63 434.23 Table 1 shows the results, from which we find that: (1) the final Click reweighting model achieves the best performance on valid read prediction. The improvements are significant ( 𝑝 < 0 . 01 with paired t-test) and the deviations of all models are less than ± 0 . 0003. It indicates that our Click reweighting can recommend more highquality items users love to click and read. (2) Comparing models with/without VR and NDT, we find that both valid read filtering and normalized DT reweighting are essential for improving users' valid reads. (3) Single CTR merely focuses on CTR, and thus performs worse than MTL models with dwell time modeling. (4) We have also evaluated these models on the original CTR prediction, where single CTR achieves the best offline AUC for it is naturally designed for this task. However, the Click reweighting model surprisingly achieves the best CTR in the online A/B test (which we care more about). The click reweighting gives top priority to recommending high-quality items which users may have informative reads on , rather than items users are likely to click guided by CTR-oriented training, bringing in long-term benefits via better user experience. 21.91 37.51 58.50 86.28 123.09 178.29 272.18 479.51 20.98 37.19 58.80 85.67 122.35 175.29 262.10 442.86 21.90 38.64 59.61 87.77 126.39 184.18 273.70 480.78 21.18 38.42 61.00 88.75 129.87 186.53 274.76 470.58 22.57 39.06 61.24 91.65 128.97 184.01 276.35 475.12 23.38 41.15 65.22 95.28 135.23 192.23 284.82 491.39 22.68 40.46 63.87 92.94 130.62 183.28 262.56 424.73 21.66 39.51 63.17 92.66 130.70 183.67 266.80 454.29 18.55 32.66 50.68 74.69 107.20 154.07 228.94 395.52 21.60 37.44 56.41 82.44 116.14 160.59 234.06 417.78 21.65 36.81 57.83 83.21 116.37 164.32 242.74 412.30 21.07 37.20 56.55 82.43 117.55 165.72 244.39 422.12 23.15 39.42 58.45 83.01 115.85 167.04 248.74 428.89 23.66 40.17 60.29 85.98 121.85 169.57 248.73 438.58 24.59 41.75 62.73 89.88 125.34 177.55 257.53 433.51 23.47 40.37 61.40 87.35 121.36 169.67 245.83 404.17 21.16 37.91 58.00 84.34 115.64 161.58 237.71 393.91 P20 P30 P40 P50 P60 P70 P80 P90 3.18% -1.03% -1.65% -2.87% -4.89% -6.25% -7.39% -6.90% -3.80% -3.72% -5.14% -6.08% -7.00% -10.02% -10.71% -12.20% 9.31% 2.60% -4.19% -6.46% -10.79% -10.45% -9.47% -8.86% 4.84% 2.85% -1.55% -6.19% -5.52% -7.85% -10.00% -7.69% 5.18% 1.46% -3.81% -5.67% -7.31% -7.64% -9.58% -11.78% 3.49% -0.23% -3.87% -6.01% -7.09% -7.42% -6.37% -4.84% -2.30% -4.05% -8.19% -8.97% -11.52% -12.03% -10.90% -13.29%",
  "3.3 Online Evaluation": "To verify the online power of Click reweighting, we further conduct an online A/B test on WeChat Top Stories. We focus on four online metrics: (a) CTR, (b) average click number per capita (ACN), (c) dwell time (DT), and (d) average impression number per capita (AIN). We conduct the A/B test for 7 days on nearly 5 million users. Table 2: Online A/B tests on WeChat Top Stories. From Table 2 we find that: (1) Both CTR and ACN have significant improvements ( 𝑝 < 0 . 05) armed with valid read. It is impressive that using high-quality valid reads as training objectives can even improve the online click-related metrics. The improvements are further strengthened by adding normalized dwell time, which reconfirms the effectiveness of NDT on user experience. (2) The original dwell time modeling over-emphasizes long dwell time behaviors. Our Click reweighting aims to improve valid reads for all users, thus inevitably sacrificing the performance of dwell time. (3) The improvements in ACN and AIN further imply that users are more willing to use our system, which is the core driving force of growth.",
  "3.4 Online Dwell Time Migration": "In Fig. 3, we discover an interesting dwell time migration trend of users with different activeness. The x-axis indicates the quantile of dwell time (P10 is the shortest 10% dwell time), the y-axis indicates the activeness level (level7 is the most active users), and the z-axis indicates the dwell time changes from baseline to Click reweighting. Wefind that: (1) both light and heavy users have more dwell time on their short dwell time behaviors (especially for less active users). It implies that users tend to have more valid reads. (2) The dwell time of too-long readings inevitably decreases, since too-long items are not over-emphasized due to the normalized dwell time. In contrast, our model pays more attention to the behaviors of light users on short items. (3) The DT migration matches our purpose to provide more informative and efficient recommendations. We hope users get a better reading experience rather than be stuck in our system. Figure 3: Dwell time migration on different dwell time quantiles and different user activeness in an online system. level1 level2 level3 level4 level5 level6 level7 -15.00% -10.00% -5.00% 0.00% 5.00% 10.00% 15.00% 20.00% P10 P20 P30 P40 P50 P60 P70 P80 P90 -15.00%--10.00% -10.00%--5.00% -5.00%-0.00% 0.00%-5.00% 5.00%-10.00% 10.00%-15.00% 15.00%-20.00% heavy/light users' short dwell time behaviors (P10/P20) have dwell time improvements Users have more valid read behaviors after our click reweighting",
  "4 RELATED WORKS": "There are some efforts attempt to discover clickbaits and purify clicks [1, 3, 6, 11, 12]. In real-world scenarios, the dwell time of clicked items is natural and powerful user feedback that can quantify clicks [5, 7, 9, 20, 24]. The content features are often carefully encoded for dwell time prediction [16, 18]. Recently, some works adopt MTL or multi-optimization objectives to jointly consider CTR and dwell time predictions [2, 22, 27]. However, they do not fully address the over-emphasizing issue of too-long items. Zheng et al. [25] designs a watch time gain to measure the relative dwell time on an item, while it loses the essential information of the specific dwell time value in different items. In this work, we propose a novel behavior valid read with a normalized DT to better fit our purpose of enabling more efficient and informative readings.",
  "5 CONCLUSION AND FUTURE WORK": "In this work, we propose a simple yet effective way to reweight clicks via valid read based filtering with normalized dwell time based reweighting. The click reweighting framework has been deployed on a real-world recommender system in WeChat. In the future, we will explore more sophisticated valid read modeling, and theoretically and experimentally investigate the pros and cons of our purposes of click reweighting via long-term online metrics. Reweighting Clicks with Dwell Time in Recommendation",
  "REFERENCES": "[1] Amol Agrawal. 2016. Clickbait detection using deep learning. In Proceedings of NGCT . [2] Jingwu Chen, Fuzhen Zhuang, Tianxin Wang, Leyu Lin, Feng Xia, Lihuan Du, and Qing He. 2019. Follow the Title Then Read the Article: Click-Guide Network for Dwell Time Prediction. TKDE (2019). [3] Yimin Chen, Niall J Conroy, and Victoria L Rubin. 2015. Misleading online content: recognizing clickbait as\" false news\". In Proceedings of the 2015 ACM on workshop on multimodal deception detection . [4] Huifeng Guo, Ruiming Tang, Yunming Ye, Zhenguo Li, and Xiuqiang He. 2017. DeepFM: a factorization-machine based neural network for CTR prediction. In Proceedings of IJCAI . [5] Ahmed Hassan. 2012. A semi-supervised approach to modeling web search satisfaction. In Proceedings of SIGIR . [6] Sawinder Kaur, Parteek Kumar, and Ponnurangam Kumaraguru. 2020. Detecting clickbaits using two-phase hybrid CNN-LSTM biterm model. Expert Systems with Applications (2020). [7] Youngho Kim, Ahmed Hassan, Ryen W White, and Imed Zitouni. 2014. Modeling dwell time to predict click-level satisfaction. In Proceedings of WSDM . [8] Bin Liu, Chenxu Zhu, Guilin Li, Weinan Zhang, Jincai Lai, Ruiming Tang, Xiuqiang He, Zhenguo Li, and Yong Yu. 2020. AutoFIS: Automatic Feature Interaction Selection in Factorization Models for Click-Through Rate Prediction. (2020). [9] Yiqun Liu, Xiaohui Xie, Chao Wang, Jian-Yun Nie, Min Zhang, and Shaoping Ma. 2016. Time-aware click model. TOIS (2016). [10] Jiaqi Ma, Zhe Zhao, Xinyang Yi, Jilin Chen, Lichan Hong, and Ed H Chi. 2018. Modeling task relationships in multi-task learning with multi-gate mixture-ofexperts. In Proceedings of KDD . [11] Martin Potthast, Sebastian Köpsel, Benno Stein, and Matthias Hagen. 2016. Clickbait detection. In Proceedings of ECIR . [12] Lanyu Shang, Daniel Yue Zhang, Michael Wang, Shuyue Lai, and Dong Wang. 2019. Towards reliable online clickbait video detection: A content-agnostic approach. Knowledge-Based Systems (2019). [13] Weiping Song, Chence Shi, Zhiping Xiao, Zhijian Duan, Yewen Xu, Ming Zhang, and Jian Tang. 2019. Autoint: Automatic feature interaction learning via selfattentive neural networks. In Proceedings of CIKM . WWW'23 Companion, April 30-May 4, 2023, Austin, TX, USA [14] Fei Sun, Jun Liu, Jian Wu, Changhua Pei, Xiao Lin, Wenwu Ou, and Peng Jiang. 2019. BERT4Rec: Sequential Recommendation with Bidirectional Encoder Representations from Transformer. In Proceedings of CIKM . [15] Hongyan Tang, Junning Liu, Ming Zhao, and Xudong Gong. 2020. Progressive layered extraction (ple): A novel multi-task learning (mtl) model for personalized recommendations. In Proceedings of RecSys . [16] Tianxin Wang, Jingwu Chen, Fuzhen Zhuang, Leyu Lin, Feng Xia, Lihuan Du, and Qing He. 2020. Capturing Attraction Distribution: Sequential Attentive Network for Dwell Time Prediction. In Proceedings of 2020 . [17] Wenjie Wang, Fuli Feng, Xiangnan He, Hanwang Zhang, and Tat-Seng Chua. 2021. Clicks can be cheating: Counterfactual recommendation for mitigating clickbait issue. In Proceedings of SIGIR . [18] Chuhan Wu, Fangzhao Wu, Tao Qi, and Yongfeng Huang. 2020. User Modeling with Click Preference and Reading Satisfaction for News Recommendation.. In Proceedings of IJCAI . [19] Ruobing Xie, Cheng Ling, Yalong Wang, Rui Wang, Feng Xia, and Leyu Lin. 2020. Deep feedback network for recommendation. In Proceedings of IJCAI . [20] Ruobing Xie, Cheng Ling, Shaoliang Zhang, Feng Xia, and Leyu Lin. 2022. Multigranularity Fatigue in Recommendation. In Proceedings of CIKM . [21] Ruobing Xie, Qi Liu, Liangdong Wang, Shukai Liu, Bo Zhang, and Leyu Lin. 2022. Contrastive cross-domain recommendation in matching. In Proceedings of KDD . [22] Ruobing Xie, Yanlei Liu, Shaoliang Zhang, Rui Wang, Feng Xia, and Leyu Lin. 2021. Personalized approximate pareto-efficient recommendation. In Proceedings of WWW . [23] Ruobing Xie, Yalong Wang, Rui Wang, Yuanfu Lu, Yuanhang Zou, Feng Xia, and Leyu Lin. 2022. Long short-term temporal meta-learning in online recommendation. In Proceedings of WSDM . [24] Xing Yi, Liangjie Hong, Erheng Zhong, Nanthan Nan Liu, and Suju Rajan. 2014. Beyond clicks: dwell time for personalization. In Proceedings of RecSys . [25] Yu Zheng, Chen Gao, Jingtao Ding, Lingling Yi, Depeng Jin, Yong Li, and Meng Wang. 2022. DVR: Micro-Video Recommendation Optimizing Watch-Time-Gain under Duration Bias. In MM . [26] Guorui Zhou, Xiaoqiang Zhu, Chenru Song, Ying Fan, Han Zhu, Xiao Ma, Yanghui Yan, Junqi Jin, Han Li, and Kun Gai. 2018. Deep interest network for click-through rate prediction. In Proceedings of KDD . [27] Tengfei Zhou, Hui Qian, Zebang Shen, Chao Zhang, Chengwei Wang, Shichen Liu, and Wenwu Ou. 2018. Jump: A joint predictor for user click and dwell time. In Proceedings of IJCAI .",
  "keywords_parsed": [
    "recommendation",
    " valid read",
    " dwell time",
    " click reweighting"
  ]
}