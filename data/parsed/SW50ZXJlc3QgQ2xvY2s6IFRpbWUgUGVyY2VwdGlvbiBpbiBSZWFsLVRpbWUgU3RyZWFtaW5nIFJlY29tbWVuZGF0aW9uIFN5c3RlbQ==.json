{
  "Interest Clock: Time Perception in Real-Time Streaming Recommendation System": "Yongchun Zhu Douyin Group Beijing, China zhuyc0204@gmail.com Jingwu Chen ‚Ä† Douyin Group Beijing, China chenjingwu@bytedance.com Ling Chen Douyin Group Shanghai, China chenling.nb@bytedance.com Yitan Li Douyin Group Shanghai, China liyitan@bytedance.com Feng Zhang Douyin Group Shanghai, China feng.zhang@bytedance.com",
  "ABSTRACT": "User preferences follow a dynamic pattern over a day, e.g., at 8 am, a user might prefer to read news, while at 8 pm, they might prefer to watch movies. Time modeling aims to enable recommendation systems to perceive time changes to capture users' dynamic preferences over time, which is an important and challenging problem in recommendation systems. Especially, streaming recommendation systems in the industry, with only available samples of the current moment, present greater challenges for time modeling. There is still a lack of effective time modeling methods for streaming recommendation systems. In this paper, we propose an effective and universal method Interest Clock to perceive time information in recommendation systems. Interest Clock first encodes users' timeaware preferences into a clock (hour-level personalized features) and then uses Gaussian distribution to smooth and aggregate them into the final interest clock embedding according to the current time for the final prediction. By arming base models with Interest Clock, we conduct online A/B tests, obtaining +0.509% and +0.758% improvements on user active days and app duration respectively. Besides, the extended offline experiments show improvements as well. Interest Clock has been deployed on Douyin Music App.",
  "CCS CONCEPTS": "¬∑ Information systems ‚Üí Recommendation systems .",
  "KEYWORDS": "Recommendation, Time Perception",
  "ACMReference Format:": "Yongchun Zhu, Jingwu Chen ‚Ä† , Ling Chen, Yitan Li, Feng Zhang, and Zuotao Liu. 2024. Interest Clock: Time Perception in Real-Time Streaming Recommendation System. In Proceedings of the 47th International ACM SIGIR ‚Ä† Jingwu Chen is the corresponding author. Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. SIGIR '24, July 14-18, 2024, Washington, DC, USA ¬© 2024 Copyright held by the owner/author(s). Publication rights licensed to ACM. ACM ISBN 979-8-4007-0431-4/24/07 https://doi.org/10.1145/3626772.3661369 Zuotao Liu Douyin Group Shanghai, China michael.liu@bytedance.com Conference on Research and Development in Information Retrieval (SIGIR '24), July 14-18, 2024, Washington, DC, USA. ACM, New York, NY, USA, 5 pages. https://doi.org/10.1145/3626772.3661369",
  "1 INTRODUCTION": "Generally, user interests vary from user to user, named personalized user preferences. Most existing recommendation methods [1, 3, 4, 9, 10, 12] focus on modeling static personalized preferences. However, these methods overlook the fact that users' preferences are dynamic and fluctuate with time. For example, in a short video platform, users could prefer news videos in the morning, while they like entertainment videos at night. In a music platform, users like listening to DJs in the morning and sleep-inducing music at night. Thus, it is important to enable recommendation models to perceive time information to provide time-aware personalized service for users, which could significantly improve user experiences. Time perception in recommendation is a very challenging problem, and only a few works attempt to address this problem. For takeaway recommendation, Zhang et al. [11] divided a day into four periods, including morning, noon, night, and last night, and used different graph models for different periods. However, takeaway recommendation inherently has period differences, while other recommendation systems not, e.g., short video platforms and music platforms. In addition, some practical methods encode time gap information in sequential methods [2, 6, 8, 12], which can guide the importance learning of sequential information. However, these sequential methods ignore dynamic preferences over time. To perceive time information, a widely adopted method in the industry is encoding the hour of a day and the day of a week into hour embeddings and day embeddings, named time encoding [5, 7], which achieves remarkable performance. The early recommendation systems adopt a daily training framework, collecting all samples of one day, and shuffling them for training. The time encoding methods work well in the daily training framework. However, in recent years, to improve the timeliness of recommendation systems, many platforms have upgraded the daily training framework to a real-time streaming training framework, in which samples are used for training immediately after they are produced. The real-time streaming framework proposes a new challenge for time perception. In the streaming framework, all training samples at a certain moment have the same time features, SIGIR '24, July 14-18, 2024, Washington, DC, USA Zhu, et al. and recommendation systems are capable of producing tens of millions of samples every hour, which leads to the recommendation model only fitting current time features and forgetting other time information. This discreteness of the time encoding methods can result in periodical online patterns and introduce instability, which cannot work well in streaming recommendation systems. In this paper, we propose an effective and universal method Interest Clock to perceive time information in streaming recommendation systems. The key idea of the proposed method is encoding personalized user interests of 24 hours into a clock. Firstly, we calculate the user's past interests by hour and store the time-aware features in samples. The time-aware features are discrete, with one feature corresponding to each hour. However, users' interests do not change abruptly, e.g., it is unlikely for a user's interests to be significantly different between 7:59 and 8:01. To address the issue of interest abrupt changes caused by discrete interest clock features, we use empirical Gaussian distribution to smooth and aggregate the interest clock features of 24 hours. The proposed Interest Clock method transforms time modeling into time-aware feature modeling. For a certain moment, different users have various time-aware preference embeddings, which can cover the overall feature space. Thus, the proposed method can solve the periodical online pattern and instability problems of time encoding methods in real-time streaming recommendation systems. The main contributions of our work are summarized in three folds: ¬∑ To enable recommendation systems to perceive time information, we propose an effective and universal method named Interest Clock. To the best of our knowledge, we are the first to tackle the time perception problem in real-time streaming recommendation systems. ¬∑ Weconductonline experiments, obtaining +0.509% and +0.758% improvements on user active days and app duration respectively, which obtains the biggest improvement of a single model in 2023. In addition, offline experiments also demonstrate its effectiveness. ¬∑ Interest Clock has been widely deployed in online recommendation systems of Douyin Music App, indicating its superior effectiveness and universality.",
  "2 RELATED WORK": "Time encoding [5, 7] is a widely adopted method in the industry to perceive time information, which encodes the hour of a day and the day of a week into hour embeddings and day embeddings. However, time encoding methods transform time into discrete embeddings, which can not work in modern real-time streaming recommendation systems. For takeaway recommendation, Zhang et al. [11] divided a day into four periods, including morning, noon, night, and last night, and used different graph models for different periods, which is difficult to deploy in other scenarios. In addition, industrial engineers usually encode time gap in sequential methods [2, 6, 8, 12], which is only capable of better learning the significance of sequential information, failing to directly model time information. To the best of our knowledge, we are the first to tackle the time perception problem in real-time streaming recommendation systems. Figure 1: Interest Clock first encodes users' time-aware preferences into a clock (hour-level personalized features) and then uses Gaussian distribution to smooth and aggregate them into the final interest clock embedding according to the current time for the final prediction. Request Time Interest Clock Emb Deep Network Ohter Features Output Rap Pop Rock Folk",
  "3 PROPOSED METHOD": "In this section, we introduce the details of our proposed method Interest Clock. In Section 3.1, we specify the common setup of a recommendation task in industrial recommendation systems. In Section 3.2, we introduce the details of feature extraction. In Section 3.3, we introduce the proposed method.",
  "3.1 Recommendation Task Setup": "First, we consider the common setup for a binary classification task, such as CTR prediction in recommendation systems. Each sample consists of the input raw features and a label ùë¶ ‚àà { 0 , 1 } , and these features are transformed into low-dimensional representations, named feature embeddings, denoted as [ ùíó 1 , ¬∑ ¬∑ ¬∑ , ùíó ùëõ ] , where ùëõ indicates the number of raw features. The prediction of a recommendation model ùëì (¬∑) with the embeddings as inputs is formulated as:  The cross-entropy loss is often used as the optimization target for binary classification:  In this paper, we focus on the representation of time information, denoted as ùíó ùë°ùëñùëöùëí .",
  "3.2 Feature Engineer": "The simple time encoding methods [5, 7] directly concatenate the embeddings of the current hour ùíó ‚Ñéùëúùë¢ùëü and the embedding of the current day ùíó ùëëùëéùë¶ into a time embedding, denoted as ùíó ùë°ùëñùëöùëí = [ ùíó ‚Ñéùëúùë¢ùëü ; ùíó ùëëùëéùë¶ ] . Our proposed method aims to encode time-aware personalized preferences. Thus, the first step is extracting timeaware personalized features. Firstly, we split a day into 24 buckets to represent 24 hours of a day. Then, we compute users' time-aware preferences from the consumption data of users in a certain hour in the past 30 days. For example, we obtain all samples generated by users from 7:00 to 8:00 in the past 30 days, and each sample has multiple labels (e.g., like, skip, finish, dislike) and many features (e.g., genre, mood, language). The score of each feature is computed as:  Interest Clock: Time Perception in Real-Time Streaming Recommendation System SIGIR '24, July 14-18, 2024, Washington, DC, USA Table 1: Online A/B testing results of a ranking task. Each row indicates the relative improvement with our Interest Clock over the baseline (a DCN-V2-based multi-task model). The square brackets represent the 95% confidence intervals for online metrics. Statistically significant improvement is marked with bold font in the table. Low-, Middle-, and High-active indicate different user groups. Table 2: Offline results (AUC and UAUC) on the industrial datasets DouyinMusic-20B. where ùõº, ùõΩ,ùõæ, ùúî are the hyperparameters. ùê∂ùëõùë° indicates the number of samples of the corresponding behavior, and the samples contain the target feature denoted as ùëì ùëíùëé . With Equation (3), we calculate the score of a certain hour for several given features, including genre, mood, and language, and the top three genre/mood/language features are used as the time-aware features. Thus, the embeddings of the time-aware features, e.g., genre, are denoted as ùíó ùëîùëíùëõùëüùëí ùë°ùëñùëöùëí = [ ùíó ùëîùëíùëõùëüùëí 1 , ùíó ùëîùëíùëõùëüùëí 2 , ¬∑ ¬∑ ¬∑ , ùíó ùëîùëíùëõùëüùëí 24 ] . Similarly, the embeddings of other time-aware features can be obtained in the same way, denoted as ùíó ùëöùëúùëúùëë ùë°ùëñùëöùëí , ùíó ùëôùëéùëõùëî ùë°ùëñùëöùëí .",
  "3.3 Interest Clock": "Figure 1 overviews our proposed method Interest Clock, whose goal is to enable the model to perceive time information in streaming recommendation systems. With the feature extraction procedure, we have encoded users' time-aware personalized preference into a clock, i.e., the hour-level features. Two simple methods can be exploited to aggregate interest clock features, (1) concatenate the interest embeddings of 24 hours into one embedding, and (2) according to current request time ùë° , feed the model with the corresponding interest embedding ùíó ùë° . The first method relies on adaptive learning of the importance of each hour-level feature by an optimization procedure, called Adaptive Clock in this paper. However, we find it difficult for deep models to adaptively learn the feature weights, because the model would overfit the current time and forget information of other time in streaming systems (the same problem in time encoding methods as introduced in Section 1). The second method only uses the time-aware preference embedding of the current time, called Naive Clock in this paper. However, Naive Clock faces a sudden change of time-aware features at an hourly time. To solve the shortcomings of the above two methods, we propose Gaussian Interest Clock, which aggregates the time-aware embeddings of 24 hours with an empirical Gaussian distribution. The interest clock embedding can be formulated as:   where ùúé, ùúá are empirically set to 1 and 0, and ùëêùë¢ùëü _ ùë°ùëñùëöùëí indicates current request time. Finally, the interest clock embedding is concatenated with other feature embeddings and fed into a deep network for predictions. The overall framework is trained with the cross-entropy loss as Equation (2).",
  "4 EXPERIMENTS": "In this section, we conduct extensive offline and online experiments with the aim of answering the following evaluation questions: EQ1 Can Interest Clock bring improvement to the performance of online recommendation tasks? EQ2 How does the Interest Clock perform in industrial datasets? EQ3 What are the effects of time information in real-world recommendation systems? Datasets. We evaluate Interest Clock with baselines on a largescale industrial recommendation dataset. DouyinMusic-20B : Douyin provides a music recommendation service, with over 10 million daily active users. We collect from the impression logs and get one dataset. The dataset contains more than 20 billion samples, denoted as DouyinMusic-20B . Each sample of the industrial datasets contains more than one hundred features, including both non-ID meta features (gender, age, genre, mood, scene, and so on) and ID-based personalized features (user ID, item SIGIR '24, July 14-18, 2024, Washington, DC, USA Zhu, et al. Figure 2: Analysis of the time information in recommendation systems. The horizontal axis represents hours, and the vertical axis represents the percentage of impression counts. 10090 sorrow aynamic happy 909 miss chill romantic memory 809 exclted NULL Inspirational 709 Ionely healing tense 609 angry funny sweet cute Iuna_chill 400 309 20% 1090 11 12 13 14 15 21 22 ID, artist ID, interacted ID sequence), which can represent the realworld scenarios. We use 'Finish' as the label. The DouyinMusic-20B dataset contains samples from Douyin Music across the time span of 8 weeks from August to September 2023. Then, we take the first 6 weeks as the training set, the following 1 week as the validation set, and the remaining 1 week as the test set. the best baseline significantly. UAUC of Adaptive Clock is worse than the baseline, and the reason could be adaptive weights of time information are difficult to learn in streaming recommendation systems. We find that Gaussian Clock outperforms Naive Clock, which demonstrates empirical Gaussian weights are effective. Online A/B Testing (EQ1). To verify the real benefits Interest Clock brings to our system, we conducted online A/B testing experiments for more than one month for the ranking task in Douyin Music App. We evaluate model performance based on two main metrics, Active Days and Duration. We also take additional metrics, which evaluate user engagement, including Like, Finish, Comment, and Play, which are usually used as constraint metrics. We apply the proposed Interest Clock on a DCN-V2-based multi-task model [9] which is deployed in the online ranking tasks. The online A/B results of low-, middle-, high-active, and whole users are shown in Table 1. For the main metrics Active Days and Duration, the proposed Interest Clock achieves a large improvement of +0.509% and +0.758% for all users with statistical significance, which is remarkable given the fact that the average Active Days and Duration improvement from production algorithms is around 0.05% and 0.1% respectively. In addition, the results demonstrate that Interest Clock could improve the recommendation performance for users of different activity levels. Offline Results (EQ2). We adopt AUC and UAUC as offline metrics. We use Naive, Adaptive, and Gaussian Interest Clock to replace the time encoding methods in the online baseline DCN-V2based multi-task model. The experimental results on the industrial dataset are shown in Table 2. The results further reveal several insightful observations. Gaussian Interest Clock could outperform Analysis (EQ3). To analyze the influence of time information in recommendation systems, we visualized the distribution of music mood tags at different time as shown in Figure 2. The results further reveal several insightful observations. (1) The distribution of content provided by recommendation systems varies over time, which demonstrates the users' preferences follow a dynamic pattern over a day. (2) The overall content distribution is consistent with our intuition. For example, the sorrow songs account for more impressions in 0:00-8:00 than 12:00-20:00.",
  "5 CONCLUSION": "In this paper, to enable recommendation systems to perceive time changes, we propose an effective method Interest Clock. Firstly, we encode users' time-aware preferences into a clock, obtaining hourlevel personalized preference features. Then, we use Gaussian distribution to smooth and aggregate them into the final interest clock embedding, which is fed into a deep network for the final predictions. We demonstrated the superior performance of the proposed Interest Clock in offline experiments. In addition, we conducted online A/B testing, obtaining +0.509% and +0.758% improvements on user active days and app duration respectively, which demonstrates the effectiveness and universality of Interest Clock in online systems. Moreover, Interest Clock has been deployed on ranking tasks in multiple applications of Douyin Group. SIGIR '24, July 14-18, 2024, Washington, DC, USA Interest Clock: Time Perception in Real-Time Streaming Recommendation System",
  "REFERENCES": "[1] Rahul Bhagat, Srevatsan Muralidharan, Alex Lobzhanidze, and Shankar Vishwanath. 2018. Buy it again: Modeling repeat purchase recommendations. In Proceedings of the 24th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining . 62-70. [2] Jianxin Chang, Chenbin Zhang, Zhiyi Fu, Xiaoxue Zang, Lin Guan, Jing Lu, Yiqun Hui, Dewei Leng, Yanan Niu, Yang Song, et al. 2023. TWIN: TWo-stage Interest Network for Lifelong User Behavior Modeling in CTR Prediction at Kuaishou. In Proceedings of the 29th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining . [3] Paul Covington, Jay Adams, and Emre Sargin. 2016. Deep neural networks for youtube recommendations. In Proceedings of the 10th ACM Conference on Recommender Systems . 191-198. [4] James Davidson, Benjamin Liebald, Junning Liu, Palash Nandy, Taylor Van Vleet, Ullas Gargi, Sujoy Gupta, Yu He, Mike Lambert, Blake Livingston, et al. 2010. The YouTube video recommendation system. In Proceedings of the fourth ACM Conference on Recommender systems . 293-296. [5] Yinfeng Li, Chen Gao, Xiaoyi Du, Huazhou Wei, Hengliang Luo, Depeng Jin, and Yong Li. 2022. Automatically Discovering User Consumption Intents in Meituan. In Proceedings of the 28th ACM SIGKDD Conference on Knowledge Discovery and Data Mining . 3259-3269. [6] Qi Pi, Guorui Zhou, Yujing Zhang, Zhe Wang, Lejian Ren, Ying Fan, Xiaoqiang Zhu, and Kun Gai. 2020. Search-based user interest modeling with lifelong sequential behavior data for click-through rate prediction. In Proceedings of the 29th ACM International Conference on Information & Knowledge Management . 2685-2692. [7] Yukun Ping, Chen Gao, Taichi Liu, Xiaoyi Du, Hengliang Luo, Depeng Jin, and Yong Li. 2021. User Consumption Intention Prediction in Meituan. In Proceedings of the 27th ACM SIGKDD Conference on Knowledge Discovery & Data Mining . 3472-3482. [8] Jiaxi Tang and Ke Wang. 2018. Personalized top-n sequential recommendation via convolutional sequence embedding. In Proceedings of the eleventh ACM International Conference on Web Search and Data Mining . 565-573. [9] Ruoxi Wang, Rakesh Shivanna, Derek Cheng, Sagar Jain, Dong Lin, Lichan Hong, and Ed Chi. 2021. Dcn v2: Improved deep & cross network and practical lessons for web-scale learning to rank systems. In Proceedings of the Web Conference 2021 . 1785-1797. [10] Fuzheng Zhang, Nicholas Jing Yuan, Defu Lian, Xing Xie, and Wei-Ying Ma. 2016. Collaborative knowledge base embedding for recommender systems. In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining . 353-362. [11] Yuting Zhang, Yiqing Wu, Ran Le, Yongchun Zhu, Fuzhen Zhuang, Ruidong Han, Xiang Li, Wei Lin, Zhulin An, and Yongjun Xu. 2023. Modeling Dual PeriodVarying Preferences for Takeaway Recommendation. In Proceedings of the 29th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining . [12] Guorui Zhou, Xiaoqiang Zhu, Chenru Song, Ying Fan, Han Zhu, Xiao Ma, Yanghui Yan, Junqi Jin, Han Li, and Kun Gai. 2018. Deep interest network for click-through rate prediction. In Proceedings of the 24th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining . 1059-1068.",
  "A BIOGRAPHY": "Yongchun Zhu is currently a researcher at Douyin Group, Beijing, China. He received his Ph.D. degree from Institute of Computing Technology, Chinese Academy of Sciences, Beijing, China. His main research interests include recommendation systems and transfer learning. He has published over 30 papers in top-tier international conferences and journals including KDD, WWW, SIGIR, TKDE, TNNLS and so on. Homepage: https://scholar.google.com. hk/citations?user=iKUIgeQAAAAJ",
  "keywords_parsed": [
    "Recommendation",
    "Time Perception"
  ],
  "references_parsed": [
    {
      "ref_id": "b1",
      "title": "Buy it again: Modeling repeat purchase recommendations"
    },
    {
      "ref_id": "b2",
      "title": "TWIN: TWo-stage Interest Network for Lifelong User Behavior Modeling in CTR Prediction at Kuaishou"
    },
    {
      "ref_id": "b3",
      "title": "Deep neural networks for youtube recommendations"
    },
    {
      "ref_id": "b4",
      "title": "The YouTube video recommendation system"
    },
    {
      "ref_id": "b5",
      "title": "Automatically Discovering User Consumption Intents in Meituan"
    },
    {
      "ref_id": "b6",
      "title": "Search-based user interest modeling with lifelong sequential behavior data for click-through rate prediction"
    },
    {
      "ref_id": "b7",
      "title": "User Consumption Intention Prediction in Meituan"
    },
    {
      "ref_id": "b8",
      "title": "Personalized top-n sequential recommendation via convolutional sequence embedding"
    },
    {
      "ref_id": "b9",
      "title": "Dcn v2: Improved deep & cross network and practical lessons for web-scale learning to rank systems"
    },
    {
      "ref_id": "b10",
      "title": "Collaborative knowledge base embedding for recommender systems"
    },
    {
      "ref_id": "b11",
      "title": "Modeling Dual PeriodVarying Preferences for Takeaway Recommendation"
    },
    {
      "ref_id": "b12",
      "title": "Deep interest network for click-through rate prediction"
    }
  ]
}