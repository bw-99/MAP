<h1>abstract</h1> <p>The model-based investing using financial factors is evolving as a principal method for quantitative investment. The main challenge lies in the selection of effective factors towards excess market returns. Existing approaches, either hand-picking factors or applying feature selection algorithms, do not orchestrate both human knowledge and computational power. This paper presents iQUANT, an interactive quantitative investment system that assists equity traders to quickly spot promising financial factors from initial recommendations suggested by algorithmic models, and conduct a joint refinement of factors and stocks for investment portfolio composition. We work closely with professional traders to assemble empirical characteristics of "good" factors and propose effective visualization designs to illustrate the collective performance of financial factors, stock portfolios, and their interactions. We evaluate iQUANT through a formal user study, two case studies, and expert interviews, using a real stock market dataset consisting of 3000 stocks × 6000 days × 56 factors. </p><h1>sections</h1><h2>heading</h2> <p>Introduction </p><h2>text</h2> <p>Quantitative investment using algorithmic trading has accounted for over 85% of transactions in US stock markets since 2012 [GK13]. There is a growing demand for machine learning models that can describe and explain the price change of an individual or a portfolio of stocks in the market. Factor investing is one of the most widely used strategies in quantitative investment. In a factor investing paradigm [Tsi18, FF92, FF04], a selective collection of financial variables called factors (e.g., a company's fundamental data and its growth measures) are used as input predictors and stock returns are set as target outcomes to build predictive models. With these models, traders forecast future stock returns regularly in order to construct time-sensitive portfolios composed of a small set of high-return securities. The returns of these securities are expected to beat the average market return, which is known as the excess return. Recent global surveys show that the factor investing paradigm is employed by 90% of institutional investors to manage at least part of their portfolio [MAHG16]. The percentage of assets traded with factor investing is over 30% in size and still fast-growing.
Despite the prevalence of factor investing, selecting an effective set of factors for market investment is a difficult task. There can be hundreds of candidate factors or more available for predictive mod-els. Currently, most quantitative traders manually select factors by comparing their corresponding portfolio returns in a standard backtesting. Such a trial-and-error approach is indirect, less intuitive, and often requires an exhaustive search in the vast combinatorial factor space. To compute returns from a set of factors, a predictive model and stock portfolio need to be constructed, whose interactions with the selected factors are not fully understood and utilized in the current approach. Traders must also speculate an initial factor selection for evaluation. On the other hand, feature selection methods in machine learning research [GE03] have been applied to this domain, but not as an end-to-end approach like many other fields. Algorithm-selected factors are mostly used as a reference or starting point of the manual selection process, as these factors (especially in black-box models) are not trusted by traders until they can be explained and evaluated. There are currently few tools that can combine human intelligence (e.g., prior knowledge of a factor's utility) and computational power (e.g., assessing stability and sensitivity of a factor) for factor selection in stock markets. This work is committed to three essential requirements of interactive factor investing. First, traders need an intuitive and comprehensive way to assess the performance of numerous factors with respect to excess returns. Second, high-performance factors need to be selected and refined together with high-return stocks in the construction of an investment portfolio. Third, portfolios need to be evaluated and compared in the industry-standard backtesting for their returns in both past and future outlook. To meet these requirements, we present iQUANT (interactive Quantitative investment Using spArse regressioN facTors), a visual analytics system that seamlessly integrates human and algorithmic factor selection for effective factor investing in stock markets. iQUANT enjoys the best of both worlds from human intelligence by a heuristic search in the combinatorial factor space and from computational power by summarizing and presenting key performance metrics of factors and stocks in close interactions. The contributions of this work can be summarized as follows.
• We explore the use of sparse regression models as the initial feature selection method for factor investing. Sparse regression models are preferred as they optimize the procedure between factor selection and stock prediction in the same process. Performance metrics of factors are computed, including not only their feature weights, but also the factor contribution that describes its importance to the prediction. • We introduce elaborate visualization designs that comprehensively illustrate the performance of factors in the regression model to predict the prices of candidate stocks. Our designs are based on expert studies about empirical characteristics of valuable factors, including stability and sensitivity. • On top of the visualization interface, we propose an interaction framework for factor investing that allows traders to jointly select high-performance factors and high-return stocks in an integrated model-building and portfolio-construction process. By our framework, traders can iteratively refine the factor selection and stock portfolio based on visual evidence shown in the interface. The industry-standard backtesting is also supported. • We evaluate iQUANT in a formal user study comparing with baseline alternatives. Case studies with domain experts on targeted user tasks are conducted using a real stock market dataset.
Expert feedback about iQUANT is also reported and discussed. </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Related Work </p><h2>text</h2> <p> </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Financial Data Visualization </p><h2>text</h2> <p>Financial data, such as stock/fund prices and economic indicators, has been widely used by traders and investors to guide their investment decisions. Currently, few studies have been done in integrating visualization into the factor investing process. Some existing studies [CHL * 03,RSE09,SLFE11] apply visualizations to help manage investment portfolios. FundExplorer [CHL * 03] introduces a distorted treemap to visualize both the composition of a fund's portfolio and the remaining stocks. Their design facilitates the convenient retrieval of complementary funds to achieve portfolio diversification. FinVis [RSE09] employs visualization to help non-experts understand the expected returns, risks and the changing context of multiple portfolios. PortfolioCompare [SLFE11] displays the variability and correlation of a portfolio's risks and returns by scatterplots and distribution charts. Their designs can assist users in making better investments according to their risk preferences. None of these visualization tools is integrated with predictive and feature selection models for factor investing. </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Interactive Feature Selection </p><h2>text</h2> <p>Feature selection is a key step in machine learning. Prior studies have focused on algorithmic feature selections [LCW * 17], whose mechanism and reasoning are often opaque to users. Inspired by prior research on predictive model visualization [LXL * 18, PKWQ20,ZWLC19,MQB19,EASD * 19], interactive feature selections have been widely studied. These studies allow users to visually explore the feature space by novel representations and interactive interfaces. Seo and Shneiderman [JS04] proposed a rankby-feature framework for the exploration of multidimensional data. Data features are ranked and visualized by scatter plots, bar charts, etc. Johansson and Johansson [JJ09] utilized parallel coordinates to visualize data features, with the order determined by user-defined metrics.
On the other hand, there are some works considering the relationship between features and predictive models. For example, SmartStripes [MBD *  11]  Existing studies summarize the feature dependency or performance by hybrid quality measures (e.g., feature ranking), but the temporal evolution of features are rarely considered. In factor investing, the temporal dynamics of financial factors (features) and their influence on the prediction model are crucial, which makes existing work not suitable for our scenario. </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>System Overview </p><h2>text</h2> <p>In this section, the technical background of interactive factor investing is introduced, on which key user requirements are summarized.
To meet these requirements, four user tasks are defined which are achieved by a pipeline design in our system. </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Background </p><h2>text</h2> <p>Historically, factor investing originated from the Capital Asset Pricing Model (CAPM) proposed by Sharpe [Sha64] and Linter [Lin65], which uses a single factor of a stock's sensitivity to market returns to explain stock returns. Then, researchers and practitioners continued to discover new factors related to stock returns. Notably, Fama and French [FF92] proposed the famous three-factor model which considers a size factor (large v.s. small capitalization stocks) and a value factor (high v.s. low book-to-market ratios) in addition to the market sensitivity factor. Later, many factors explaining stock returns were discovered, including a company's recent fundamental data [Asn97], the long-term income growth of companies [PLdSSV98, DS97], etc.
In a typical quantitative investment scenario for stock markets, traders hold a portfolio composed of a collection of individual stocks appropriately mixed in value. The portfolio is adjusted in regular time intervals, which is also known as the trading cycle. Depending on the style of traders and funds, the trading cycle can range from one day/week (e.g., private equity) to several months (e.g., public funds). By the factor investing paradigm, at the beginning of each trading cycle, traders pick a few factors based on their experience, domain knowledge, market status and factor returns. Quantitative models are then built up over historical market data, which try to establish linkages between factors and stock returns. Both machine learning and statistical models have been applied in this stage [CG20]. From model-predicted stock returns, traders further apply a trading strategy to determine how to adjust their investment assets, i.e., when and which stocks to buy/sell. Because it is extremely hard to forecast how the portfolio adjustment decision performs in the upcoming trading cycle, a standard backtesting helps to evaluate its returns on historical data. The model consistently earns excess returns to the market, or at least in recent cycles, is considered good in the context of quantitative investment. </p><h2>publication_ref</h2> <p>['b15', 'b0'] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Task Characterization </p><h2>text</h2> <p>The factor investing paradigm introduced above seems straightforward. However, due to the closedness of the quantitative investment community, we only came to this understanding after pilot studies with expert traders in several mutual funds, both public and private ones. In the interviews, almost all of them mentioned a key difficulty in the factor investing practice, the selection of valuable factors. While during their long-term jobs, a number of factor combinations proven in the past have been accumulated, they never stop finding and evaluating new factors because stock fluctuations in the future can hardly be entirely the same as the past. In a sense, the ability to discover new factors is the central competence of quantitative traders and accounts for most of their performance difference.
As we learned from experts in the interview, the current factor selection process is mostly done manually. A major user pain point lies in that the evaluation of selected factors are indirect, less intuitive, and often requires an exhaustive search in the vast combinatorial factor space to identify the best factor collection. In the standard backtesting of quantitative models, to be able to compute model returns, the learning/statistical algorithm and the focused stock need to be determined in addition to the factor selection. Importantly, these model returns are often the result of interactions among factor, model and stock selections. Users often require a tedious trialand-error comparison process to determine factors. As such a process is done in every trading cycle, efficiency is also a critical consideration not to be neglected. Meanwhile, automatic factor selections by machine learning algorithms (e.g., feature selection) have been incorporated in a trader's job. Due to explainability concerns, these algorithm-picked factors are only used as a starting point or reference for manual factor selection until traders can understand their working mechanism. To this end, interactive factor investing systems that can integrate feature selection, model building, and human intelligence in heuristic factor search, as well as visually explain selected factors are of great demand. Below we summarize key user requirements collected from our expert studies.
R1. Direct and intuitive factor evaluation. As there are a large number of candidate factors, for a given pool of stocks, the system should recommend an initial factor selection for users to start with (R1.1). Importance measures of these factors should be computed in the context of quantitative models to account for the interaction between factors and models. These factor importance and the performance of underlying stock/model need to be presented comprehensively to allow intuitive factor evaluation (R1.2). </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>R2. Interaction support for factor and portfolio selection. </p><h2>text</h2> <p>Based on evaluations of factor and stock performance, the system should support appropriate interaction to help construct stock portfolios to invest. This requires interactions to jointly select and refine factors and stocks, as well as a mechanism to help users understand.
R3. Integrated model building and backtesting. In the factor selection and evaluation, the system should automatically train quantitative models to predict stock returns based on selected factors and stocks, algorithmically or jointly (R3.1). In factor investing, backtesting of these models should be performed to compare portfolio returns and guide investment decisions (R3.2).
To meet the requirements of expert traders, we target to build a visual analytics system that can support the following key tasks.
T1. Selection of an initial pool of stocks and factors. Traders can start from all the stocks in the market for their investment analysis. More frequently, s/he focuses on a few sectors (per funder's requirements) and picked several stocks from each sector to construct a balanced initial stock portfolio. Our system provides an interface to allow users to manually determine the initial stock portfolio from the list of stocks organized by sectors. Initial factor selections are automatically recommended based on the stock portfolio. (R1.1) T2. Evaluation of factors through visualization. Our system illustrates the performance of individual factors in a comprehensive visualization interface. Users can visually identify valuable factors by examining key dimensions such as stability and sensitivity. The stock returns of quantitative models are also displayed. (R1.2) T3. Interactive joint factor refinement and portfolio adjustment. Traders select factors and stocks to construct investment portfolios in an interactive and iterative manner. Upon each refinement of factors or stock portfolio, the stock return of the resulting model is displayed immediately, which provides visual evidence for user's heuristic factor search. (R2) T4. Evaluation and comparison of portfolio returns. To compute portfolio returns, quantitative models are automatically built up over selected factors (R3.1). Traders compare the temporal dynamics of returns from alternative portfolios and select the best portfolio in a standard backtesting (R3.2). </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>System Design </p><h2>text</h2> <p>We propose iQUANT, a visual analytics system supporint all the four user tasks defined above. iQUANT features a pipelined design as shown in Figure 1. In the first stage, the system takes three types of stock market data. The first type is stock transaction data, notably the stock daily opening/closing prices. The second type is market information, including but not limited to financial statements (total assets, debts, cash flows, etc.), market news, and financial reports. The third and most critical part of data are factors computed from stock transactions and market information, which is used in our system for user selection and model building. In this application, we apply data from a major stock market consisting of 3,000 stocks during 30 years (1990-2018). The data is collected from both external sources (e.g., open APIs for transaction data) or by internal computations (e.g., financial factors). The underlying technique of our system can be easily extended to support other stock markets.
In the second stage of Figure 1, we integrate a sparse regression model to carry out factor selection and return prediction simultaneously. The performance of selected factors and predictive models are visualized in iQUANT . The result of interactive factor investing is evaluated in a standard backtesting view in the final stage.
The iQUANT system is a web-based full-stack application. All data are stored in MongoDB. The front-ends use Vue.js and D3.js libraries. The sparse regression model is time-consuming. However, it only takes ∼20 seconds in the back-end to compute a sector (dozen) of stocks and respond to the web browser. All performance is measured in a laptop requesting a four-CPU cloud server. We expect to upgrade the server to further reduce computation time. </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>['fig_1', 'fig_1'] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Predictive Analytics </p><h2>text</h2> <p> </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Sparse Regression Model </p><h2>text</h2> <p>The interactive factor investing approach takes two steps to make final decisions on portfolio adjustment. First, the collection of financial factors are used to build models on the pool of candidate stocks for investment. Second, traders evaluate the predicted stock returns by the model and decide on the portfolio adjustment. In iQUANT, the second step is achieved by user interactions with the interface to understand the model output, and using existing trading strategies/algorithms (beyond the scope of this paper). In this part, we describe a suite of sparse regression models applied in the first step to jointly recommend factors (i.e. feature selection) and predict stock returns (i.e., model optimization). The sparse regression model is a popularly-used one in industry. Users can replace it with other statistics/machine learning models with similar output format. We include the sparse regression model to demonstrate the workflow of iQUANT.
Consider the model for a stock ϒ during a time period of Γ = [T + 1, T + L], where L is the length of Γ and any time t ∈ Γ indicates the tth trading day. Γ is further partitioned into N trading 
+ L + 1] compose a matrix X = (x 1 , • • • , x T+L+1 ) where x i = (x i1 , • • • , x iF ) . The modeling of stock ϒ in Γ takes N steps, corresponding to the trading cycles of τ 1 , • • • , τ N ,
respectively. Consider the ith trading cycle τ i , a sub-vector of actual stock returns is used as outcomes, denoted by y (i) = (y (i-1)D+2 , • • • , y (i-1)D+T +1 ). A sub-factor-matrix is used as the design matrix (predictors), denoted by X (i) = (x (i-1)D+1 , • • • , x (i-1)D+T ). We fit a sparse regression model:
y (i) = w (i) X (i) + b (i) + ε (i) (1)
Subject to the objective function:
Minimize Lasso NLL = NLL + 1 2 λ [α||w (n) || 1 + (1 -α)||w (n) || 2 2 ]
(2) where w (i) = (w
(i) 1 , • • • , w (i) F ) denotes the weight vector of financial factors in the fitted model, b (i) is the bias, ε (i) is the error term, ||•|| 1 (|| • || 2 ) is L 1 (L 2
) norm of the vector. D is set to 21 (average number of monthly trading days). The best weight vector is computed by minimizing the negative log likelihood (NLL) of a linear regression term plus L 1 and L 2 penalty terms of the weight vector. The penalty terms shrink the weight of unimportant factors to zero. On each trading cycle, the model is applied to predict daily stock returns.
Note that λ and α in Eq. (2) control the degree of model sparsity and weights between L 1 and L 2 terms. In this work, we provide three choices of modeling: α = 1 (without the L 2 term), the famous Lasso model [Tib96] with a fixed λ ; LassoCV model using 10fold cross-validation to determine λ of the Lasso model The sparse regression model achieves feature selection (L 1 and L 2 penalty terms) and model optimization (regression term) simultaneously. This is extremely helpful to alleviate the overfitting effect in the factor investing case when the number of predictors (F = 56 in our implementation) is comparable to the number of training samples (T = 200). Though we apply a basic linear regression for stock prediction, the sparse models with L 1 and L 2 penalties can be easily extended to support more sophisticated models such as nonlinear models using customized kernel functions. </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Financial Factors </p><h2>text</h2> <p>For factor computation, we adopt the result of a latest white paper on the target stock market [Tsi18], which recommends six types of 56 factors with each factor characterizes a key aspect of a stock:
• Transaction friction: 17 factors delineating overall status of a company (e.g., firm size by its market value, age of a firm) and transaction statistics (e.g., volatility, risks measured by stock returns compared with the market return); • Momentum: 5 factors computing daily stock returns in the recent 6/12 months, the change of momentum, and specially defined momentums; • Value: 8 factors including the famous book-to-market ratio proposed by Fama and French [FF92], the asset-to-market ratio, and other company performance related ratios; • Growth: 11 factors describing the growth of a company's asset, debt, market value, sales, profit, tax, etc; • Profitability: 8 factors quantifying return on equity, return on asset, and other factors related to company profits; • Liquidity: 7 factors characterizing the liquidity performance of a company, including current ratio, quick ratio, cash flow to debt ratio, etc.
For the above factors, the ranges of their values differ significantly from each other. Also, their values can change dramatically along with the stock market. Since all the factor values are normalized initially, the relative importance of each factor can be assessed, which can facilitate the factor analysis. The sparse regression model in iQUANT outputs three measures to delineate the importance of each factor in the prediction. Take the jth factor in the ith trading cycle (e.g., daily, monthly or quarterly) as an example, the three measures are as follows:
• Factor weight learned in the model, denoted by w (i) j ;
• Factor value changing in a daily basis, denoted by X (i) ; • Contribution of factors to the prediction of daily stock returns, denoted by
∑ T +iD k=T +(i-1)D+1 w (i) j x k j .
By collecting the feedback from traders in our pilot study, we further extracted three metrics that are widely-used in industry to delineate the utilization of each factor. These two metrics are visualized in iQUANT to aid the interactive factor selection and stock portfolio construction process.
• Sensitivity: a metric that indicates whether the utilization of a factor can be replaced by other factors. The sensitivity is computed by (ξ i jξ i ) + where ξ i j denotes the prediction error by removing the jth factor from sparse regression models, ξ i denotes the prediction error of the original model; • Stability: a good factor for the predictive model should have stable contributions in a long period of time before confidently applied. Quantitatively, it is measured by the number of times the factor's contribution to a stock's prediction flips from negative to positive or from positive to negative. </p><h2>publication_ref</h2> <p>['b15'] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Visualization </p><h2>text</h2> <p> </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Control Panel </p><h2>text</h2> <p>The control panel in Figure 2(a) allows users to select an initial pool of stocks for analysis (T1). S/he can input the stock code to select an individual stock or choose an entire sector of stocks from a sector list. All the selected stocks will appear in the bottom part of the control panel, aggregated by sectors. Next, users need to specify a time period and a model for factor investing. Finally, users click the "Draw" button to visualize factors related to the selected stocks. </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>['fig_2'] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Factor View </p><h2>text</h2> <p>Factor view (Figure 2 To meet the above design requirements, we propose a customized visual design to integrate time-varying factor importance metrics in a single factor view. As shown in Figure 2(b), the x-axis of the view indicates a timeline divided into multiple time units (months by default). Each factor is visualized as a series of filled circles in these time units. On each circle, the color hue encodes factor type, the color opacity encodes the factor sensitivity to the model, and the circle radius represents the aggregated factor importance to all the selected stocks. Three importance metrics can be displayed by the checkboxes in the top row of the factor view: weight, value, and contribution (default). All the circles on the same time unit are vertically aligned by a fixed order of their corresponding factors to facilitate factor tracking and comparison along the timeline. As each factor can have a positive or negative contribution in different time units, we depict positive and negative factors as circles above and below the x-axis respectively.
User interactions are designed in the factor view to help identify useful factors for modeling. When a user hovers a factor circle, all the circles representing the same factor are linked by a curved line to reveal its stability over time. (Figure 2(b)). Also, a tooltip will be displayed, showing the detailed information of the factor circle such as factor type, name, sensitivity and importance metric. The user can interactively filter factors to reduce visual complexity.
Alternative designs of the factor view have been considered. The line chart is the most intuitive form to visualize factor importance over time. When we have as many as 56 factors, line charts suffer from severe visual clutter. Stacked flow chart [BW08] is another possible visual design. A quick overview of factor composition can be provided, but it is not good at displaying the temporal dynamics of individual factors (especially for unimportant factors). For the circle layout, we also experimented with circle packing in which positive and negative factors are placed separately. The circle packing leads to more compact visualization (Figure 3(a)). However, our domain experts complained that the design made it difficult to track individual factors across the timeline. The relative position of the same factor circle varied a lot across different time units. In an improved layered circle packing (Figure 3(b)), which is similar to a matrix design, the same type of factors is aligned horizontally. It facilitates tracking of the same factor, but the space usage is inefficient and the connecting lines on factors lead to heavy crossings. The current design is a good trade-off between space usage and effectiveness compared with other alternative designs. </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>['fig_2', 'fig_2', 'fig_2', 'fig_4', 'fig_4'] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Stock View </p><h2>text</h2> <p>Stock view (Figure 2(c)) splits the aggregated factor time series in the factor view according to their importance to individual stocks. This helps to evaluate the factor performance among different stocks and sectors (T2). The visual design is challenging, as the space for each stock is limited and there could be many factors relevant to a stock. On each factor, there are also multiple attributes to be visualized, e.g., the magnitude and polarity of importance (contribution), the model bias, and the trend of the stock price.
In our design, the visualization of each stock follows a similar layout to the display in the factor view. As shown in Figure 2(c), the x-axis is a timeline divided into units. At each time unit, a stock bar is drawn (the yellow bar of Figure 6 (d)), whose height represents the ratio of stock price change in this time unit and width represents the rate of prediction error on the price change by models. A red (green) bar indicates a rise (drop) of the stock price. On top of and below each stock bar, there are two factor glyphs which summarize the factors having a positive and negative contribution to the price change in the predictive model.
The factor glyph at the top and bottom in Figure 6 (d) has a circular shape, and is composed of one inner circle and six angular sectors in the outside. The radius of the inner circle encodes the model bias. Each outer sector represents one type of factors, with the size of each sector indicating the sum of all factor's importance in this type. On each factor glyph, the top-5 factors with the highest importance in all factor types are displayed. When more than one factor from the same type belongs to the top-5, a Voronoi diagram is drawn to pack these factors in the same angular sector. Each region in the Voronoi diagram corresponds to one factor, with the region size indicating its importance. The sum of all the other factor's importance out of the top-5 category is represented by the grey region close to the glyph center. When users hover a Voronoi region of one factor, a line will be drawn to connect all the Voronoi regions of this factor over time. Meanwhile, a tooltip showing the factor type, name and importance will also appear. When the factor does not belong to the top-5 category, the line will be linked to zero position on the x-axis.
Alternative designs such as line chart and streamgraph [HHN00] are commonly used for visualizing temporal evolution of variables. In our scenario, the top-5 factors can be quite different in separate time units, making line charts or streamgraph discontinuous over time and hard to track by users. Commodity designs such as stacked bar charts and pie charts are also considered. Nevertheless, the stacked bar chart is not scalable to support dozens of factors in the same view. The pie chart can clearly show the percentage of each factor in importance, but again the relative position of the same factor can vary a lot in different units, making it hard to compare the evolution of the same factor. iQUANT is designed for financial factor selection, which makes it inevitable to consider much domain knowledge and incorporate different factors in our design. This can increase the design complexity and it takes some time for user to learn, but most of our users can be well prepared after a training session of about 10 minutes as indicated in Section 6.3, which we would argue is a reasonable learning effort. </p><h2>publication_ref</h2> <p>['b19'] </p><h2>figure_ref</h2> <p>['fig_2', 'fig_2', 'fig_7', 'fig_7'] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Factor List </p><h2>text</h2> <p>Factor list (Figure 2(d)) aggregates factor data together to depict the overall factor performance (T2). The six types of factors are listed in rows, with factors in one type uniformly distributed as factor bars in the same row. Each factor bar the positive and negative contribution of the factor in the entire time period, using the height of the bar above and below the x-axis respectively. Users can manually select factors by clicking factor bars, then the stock prediction models are re-built using the selected factors after triggering the "Draw" button. The factor performance in the stock view is also updated for iterative factor/stock selection. (T3) </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>['fig_2'] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Stock Return View </p><h2>text</h2> <p>Stock return view (Figure 2(e)) is organized by sectors. In each expandable sector box, the investment returns of all stocks in that sector are calculated by backtesting and displayed in multiple grey line charts. An additional blue line indicates the market return. Users could select promising stocks in the stock view and examine their returns by the lines highlighted in red. The stocks could be selected in the return view and added into a portfolio table. A "Backtest" button will trigger the backtesting computation by the selected factors (factor list) and selected stocks (portfolio table). </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>['fig_2'] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Backtesting View </p><h2>text</h2> <p>Backtesting view (Figure 2(f)) evaluates the investment performance of the selected portfolio (T4). Backtesting calculates the portfolio returns using historical stock data. The blue line indicates the average return in the market and the grey one indicates the portfolio return. A dotted line after the selected time period represents the predicted return in future. Comparison among multiple portfolios is enabled by adding more portfolio from the stock return view. </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>['fig_2'] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Multiple Views Interaction </p><h2>text</h2> <p>iQUANT supports interactions among multiple views for comprehensive evaluation of factor performance (T2) and interactive selection of stocks and factors (T3).
Selection of factors: Users can select/de-select factors by clicking factor circles in the factor view, Voronoi regions in the stock view, and factor bars in the factor list. Each change to the factor selection will trigger updates in all the views simultaneously.
Selection of stocks: An initial collection of stocks can be selected in the control panel. Users can further compose an investment portfolio by clicking the stock name in the stock view or the return curve in the stock return view. This helps to interactively and iteratively refine stock selection according to their returns or the performance of relevant factors. </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>User Experiment </p><h2>text</h2> <p> </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Design </p><h2>text</h2> <p>We conducted a formal user study to compare the effectiveness of iQUANT visualization design with a baseline factor visualization using commodity multiple line charts (See the supplementary material for more details of the baseline factor visualization used). Since there is no efficient tool that can fulfill the tasks mentioned in Task Characterization, we chose to compare iQUANT with the widelyused line charts in the stock market. In both designs, the time series of financial factors and stock prices were displayed. Users were required to complete multiple tasks involving the selection of factors and stocks for investment, which corresponded well with T1∼T3 in Task Characterization. In total, 14 expert quantitative traders were recruited as subjects, who were paid for their valuable time. We applied a between-subject design that subjects were randomly assigned to two groups of equal size. The seven subjects in each group will complete all the tasks with only one visualization, iQUANT or baseline. The experiment was composed of two sessions. In the first training session, subjects were presented with a tutorial and allowed a trial usage of iQUANT to be tested. In the subsequent formal test session, each subject took seven tasks. To alleviate the influence of financial data on the result and increase statistical power, we presented two stock data. Each subject was required to complete all the tasks with both data using the tested visualization. The full documents of the experiment design are provided in Appendix A. The user tasks can be categorized into four groups.
Q1/Q2 (factor selection by contribution): Among all the factors, which factors have the highest positive/negative contribution to the return of a particular stock during a given time period? Q3 (factor selection by stability): Among all the factors, which factors have the highest unstable contribution to the return of a particular stock during a given time period? Q4/Q5 (factor selection by contribution to a sector of stocks): Among all the factors, which factors have the highest positive/negative contribution to the return of all stocks in a particular sector during a given time period? Q6/Q7 (stock selection by factor contribution): Among all the stocks in a given sector, whose return receive the highest positive/negative contribution from a selected factor during a given time period?
For each question, the subject was required to provide 1 ∼ 2 answers. Because of the between-subject design, subjects were not asked for their subjective rating on each visualization (no within-subject comparison). Instead, we collected their verbal feedback on the pros and cons of each design. </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Result and Analysis </p><h2>text</h2> <p>We compute the accuracy of each user's response to a question by comparing them with top-2 answers. The overall accuracy is measured by the number of correct answers to each question. In Figure 4, we depict the accuracy and completion time of four groups of seven questions. Because both accuracy and time do not follow normal distributions, we apply the Mann-Whitney test to analyze.
On task accuracy (Figure 4(a)), the result reveals that, for factor selection by contribution (Q1/Q2), by stability (Q3), and stock selection by factor contribution (Q6/Q7), the accuracy of iQUANT is significantly higher than the baseline design: U = 324.0, p = .024 for Q1/Q2; U = 30.0, p = .001 for Q3; U = 207.0, p < .001 for Q6/Q7. The average task accuracies are 1.14±0.14 (iQUANT) and 0.96±0.07 (baseline) for Q1/Q2; 1.29±0.27 (iQUANT) and 0.43±0.3 (baseline) for Q3; 1.36±0.19 (iQUANT) and 0.82±0.15 (baseline) for Q6/Q7. For factor selection in a sector (Q4/Q5), the accuracy difference between the iQUANT and baseline is not significant (U = 364.0, p = .15), though the average accuracy of iQUANT (1.0±0.0) is higher than the baseline (0.93±0.1).
On task completion time (Figure 4(b)), the result reveals that, for factor selection by stability (Q3), the completion time using iQUANT is significantly shorter than the baseline design (U = 30.5, p = .002). The average completion times are 27.2s±3.8s (iQUANT) and 50.9s±12.8s (baseline). For factor selection by contribution (Q1/Q2), in a sector of stocks (Q4/Q5), and stock selection by factor contribution (Q6/Q7), the completion time using iQUANT is not significantly shorter than the baseline design: U = 359.0, p = .58 for Q1/Q2; U = 367.0, p = .68 for Q4/Q5; U = 342.0, p = .41 for Q6/Q7. The average completion times are 17.1s±3.4s (iQUANT) and 16.2±3.6s (baseline) for Q1/Q2; 15.9s±3.4s (iQUANT) and 15.9s±4.5s (baseline) for Q4/Q5; 20.4s±3.6s (iQUANT) and 29.3s±9.0s (baseline) for Q6/Q7.
The study result indicates that, on most tasks, iQUANT leads to higher task accuracy than the baseline design. The only exception happens on the factor selection task for a sector of stocks (Q4/Q5). It is found that in the stock data used for these two questions, the factor having the highest positive/negative contribution is quite separated from all the other factors. Hence, only the top-1 factor is used as the correct answer, and in both designs, subjects could easily identify this factor (a 100% accuracy for iQUANT). For similarly easy tasks (Q1/Q2 and Q6/Q7), though the baseline design in most case helps to identify one (but only one) top factor, the accuracy of iQUANT is significantly higher because subjects could quickly discover more top factors in comparison to the baseline design. For the hard task of selecting factors by stability (Q3), the advantage of iQUANT in accuracy becomes the highest. Meanwhile, on completion time, iQUANT is favored only in the hard task of Q3, for which the iQUANT design can better support temporal comparison and analytics of factor contribution. For the other tasks, the completion time is similar in both iQUANT and baseline design. </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>['fig_5', 'fig_5', 'fig_5'] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Expert Feedback </p><h2>text</h2> <p>In the user experiment, experts also provided valuable feedback about several aspects of iQUANT . On positive aspects, some experts stressed that iQUANT presented an effective way to visually compare salient factors among different sectors of the market. In practice, the factor constituent and dynamics are truly different across sectors, which is of great importance to factor investing. As supported by the study result, experts also found iQUANT to be useful in analyzing the temporal dimension of factors, as well as the relationship between factors and stocks, which are exactly our design goal. Overall, subjects reported the iQUANT interface to be user-friendly, as our design was similar to their familiar and popular tools. Some experts even commented that our design could be part of standard stock market analysis tools (e.g., the work from Bloomberg [SB13]).
On the other hand, it was suggested that the interface could incorporate more statistical information according to the industry standard (e.g., the change of stock holdings in the backtesting view). The Voronoi map for top-5 factors could be reduced to only show the top-3 or less, in order to better reveal the most salient signal for the stock market. More detailed visual encoding could be applied to distinguish the factors of the same type, which are now depicted in the same color. Notably, we thought the complexity of the interface could raise learning issues. During the study, most subjects could be well prepared after a 10-minute training session, as indicated by the high task accuracy in applying iQUANT. </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Case Study </p><h2>text</h2> <p> </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Selection of Investment Time </p><h2>text</h2> <p>We first invited a fund manager to select the best investment time for individual stock with iQUANT. He looked at the year of 2016.2-2017.1 when the market index rose by 15.7%. From a list of candidates, the manager examined each stock until a feasible investment time for excess return is identified.
The manager reported stock in the Computer sector (code: 002351.SZ) for which the composite index of the whole sector rose by 2.5%. In his analysis, the Lasso model was selected. As shown in Figure 5(a1), the initial factor view displays a summary of important factors recommended by the Lasso model. In the factor list view (Figure 5(a2)), the manager identified several useful factors having large contribution to the stock return. He hovered these factors one by one to examine their performance in the given period. The AM factor (asset-to-market ratio) was chosen because its contributions are stable in the first six months: all negative to the rise of stock prices. There are two months when the factor sen- sitivity is high, as indicated by opaque colors. By this one-factor model, the investment return (red curve in Figure 5(a3)) surpasses the stock price change (blue curve) by 26.5% at the end of the period. A maximal return of 11% can also be forecast for the next three months, as shown by the grey dotted curve in the backtesting view of Figure 5(a4). Notably, the manager suggested applying the model from June when the AM factor has been stable for four months and enjoys a high sensitivity in the latest month (May). In case this strategy was adopted, an excess return of 39.1% could be earned in June when the overall market only rose by 1.6%.
To optimize the investment for the whole year, the manager explored other factors that can characterize the price change in the second half of the year. He found that the volumed factor was complementary to AM, as the volumed factor contributed to the model mainly from July (Figure 5(b1)). By applying a AM+volumed twofactor model, a return of 81.8% can be obtained by the end of the period, which is 14.5% more than the one-factor model (Figure 5(b3)). Notably, the predicted return for the next three months increases to 40.9% with the new model (Figure 5(b4)). </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>['fig_6', 'fig_6', 'fig_6', 'fig_6', 'fig_6', 'fig_6'] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Selection of Stock Portfolio </p><h2>text</h2> <p>In the second scenario, we invited the fund manager to select a portfolio of stocks to invest from an initial stock pool in a given time period. The sector-based division was adopted. The manager analyzed every candidate sector, and combined the selected stocks in each sector into a final portfolio for investment. The year of 2015 was considered when the market experienced a spike with the maximal index climbing as high as 60% in the first six months. The yearly growth was 9.4% after the downturn in the second half of the year. It is thus an appropriate scenario to test whether our tool can improve factor investing even in rapidly changing markets.
The manager first studied the Chemical sector which had a similar trend to the market in 2015. The factor view in Figure 2(b) visualizes an initial collection of factors using the ELNetApp model. It can be seen in the factor view that many factors are quite stable over time. Different from the study on individual stocks, for portfolio construction, the manager would like to select both valuable factors and a set of stocks whose selected factors behave in a similarly stable and effective way. Our tool provides support with an interactive selection process. Users can click on each important factor in the factor list (Figure 2(d)) and scroll in the stock view (Figure 2(c)) to identify candidate stocks. By this process, the manager found factor lagretn, which had a moderate overall contribution to stock returns of the sector (Figure 2(d)) and the contribution was stable on several individual stocks. As shown in Figure 6(a), the selected stocks share similar patterns on lagretn. When the stock price started to rise again from September (notice red/green bars in Figure 2(c)), the contribution of lagretn reversed to negative and stayed for few months, as shown by the connecting lines in Figure 6(a). It is found in Figure 6(b) that five stocks (red lines) sharing this pattern on lagretn receive excess returns above the sector average (blue line). The prediction performance in Figure 6(c) (grey dotted line) also surpasses the market average (blue dotted line).
The manager proceeded to interactively examine all the five selected stocks. In the factor list view, he checked again all the candidate factors and found the factor std dvol, which had a favorable pattern as the factor lagretn on all the selected stocks. After applying the two factors together (Figure 2(d)), the stock returns were re-computed and updated in Figure 2(e). One stock appeared to receive less return after adding the second factor, while all the other four stocks remained superior to the sector average. In the backtesting view (Figure 2(f)), the final portfolio of two factors and four stocks (red lines) turned out to be better than the single-factor portfolio (grey lines) in both the backtest performance in 2015 (solid lines) and an outlook in the first three months of 2016 (dotted lines).
In another study, we asked the manager to work in the Household Appliances sector in the same year of 2015. By repeating a similar process, he was able to build a two-factor model of size+retnmax. Three stocks having stable contributions were selected. The portfolio returns in both 2015 and 2016 (outlook) are better than the market average. We omit screenshots due to the space limit.
By comparing the visual analysis result in the above two sectors, it is noticed that the Appliance sector is almost exclusively influenced by the transaction factors, while the Chemical sector is influenced by transaction factors and other types of factors such as momentum, value, and growth (Figure 2(d)). We hypothesize that because of their relationship, the Chemical sector is not only affected by transactions in the stock market but also linked to the price of crude oil, which is independently traded.  </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>['fig_2', 'fig_2', 'fig_2', 'fig_2', 'fig_7', 'fig_2', 'fig_7', 'fig_7', 'fig_7', 'fig_2', 'fig_2', 'fig_2', 'fig_2'] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Discussion </p><h2>text</h2> <p>The sparse regression model and its flexibility. In our system, users routinely start from an initial set of factors recommended by the build-in sparse regression model, which potentially limits the flexibility of factor investing by iQUANT . This issue is alleviated from three directions: in the factor list view (Figure 2(d)), users can manually select any set of factors as the starting point of analysis; the sparsity parameter of the regression model (λ ) can be tuned in the backend to offer more or less initial factors; finally, the iQUANT system is fully compatible with any other sparse models or a combination of feature selection and prediction models.
The joint human-model approach and its advantage. We have mentioned in previous sections, the model-only approach in factor selection suffers from the interpretability issue. Traders need to understand the factor before applied in practice. Also, a human is better in a heuristic search of the best combination within the vast factor space. More importantly, in the financial domain, there is no model that works in the long term. It will be critical to have human stand by models, and would be better to early adjust accordingly.
The visual design and its learning curve. Notice that stock traders may not have a strong background in visualization. Thus, we tried to strike a balance between the intuitiveness and expressiveness of visualization. On one hand, classical designs such as bar charts and line charts are employed in iQUANT , due to their intuitiveness and users' familiarity. On the other hand, our designs are tailored to the target users. For example in the factor view, green/red are used to indicate the decline/rise of stock prices, according to the convention of our target market. The effectiveness of iQUANT design is confirmed by the user study result and expert feedback. Most subjects found iQUANT easy to learn and understand.
The user study and its design choices. We evaluated iQUANT through a formal user study focusing on the performance of factor/stock selection. The study would have accounted for more stages of iQUANT by looking at the final stock returns, or the accuracy in predicting. We stayed in the scope of evaluating factors for two reasons. First, the stock return by an interactive factor investing system is determined in complex interactions among factor/stock selection, predictive model, and trading strategy. A higher stock return in the study may or may not be directly correlated with a better factor selection design. Second, there is currently no com-mercial tool that supports end-to-end interactive factor investing. We compare iQUANT with a baseline design, which is not natively integrated with prediction models and trading strategies.
The deployment of iQUANT and its extensibility. The investment industry is highly closed as the winning secret can be too valuable to disclose. This closedness prohibits a more practical approach to directly optimize deployed tools. Instead, we developed a homegrown interactive factor investing pipeline and an end-to-end system. Because of the complexity of quantitative investment, we mainly focus on improving the factor selection in the pipeline. We demonstrated the effectiveness of iQUANT by using the 20-year real stock market data. However, our system can also be deployed to take in real-time data. As a next step, we plan to customize and integrate iQUANT into the production system of our industrial collaborators, in the hope of making real impacts on the industry. </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>['fig_2'] </p><h2>table_ref</h2> <p>[] </p><h2>heading</h2> <p>Conclusion </p><h2>text</h2> <p>This paper presents iQUANT, a visual analytics system that seamlessly integrates algorithmic and user-steered feature selection methods for interactive factor investing. On the analytics side, we explore the use of sparse regression models that jointly optimizing factor selection and stock prediction processes. On the visualization side, we propose multiple coordinated visual designs to comprehensively illustrate importance metrics of each factor, including its positive/negative contribution to models, the factor stability and sensitivity. On top of the prediction model and visualization design, iQUANT develops an interactive framework that encloses factor refinement and portfolio construction in the same visual analytics loop. With iQUANT , traders can optimize their investment strategy and evaluate them in industry-standard backtesting. We demonstrate the value of iQUANT through one formal user study and two case studies, using a real stock market dataset recording the stock data in the past 30 years. On the selection of investment time and stock portfolio, our domain experts achieved excess returns from both individual stock and sector-based portfolios. </p><h2>publication_ref</h2> <p>[] </p><h2>figure_ref</h2> <p>[] </p><h2>table_ref</h2> <p>[] </p>